/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e={679:(e,t,r)=>{"use strict";var n=r(864),a={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},s={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},i={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},o={};function l(e){return n.isMemo(e)?i:o[e.$$typeof]||a}o[n.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},o[n.Memo]=i;var c=Object.defineProperty,f=Object.getOwnPropertyNames,u=Object.getOwnPropertySymbols,h=Object.getOwnPropertyDescriptor,d=Object.getPrototypeOf,p=Object.prototype;e.exports=function e(t,r,n){if("string"!=typeof r){if(p){var a=d(r);a&&a!==p&&e(t,a,n)}var i=f(r);u&&(i=i.concat(u(r)));for(var o=l(t),m=l(r),g=0;g<i.length;++g){var v=i[g];if(!(s[v]||n&&n[v]||m&&m[v]||o&&o[v])){var b=h(r,v);try{c(t,v,b)}catch(e){}}}}return t}},448:(e,t,r)=>{"use strict";var n=r(294),a=r(840);function s(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=1;r<arguments.length;r++)t+="&args[]="+encodeURIComponent(arguments[r]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var i=new Set,o={};function l(e,t){c(e,t),c(e+"Capture",t)}function c(e,t){for(o[e]=t,e=0;e<t.length;e++)i.add(t[e])}var f=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),u=Object.prototype.hasOwnProperty,h=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,d={},p={};function m(e,t,r,n,a,s,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=n,this.attributeNamespace=a,this.mustUseProperty=r,this.propertyName=e,this.type=t,this.sanitizeURL=s,this.removeEmptyString=i}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new m(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var v=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function w(e,t,r,n){var a=g.hasOwnProperty(t)?g[t]:null;(null!==a?0!==a.type:n||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,r,n){if(null==t||function(e,t,r,n){if(null!==r&&0===r.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!n&&(null!==r?!r.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,r,n))return!0;if(n)return!1;if(null!==r)switch(r.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,r,a,n)&&(r=null),n||null===a?function(e){return!!u.call(p,e)||!u.call(d,e)&&(h.test(e)?p[e]=!0:(d[e]=!0,!1))}(t)&&(null===r?e.removeAttribute(t):e.setAttribute(t,""+r)):a.mustUseProperty?e[a.propertyName]=null===r?3!==a.type&&"":r:(t=a.attributeName,n=a.attributeNamespace,null===r?e.removeAttribute(t):(r=3===(a=a.type)||4===a&&!0===r?"":""+r,n?e.setAttributeNS(n,t,r):e.setAttribute(t,r))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(v,b);g[t]=new m(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(v,b);g[t]=new m(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(v,b);g[t]=new m(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var y=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,k=Symbol.for("react.element"),T=Symbol.for("react.portal"),S=Symbol.for("react.fragment"),E=Symbol.for("react.strict_mode"),x=Symbol.for("react.profiler"),_=Symbol.for("react.provider"),C=Symbol.for("react.context"),A=Symbol.for("react.forward_ref"),O=Symbol.for("react.suspense"),R=Symbol.for("react.suspense_list"),N=Symbol.for("react.memo"),I=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var P=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var D=Symbol.iterator;function F(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=D&&e[D]||e["@@iterator"])?e:null}var L,M=Object.assign;function U(e){if(void 0===L)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);L=t&&t[1]||""}return"\n"+L+e}var B=!1;function z(e,t){if(!e||B)return"";B=!0;var r=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var n=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){n=e}e.call(t.prototype)}else{try{throw Error()}catch(e){n=e}e()}}catch(t){if(t&&n&&"string"==typeof t.stack){for(var a=t.stack.split("\n"),s=n.stack.split("\n"),i=a.length-1,o=s.length-1;1<=i&&0<=o&&a[i]!==s[o];)o--;for(;1<=i&&0<=o;i--,o--)if(a[i]!==s[o]){if(1!==i||1!==o)do{if(i--,0>--o||a[i]!==s[o]){var l="\n"+a[i].replace(" at new "," at ");return e.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",e.displayName)),l}}while(1<=i&&0<=o);break}}}finally{B=!1,Error.prepareStackTrace=r}return(e=e?e.displayName||e.name:"")?U(e):""}function W(e){switch(e.tag){case 5:return U(e.type);case 16:return U("Lazy");case 13:return U("Suspense");case 19:return U("SuspenseList");case 0:case 2:case 15:return z(e.type,!1);case 11:return z(e.type.render,!1);case 1:return z(e.type,!0);default:return""}}function H(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case S:return"Fragment";case T:return"Portal";case x:return"Profiler";case E:return"StrictMode";case O:return"Suspense";case R:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case C:return(e.displayName||"Context")+".Consumer";case _:return(e._context.displayName||"Context")+".Provider";case A:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case N:return null!==(t=e.displayName||null)?t:H(e.type)||"Memo";case I:t=e._payload,e=e._init;try{return H(e(t))}catch(e){}}return null}function j(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return H(t);case 8:return t===E?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t}return null}function V(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function $(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function G(e){e._valueTracker||(e._valueTracker=function(e){var t=$(e)?"checked":"value",r=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),n=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==r&&"function"==typeof r.get&&"function"==typeof r.set){var a=r.get,s=r.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){n=""+e,s.call(this,e)}}),Object.defineProperty(e,t,{enumerable:r.enumerable}),{getValue:function(){return n},setValue:function(e){n=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function X(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var r=t.getValue(),n="";return e&&(n=$(e)?e.checked?"true":"false":e.value),(e=n)!==r&&(t.setValue(e),!0)}function Y(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function K(e,t){var r=t.checked;return M({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=r?r:e._wrapperState.initialChecked})}function q(e,t){var r=null==t.defaultValue?"":t.defaultValue,n=null!=t.checked?t.checked:t.defaultChecked;r=V(null!=t.value?t.value:r),e._wrapperState={initialChecked:n,initialValue:r,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Q(e,t){null!=(t=t.checked)&&w(e,"checked",t,!1)}function J(e,t){Q(e,t);var r=V(t.value),n=t.type;if(null!=r)"number"===n?(0===r&&""===e.value||e.value!=r)&&(e.value=""+r):e.value!==""+r&&(e.value=""+r);else if("submit"===n||"reset"===n)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,r):t.hasOwnProperty("defaultValue")&&ee(e,t.type,V(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Z(e,t,r){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var n=t.type;if(!("submit"!==n&&"reset"!==n||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,r||t===e.value||(e.value=t),e.defaultValue=t}""!==(r=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==r&&(e.name=r)}function ee(e,t,r){"number"===t&&Y(e.ownerDocument)===e||(null==r?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+r&&(e.defaultValue=""+r))}var te=Array.isArray;function re(e,t,r,n){if(e=e.options,t){t={};for(var a=0;a<r.length;a++)t["$"+r[a]]=!0;for(r=0;r<e.length;r++)a=t.hasOwnProperty("$"+e[r].value),e[r].selected!==a&&(e[r].selected=a),a&&n&&(e[r].defaultSelected=!0)}else{for(r=""+V(r),t=null,a=0;a<e.length;a++){if(e[a].value===r)return e[a].selected=!0,void(n&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function ne(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(s(91));return M({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ae(e,t){var r=t.value;if(null==r){if(r=t.children,t=t.defaultValue,null!=r){if(null!=t)throw Error(s(92));if(te(r)){if(1<r.length)throw Error(s(93));r=r[0]}t=r}null==t&&(t=""),r=t}e._wrapperState={initialValue:V(r)}}function se(e,t){var r=V(t.value),n=V(t.defaultValue);null!=r&&((r=""+r)!==e.value&&(e.value=r),null==t.defaultValue&&e.defaultValue!==r&&(e.defaultValue=r)),null!=n&&(e.defaultValue=""+n)}function ie(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function oe(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function le(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?oe(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ce,fe,ue=(fe=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ce=ce||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ce.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,r,n){MSApp.execUnsafeLocalFunction((function(){return fe(e,t)}))}:fe);function he(e,t){if(t){var r=e.firstChild;if(r&&r===e.lastChild&&3===r.nodeType)return void(r.nodeValue=t)}e.textContent=t}var de={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},pe=["Webkit","ms","Moz","O"];function me(e,t,r){return null==t||"boolean"==typeof t||""===t?"":r||"number"!=typeof t||0===t||de.hasOwnProperty(e)&&de[e]?(""+t).trim():t+"px"}function ge(e,t){for(var r in e=e.style,t)if(t.hasOwnProperty(r)){var n=0===r.indexOf("--"),a=me(r,t[r],n);"float"===r&&(r="cssFloat"),n?e.setProperty(r,a):e[r]=a}}Object.keys(de).forEach((function(e){pe.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),de[t]=de[e]}))}));var ve=M({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function be(e,t){if(t){if(ve[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(s(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(s(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(s(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(s(62))}}function we(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ye=null;function ke(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Te=null,Se=null,Ee=null;function xe(e){if(e=wa(e)){if("function"!=typeof Te)throw Error(s(280));var t=e.stateNode;t&&(t=ka(t),Te(e.stateNode,e.type,t))}}function _e(e){Se?Ee?Ee.push(e):Ee=[e]:Se=e}function Ce(){if(Se){var e=Se,t=Ee;if(Ee=Se=null,xe(e),t)for(e=0;e<t.length;e++)xe(t[e])}}function Ae(e,t){return e(t)}function Oe(){}var Re=!1;function Ne(e,t,r){if(Re)return e(t,r);Re=!0;try{return Ae(e,t,r)}finally{Re=!1,(null!==Se||null!==Ee)&&(Oe(),Ce())}}function Ie(e,t){var r=e.stateNode;if(null===r)return null;var n=ka(r);if(null===n)return null;r=n[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(n=!n.disabled)||(n=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!n;break e;default:e=!1}if(e)return null;if(r&&"function"!=typeof r)throw Error(s(231,t,typeof r));return r}var Pe=!1;if(f)try{var De={};Object.defineProperty(De,"passive",{get:function(){Pe=!0}}),window.addEventListener("test",De,De),window.removeEventListener("test",De,De)}catch(fe){Pe=!1}function Fe(e,t,r,n,a,s,i,o,l){var c=Array.prototype.slice.call(arguments,3);try{t.apply(r,c)}catch(e){this.onError(e)}}var Le=!1,Me=null,Ue=!1,Be=null,ze={onError:function(e){Le=!0,Me=e}};function We(e,t,r,n,a,s,i,o,l){Le=!1,Me=null,Fe.apply(ze,arguments)}function He(e){var t=e,r=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(4098&(t=e).flags)&&(r=t.return),e=t.return}while(e)}return 3===t.tag?r:null}function je(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Ve(e){if(He(e)!==e)throw Error(s(188))}function $e(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=He(e)))throw Error(s(188));return t!==e?null:e}for(var r=e,n=t;;){var a=r.return;if(null===a)break;var i=a.alternate;if(null===i){if(null!==(n=a.return)){r=n;continue}break}if(a.child===i.child){for(i=a.child;i;){if(i===r)return Ve(a),e;if(i===n)return Ve(a),t;i=i.sibling}throw Error(s(188))}if(r.return!==n.return)r=a,n=i;else{for(var o=!1,l=a.child;l;){if(l===r){o=!0,r=a,n=i;break}if(l===n){o=!0,n=a,r=i;break}l=l.sibling}if(!o){for(l=i.child;l;){if(l===r){o=!0,r=i,n=a;break}if(l===n){o=!0,n=i,r=a;break}l=l.sibling}if(!o)throw Error(s(189))}}if(r.alternate!==n)throw Error(s(190))}if(3!==r.tag)throw Error(s(188));return r.stateNode.current===r?e:t}(e))?Ge(e):null}function Ge(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=Ge(e);if(null!==t)return t;e=e.sibling}return null}var Xe=a.unstable_scheduleCallback,Ye=a.unstable_cancelCallback,Ke=a.unstable_shouldYield,qe=a.unstable_requestPaint,Qe=a.unstable_now,Je=a.unstable_getCurrentPriorityLevel,Ze=a.unstable_ImmediatePriority,et=a.unstable_UserBlockingPriority,tt=a.unstable_NormalPriority,rt=a.unstable_LowPriority,nt=a.unstable_IdlePriority,at=null,st=null,it=Math.clz32?Math.clz32:function(e){return 0==(e>>>=0)?32:31-(ot(e)/lt|0)|0},ot=Math.log,lt=Math.LN2,ct=64,ft=4194304;function ut(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function ht(e,t){var r=e.pendingLanes;if(0===r)return 0;var n=0,a=e.suspendedLanes,s=e.pingedLanes,i=268435455&r;if(0!==i){var o=i&~a;0!==o?n=ut(o):0!=(s&=i)&&(n=ut(s))}else 0!=(i=r&~a)?n=ut(i):0!==s&&(n=ut(s));if(0===n)return 0;if(0!==t&&t!==n&&0==(t&a)&&((a=n&-n)>=(s=t&-t)||16===a&&0!=(4194240&s)))return t;if(0!=(4&n)&&(n|=16&r),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=n;0<t;)a=1<<(r=31-it(t)),n|=e[r],t&=~a;return n}function dt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function pt(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function mt(){var e=ct;return 0==(4194240&(ct<<=1))&&(ct=64),e}function gt(e){for(var t=[],r=0;31>r;r++)t.push(e);return t}function vt(e,t,r){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-it(t)]=r}function bt(e,t){var r=e.entangledLanes|=t;for(e=e.entanglements;r;){var n=31-it(r),a=1<<n;a&t|e[n]&t&&(e[n]|=t),r&=~a}}var wt=0;function yt(e){return 1<(e&=-e)?4<e?0!=(268435455&e)?16:536870912:4:1}var kt,Tt,St,Et,xt,_t=!1,Ct=[],At=null,Ot=null,Rt=null,Nt=new Map,It=new Map,Pt=[],Dt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Ft(e,t){switch(e){case"focusin":case"focusout":At=null;break;case"dragenter":case"dragleave":Ot=null;break;case"mouseover":case"mouseout":Rt=null;break;case"pointerover":case"pointerout":Nt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":It.delete(t.pointerId)}}function Lt(e,t,r,n,a,s){return null===e||e.nativeEvent!==s?(e={blockedOn:t,domEventName:r,eventSystemFlags:n,nativeEvent:s,targetContainers:[a]},null!==t&&null!==(t=wa(t))&&Tt(t),e):(e.eventSystemFlags|=n,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function Mt(e){var t=ba(e.target);if(null!==t){var r=He(t);if(null!==r)if(13===(t=r.tag)){if(null!==(t=je(r)))return e.blockedOn=t,void xt(e.priority,(function(){St(r)}))}else if(3===t&&r.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===r.tag?r.stateNode.containerInfo:null)}e.blockedOn=null}function Ut(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var r=Kt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==r)return null!==(t=wa(r))&&Tt(t),e.blockedOn=r,!1;var n=new(r=e.nativeEvent).constructor(r.type,r);ye=n,r.target.dispatchEvent(n),ye=null,t.shift()}return!0}function Bt(e,t,r){Ut(e)&&r.delete(t)}function zt(){_t=!1,null!==At&&Ut(At)&&(At=null),null!==Ot&&Ut(Ot)&&(Ot=null),null!==Rt&&Ut(Rt)&&(Rt=null),Nt.forEach(Bt),It.forEach(Bt)}function Wt(e,t){e.blockedOn===t&&(e.blockedOn=null,_t||(_t=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,zt)))}function Ht(e){function t(t){return Wt(t,e)}if(0<Ct.length){Wt(Ct[0],e);for(var r=1;r<Ct.length;r++){var n=Ct[r];n.blockedOn===e&&(n.blockedOn=null)}}for(null!==At&&Wt(At,e),null!==Ot&&Wt(Ot,e),null!==Rt&&Wt(Rt,e),Nt.forEach(t),It.forEach(t),r=0;r<Pt.length;r++)(n=Pt[r]).blockedOn===e&&(n.blockedOn=null);for(;0<Pt.length&&null===(r=Pt[0]).blockedOn;)Mt(r),null===r.blockedOn&&Pt.shift()}var jt=y.ReactCurrentBatchConfig,Vt=!0;function $t(e,t,r,n){var a=wt,s=jt.transition;jt.transition=null;try{wt=1,Xt(e,t,r,n)}finally{wt=a,jt.transition=s}}function Gt(e,t,r,n){var a=wt,s=jt.transition;jt.transition=null;try{wt=4,Xt(e,t,r,n)}finally{wt=a,jt.transition=s}}function Xt(e,t,r,n){if(Vt){var a=Kt(e,t,r,n);if(null===a)Vn(e,t,n,Yt,r),Ft(e,n);else if(function(e,t,r,n,a){switch(t){case"focusin":return At=Lt(At,e,t,r,n,a),!0;case"dragenter":return Ot=Lt(Ot,e,t,r,n,a),!0;case"mouseover":return Rt=Lt(Rt,e,t,r,n,a),!0;case"pointerover":var s=a.pointerId;return Nt.set(s,Lt(Nt.get(s)||null,e,t,r,n,a)),!0;case"gotpointercapture":return s=a.pointerId,It.set(s,Lt(It.get(s)||null,e,t,r,n,a)),!0}return!1}(a,e,t,r,n))n.stopPropagation();else if(Ft(e,n),4&t&&-1<Dt.indexOf(e)){for(;null!==a;){var s=wa(a);if(null!==s&&kt(s),null===(s=Kt(e,t,r,n))&&Vn(e,t,n,Yt,r),s===a)break;a=s}null!==a&&n.stopPropagation()}else Vn(e,t,n,null,r)}}var Yt=null;function Kt(e,t,r,n){if(Yt=null,null!==(e=ba(e=ke(n))))if(null===(t=He(e)))e=null;else if(13===(r=t.tag)){if(null!==(e=je(t)))return e;e=null}else if(3===r){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Yt=e,null}function qt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Je()){case Ze:return 1;case et:return 4;case tt:case rt:return 16;case nt:return 536870912;default:return 16}default:return 16}}var Qt=null,Jt=null,Zt=null;function er(){if(Zt)return Zt;var e,t,r=Jt,n=r.length,a="value"in Qt?Qt.value:Qt.textContent,s=a.length;for(e=0;e<n&&r[e]===a[e];e++);var i=n-e;for(t=1;t<=i&&r[n-t]===a[s-t];t++);return Zt=a.slice(e,1<t?1-t:void 0)}function tr(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function rr(){return!0}function nr(){return!1}function ar(e){function t(t,r,n,a,s){for(var i in this._reactName=t,this._targetInst=n,this.type=r,this.nativeEvent=a,this.target=s,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(a):a[i]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?rr:nr,this.isPropagationStopped=nr,this}return M(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=rr)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=rr)},persist:function(){},isPersistent:rr}),t}var sr,ir,or,lr={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},cr=ar(lr),fr=M({},lr,{view:0,detail:0}),ur=ar(fr),hr=M({},fr,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Er,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==or&&(or&&"mousemove"===e.type?(sr=e.screenX-or.screenX,ir=e.screenY-or.screenY):ir=sr=0,or=e),sr)},movementY:function(e){return"movementY"in e?e.movementY:ir}}),dr=ar(hr),pr=ar(M({},hr,{dataTransfer:0})),mr=ar(M({},fr,{relatedTarget:0})),gr=ar(M({},lr,{animationName:0,elapsedTime:0,pseudoElement:0})),vr=M({},lr,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),br=ar(vr),wr=ar(M({},lr,{data:0})),yr={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},kr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Tr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Sr(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Tr[e])&&!!t[e]}function Er(){return Sr}var xr=M({},fr,{key:function(e){if(e.key){var t=yr[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tr(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?kr[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Er,charCode:function(e){return"keypress"===e.type?tr(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tr(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),_r=ar(xr),Cr=ar(M({},hr,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Ar=ar(M({},fr,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Er})),Or=ar(M({},lr,{propertyName:0,elapsedTime:0,pseudoElement:0})),Rr=M({},hr,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Nr=ar(Rr),Ir=[9,13,27,32],Pr=f&&"CompositionEvent"in window,Dr=null;f&&"documentMode"in document&&(Dr=document.documentMode);var Fr=f&&"TextEvent"in window&&!Dr,Lr=f&&(!Pr||Dr&&8<Dr&&11>=Dr),Mr=String.fromCharCode(32),Ur=!1;function Br(e,t){switch(e){case"keyup":return-1!==Ir.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function zr(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Wr=!1,Hr={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function jr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Hr[e.type]:"textarea"===t}function Vr(e,t,r,n){_e(n),0<(t=Gn(t,"onChange")).length&&(r=new cr("onChange","change",null,r,n),e.push({event:r,listeners:t}))}var $r=null,Gr=null;function Xr(e){Un(e,0)}function Yr(e){if(X(ya(e)))return e}function Kr(e,t){if("change"===e)return t}var qr=!1;if(f){var Qr;if(f){var Jr="oninput"in document;if(!Jr){var Zr=document.createElement("div");Zr.setAttribute("oninput","return;"),Jr="function"==typeof Zr.oninput}Qr=Jr}else Qr=!1;qr=Qr&&(!document.documentMode||9<document.documentMode)}function en(){$r&&($r.detachEvent("onpropertychange",tn),Gr=$r=null)}function tn(e){if("value"===e.propertyName&&Yr(Gr)){var t=[];Vr(t,Gr,e,ke(e)),Ne(Xr,t)}}function rn(e,t,r){"focusin"===e?(en(),Gr=r,($r=t).attachEvent("onpropertychange",tn)):"focusout"===e&&en()}function nn(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Yr(Gr)}function an(e,t){if("click"===e)return Yr(t)}function sn(e,t){if("input"===e||"change"===e)return Yr(t)}var on="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t};function ln(e,t){if(on(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var r=Object.keys(e),n=Object.keys(t);if(r.length!==n.length)return!1;for(n=0;n<r.length;n++){var a=r[n];if(!u.call(t,a)||!on(e[a],t[a]))return!1}return!0}function cn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function fn(e,t){var r,n=cn(e);for(e=0;n;){if(3===n.nodeType){if(r=e+n.textContent.length,e<=t&&r>=t)return{node:n,offset:t-e};e=r}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=cn(n)}}function un(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?un(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function hn(){for(var e=window,t=Y();t instanceof e.HTMLIFrameElement;){try{var r="string"==typeof t.contentWindow.location.href}catch(e){r=!1}if(!r)break;t=Y((e=t.contentWindow).document)}return t}function dn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function pn(e){var t=hn(),r=e.focusedElem,n=e.selectionRange;if(t!==r&&r&&r.ownerDocument&&un(r.ownerDocument.documentElement,r)){if(null!==n&&dn(r))if(t=n.start,void 0===(e=n.end)&&(e=t),"selectionStart"in r)r.selectionStart=t,r.selectionEnd=Math.min(e,r.value.length);else if((e=(t=r.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var a=r.textContent.length,s=Math.min(n.start,a);n=void 0===n.end?s:Math.min(n.end,a),!e.extend&&s>n&&(a=n,n=s,s=a),a=fn(r,s);var i=fn(r,n);a&&i&&(1!==e.rangeCount||e.anchorNode!==a.node||e.anchorOffset!==a.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((t=t.createRange()).setStart(a.node,a.offset),e.removeAllRanges(),s>n?(e.addRange(t),e.extend(i.node,i.offset)):(t.setEnd(i.node,i.offset),e.addRange(t)))}for(t=[],e=r;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof r.focus&&r.focus(),r=0;r<t.length;r++)(e=t[r]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var mn=f&&"documentMode"in document&&11>=document.documentMode,gn=null,vn=null,bn=null,wn=!1;function yn(e,t,r){var n=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;wn||null==gn||gn!==Y(n)||(n="selectionStart"in(n=gn)&&dn(n)?{start:n.selectionStart,end:n.selectionEnd}:{anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},bn&&ln(bn,n)||(bn=n,0<(n=Gn(vn,"onSelect")).length&&(t=new cr("onSelect","select",null,t,r),e.push({event:t,listeners:n}),t.target=gn)))}function kn(e,t){var r={};return r[e.toLowerCase()]=t.toLowerCase(),r["Webkit"+e]="webkit"+t,r["Moz"+e]="moz"+t,r}var Tn={animationend:kn("Animation","AnimationEnd"),animationiteration:kn("Animation","AnimationIteration"),animationstart:kn("Animation","AnimationStart"),transitionend:kn("Transition","TransitionEnd")},Sn={},En={};function xn(e){if(Sn[e])return Sn[e];if(!Tn[e])return e;var t,r=Tn[e];for(t in r)if(r.hasOwnProperty(t)&&t in En)return Sn[e]=r[t];return e}f&&(En=document.createElement("div").style,"AnimationEvent"in window||(delete Tn.animationend.animation,delete Tn.animationiteration.animation,delete Tn.animationstart.animation),"TransitionEvent"in window||delete Tn.transitionend.transition);var _n=xn("animationend"),Cn=xn("animationiteration"),An=xn("animationstart"),On=xn("transitionend"),Rn=new Map,Nn="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function In(e,t){Rn.set(e,t),l(t,[e])}for(var Pn=0;Pn<Nn.length;Pn++){var Dn=Nn[Pn];In(Dn.toLowerCase(),"on"+(Dn[0].toUpperCase()+Dn.slice(1)))}In(_n,"onAnimationEnd"),In(Cn,"onAnimationIteration"),In(An,"onAnimationStart"),In("dblclick","onDoubleClick"),In("focusin","onFocus"),In("focusout","onBlur"),In(On,"onTransitionEnd"),c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),l("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),l("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),l("onBeforeInput",["compositionend","keypress","textInput","paste"]),l("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Fn="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ln=new Set("cancel close invalid load scroll toggle".split(" ").concat(Fn));function Mn(e,t,r){var n=e.type||"unknown-event";e.currentTarget=r,function(e,t,r,n,a,i,o,l,c){if(We.apply(this,arguments),Le){if(!Le)throw Error(s(198));var f=Me;Le=!1,Me=null,Ue||(Ue=!0,Be=f)}}(n,t,void 0,e),e.currentTarget=null}function Un(e,t){t=0!=(4&t);for(var r=0;r<e.length;r++){var n=e[r],a=n.event;n=n.listeners;e:{var s=void 0;if(t)for(var i=n.length-1;0<=i;i--){var o=n[i],l=o.instance,c=o.currentTarget;if(o=o.listener,l!==s&&a.isPropagationStopped())break e;Mn(a,o,c),s=l}else for(i=0;i<n.length;i++){if(l=(o=n[i]).instance,c=o.currentTarget,o=o.listener,l!==s&&a.isPropagationStopped())break e;Mn(a,o,c),s=l}}}if(Ue)throw e=Be,Ue=!1,Be=null,e}function Bn(e,t){var r=t[ma];void 0===r&&(r=t[ma]=new Set);var n=e+"__bubble";r.has(n)||(jn(t,e,2,!1),r.add(n))}function zn(e,t,r){var n=0;t&&(n|=4),jn(r,e,n,t)}var Wn="_reactListening"+Math.random().toString(36).slice(2);function Hn(e){if(!e[Wn]){e[Wn]=!0,i.forEach((function(t){"selectionchange"!==t&&(Ln.has(t)||zn(t,!1,e),zn(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Wn]||(t[Wn]=!0,zn("selectionchange",!1,t))}}function jn(e,t,r,n){switch(qt(t)){case 1:var a=$t;break;case 4:a=Gt;break;default:a=Xt}r=a.bind(null,t,r,e),a=void 0,!Pe||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),n?void 0!==a?e.addEventListener(t,r,{capture:!0,passive:a}):e.addEventListener(t,r,!0):void 0!==a?e.addEventListener(t,r,{passive:a}):e.addEventListener(t,r,!1)}function Vn(e,t,r,n,a){var s=n;if(0==(1&t)&&0==(2&t)&&null!==n)e:for(;;){if(null===n)return;var i=n.tag;if(3===i||4===i){var o=n.stateNode.containerInfo;if(o===a||8===o.nodeType&&o.parentNode===a)break;if(4===i)for(i=n.return;null!==i;){var l=i.tag;if((3===l||4===l)&&((l=i.stateNode.containerInfo)===a||8===l.nodeType&&l.parentNode===a))return;i=i.return}for(;null!==o;){if(null===(i=ba(o)))return;if(5===(l=i.tag)||6===l){n=s=i;continue e}o=o.parentNode}}n=n.return}Ne((function(){var n=s,a=ke(r),i=[];e:{var o=Rn.get(e);if(void 0!==o){var l=cr,c=e;switch(e){case"keypress":if(0===tr(r))break e;case"keydown":case"keyup":l=_r;break;case"focusin":c="focus",l=mr;break;case"focusout":c="blur",l=mr;break;case"beforeblur":case"afterblur":l=mr;break;case"click":if(2===r.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=dr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=pr;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=Ar;break;case _n:case Cn:case An:l=gr;break;case On:l=Or;break;case"scroll":l=ur;break;case"wheel":l=Nr;break;case"copy":case"cut":case"paste":l=br;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=Cr}var f=0!=(4&t),u=!f&&"scroll"===e,h=f?null!==o?o+"Capture":null:o;f=[];for(var d,p=n;null!==p;){var m=(d=p).stateNode;if(5===d.tag&&null!==m&&(d=m,null!==h&&null!=(m=Ie(p,h))&&f.push($n(p,m,d))),u)break;p=p.return}0<f.length&&(o=new l(o,c,null,r,a),i.push({event:o,listeners:f}))}}if(0==(7&t)){if(l="mouseout"===e||"pointerout"===e,(!(o="mouseover"===e||"pointerover"===e)||r===ye||!(c=r.relatedTarget||r.fromElement)||!ba(c)&&!c[pa])&&(l||o)&&(o=a.window===a?a:(o=a.ownerDocument)?o.defaultView||o.parentWindow:window,l?(l=n,null!==(c=(c=r.relatedTarget||r.toElement)?ba(c):null)&&(c!==(u=He(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(l=null,c=n),l!==c)){if(f=dr,m="onMouseLeave",h="onMouseEnter",p="mouse","pointerout"!==e&&"pointerover"!==e||(f=Cr,m="onPointerLeave",h="onPointerEnter",p="pointer"),u=null==l?o:ya(l),d=null==c?o:ya(c),(o=new f(m,p+"leave",l,r,a)).target=u,o.relatedTarget=d,m=null,ba(a)===n&&((f=new f(h,p+"enter",c,r,a)).target=d,f.relatedTarget=u,m=f),u=m,l&&c)e:{for(h=c,p=0,d=f=l;d;d=Xn(d))p++;for(d=0,m=h;m;m=Xn(m))d++;for(;0<p-d;)f=Xn(f),p--;for(;0<d-p;)h=Xn(h),d--;for(;p--;){if(f===h||null!==h&&f===h.alternate)break e;f=Xn(f),h=Xn(h)}f=null}else f=null;null!==l&&Yn(i,o,l,f,!1),null!==c&&null!==u&&Yn(i,u,c,f,!0)}if("select"===(l=(o=n?ya(n):window).nodeName&&o.nodeName.toLowerCase())||"input"===l&&"file"===o.type)var g=Kr;else if(jr(o))if(qr)g=sn;else{g=nn;var v=rn}else(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(g=an);switch(g&&(g=g(e,n))?Vr(i,g,r,a):(v&&v(e,o,n),"focusout"===e&&(v=o._wrapperState)&&v.controlled&&"number"===o.type&&ee(o,"number",o.value)),v=n?ya(n):window,e){case"focusin":(jr(v)||"true"===v.contentEditable)&&(gn=v,vn=n,bn=null);break;case"focusout":bn=vn=gn=null;break;case"mousedown":wn=!0;break;case"contextmenu":case"mouseup":case"dragend":wn=!1,yn(i,r,a);break;case"selectionchange":if(mn)break;case"keydown":case"keyup":yn(i,r,a)}var b;if(Pr)e:{switch(e){case"compositionstart":var w="onCompositionStart";break e;case"compositionend":w="onCompositionEnd";break e;case"compositionupdate":w="onCompositionUpdate";break e}w=void 0}else Wr?Br(e,r)&&(w="onCompositionEnd"):"keydown"===e&&229===r.keyCode&&(w="onCompositionStart");w&&(Lr&&"ko"!==r.locale&&(Wr||"onCompositionStart"!==w?"onCompositionEnd"===w&&Wr&&(b=er()):(Jt="value"in(Qt=a)?Qt.value:Qt.textContent,Wr=!0)),0<(v=Gn(n,w)).length&&(w=new wr(w,e,null,r,a),i.push({event:w,listeners:v}),(b||null!==(b=zr(r)))&&(w.data=b))),(b=Fr?function(e,t){switch(e){case"compositionend":return zr(t);case"keypress":return 32!==t.which?null:(Ur=!0,Mr);case"textInput":return(e=t.data)===Mr&&Ur?null:e;default:return null}}(e,r):function(e,t){if(Wr)return"compositionend"===e||!Pr&&Br(e,t)?(e=er(),Zt=Jt=Qt=null,Wr=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Lr&&"ko"!==t.locale?null:t.data}}(e,r))&&0<(n=Gn(n,"onBeforeInput")).length&&(a=new wr("onBeforeInput","beforeinput",null,r,a),i.push({event:a,listeners:n}),a.data=b)}Un(i,t)}))}function $n(e,t,r){return{instance:e,listener:t,currentTarget:r}}function Gn(e,t){for(var r=t+"Capture",n=[];null!==e;){var a=e,s=a.stateNode;5===a.tag&&null!==s&&(a=s,null!=(s=Ie(e,r))&&n.unshift($n(e,s,a)),null!=(s=Ie(e,t))&&n.push($n(e,s,a))),e=e.return}return n}function Xn(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Yn(e,t,r,n,a){for(var s=t._reactName,i=[];null!==r&&r!==n;){var o=r,l=o.alternate,c=o.stateNode;if(null!==l&&l===n)break;5===o.tag&&null!==c&&(o=c,a?null!=(l=Ie(r,s))&&i.unshift($n(r,l,o)):a||null!=(l=Ie(r,s))&&i.push($n(r,l,o))),r=r.return}0!==i.length&&e.push({event:t,listeners:i})}var Kn=/\r\n?/g,qn=/\u0000|\uFFFD/g;function Qn(e){return("string"==typeof e?e:""+e).replace(Kn,"\n").replace(qn,"")}function Jn(e,t,r){if(t=Qn(t),Qn(e)!==t&&r)throw Error(s(425))}function Zn(){}var ea=null,ta=null;function ra(e,t){return"textarea"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var na="function"==typeof setTimeout?setTimeout:void 0,aa="function"==typeof clearTimeout?clearTimeout:void 0,sa="function"==typeof Promise?Promise:void 0,ia="function"==typeof queueMicrotask?queueMicrotask:void 0!==sa?function(e){return sa.resolve(null).then(e).catch(oa)}:na;function oa(e){setTimeout((function(){throw e}))}function la(e,t){var r=t,n=0;do{var a=r.nextSibling;if(e.removeChild(r),a&&8===a.nodeType)if("/$"===(r=a.data)){if(0===n)return e.removeChild(a),void Ht(t);n--}else"$"!==r&&"$?"!==r&&"$!"!==r||n++;r=a}while(r);Ht(t)}function ca(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function fa(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var r=e.data;if("$"===r||"$!"===r||"$?"===r){if(0===t)return e;t--}else"/$"===r&&t++}e=e.previousSibling}return null}var ua=Math.random().toString(36).slice(2),ha="__reactFiber$"+ua,da="__reactProps$"+ua,pa="__reactContainer$"+ua,ma="__reactEvents$"+ua,ga="__reactListeners$"+ua,va="__reactHandles$"+ua;function ba(e){var t=e[ha];if(t)return t;for(var r=e.parentNode;r;){if(t=r[pa]||r[ha]){if(r=t.alternate,null!==t.child||null!==r&&null!==r.child)for(e=fa(e);null!==e;){if(r=e[ha])return r;e=fa(e)}return t}r=(e=r).parentNode}return null}function wa(e){return!(e=e[ha]||e[pa])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function ya(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(s(33))}function ka(e){return e[da]||null}var Ta=[],Sa=-1;function Ea(e){return{current:e}}function xa(e){0>Sa||(e.current=Ta[Sa],Ta[Sa]=null,Sa--)}function _a(e,t){Sa++,Ta[Sa]=e.current,e.current=t}var Ca={},Aa=Ea(Ca),Oa=Ea(!1),Ra=Ca;function Na(e,t){var r=e.type.contextTypes;if(!r)return Ca;var n=e.stateNode;if(n&&n.__reactInternalMemoizedUnmaskedChildContext===t)return n.__reactInternalMemoizedMaskedChildContext;var a,s={};for(a in r)s[a]=t[a];return n&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=s),s}function Ia(e){return null!=e.childContextTypes}function Pa(){xa(Oa),xa(Aa)}function Da(e,t,r){if(Aa.current!==Ca)throw Error(s(168));_a(Aa,t),_a(Oa,r)}function Fa(e,t,r){var n=e.stateNode;if(t=t.childContextTypes,"function"!=typeof n.getChildContext)return r;for(var a in n=n.getChildContext())if(!(a in t))throw Error(s(108,j(e)||"Unknown",a));return M({},r,n)}function La(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Ca,Ra=Aa.current,_a(Aa,e),_a(Oa,Oa.current),!0}function Ma(e,t,r){var n=e.stateNode;if(!n)throw Error(s(169));r?(e=Fa(e,t,Ra),n.__reactInternalMemoizedMergedChildContext=e,xa(Oa),xa(Aa),_a(Aa,e)):xa(Oa),_a(Oa,r)}var Ua=null,Ba=!1,za=!1;function Wa(e){null===Ua?Ua=[e]:Ua.push(e)}function Ha(){if(!za&&null!==Ua){za=!0;var e=0,t=wt;try{var r=Ua;for(wt=1;e<r.length;e++){var n=r[e];do{n=n(!0)}while(null!==n)}Ua=null,Ba=!1}catch(t){throw null!==Ua&&(Ua=Ua.slice(e+1)),Xe(Ze,Ha),t}finally{wt=t,za=!1}}return null}var ja=[],Va=0,$a=null,Ga=0,Xa=[],Ya=0,Ka=null,qa=1,Qa="";function Ja(e,t){ja[Va++]=Ga,ja[Va++]=$a,$a=e,Ga=t}function Za(e,t,r){Xa[Ya++]=qa,Xa[Ya++]=Qa,Xa[Ya++]=Ka,Ka=e;var n=qa;e=Qa;var a=32-it(n)-1;n&=~(1<<a),r+=1;var s=32-it(t)+a;if(30<s){var i=a-a%5;s=(n&(1<<i)-1).toString(32),n>>=i,a-=i,qa=1<<32-it(t)+a|r<<a|n,Qa=s+e}else qa=1<<s|r<<a|n,Qa=e}function es(e){null!==e.return&&(Ja(e,1),Za(e,1,0))}function ts(e){for(;e===$a;)$a=ja[--Va],ja[Va]=null,Ga=ja[--Va],ja[Va]=null;for(;e===Ka;)Ka=Xa[--Ya],Xa[Ya]=null,Qa=Xa[--Ya],Xa[Ya]=null,qa=Xa[--Ya],Xa[Ya]=null}var rs=null,ns=null,as=!1,ss=null;function is(e,t){var r=Nc(5,null,null,0);r.elementType="DELETED",r.stateNode=t,r.return=e,null===(t=e.deletions)?(e.deletions=[r],e.flags|=16):t.push(r)}function os(e,t){switch(e.tag){case 5:var r=e.type;return null!==(t=1!==t.nodeType||r.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,rs=e,ns=ca(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,rs=e,ns=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(r=null!==Ka?{id:qa,overflow:Qa}:null,e.memoizedState={dehydrated:t,treeContext:r,retryLane:1073741824},(r=Nc(18,null,null,0)).stateNode=t,r.return=e,e.child=r,rs=e,ns=null,!0);default:return!1}}function ls(e){return 0!=(1&e.mode)&&0==(128&e.flags)}function cs(e){if(as){var t=ns;if(t){var r=t;if(!os(e,t)){if(ls(e))throw Error(s(418));t=ca(r.nextSibling);var n=rs;t&&os(e,t)?is(n,r):(e.flags=-4097&e.flags|2,as=!1,rs=e)}}else{if(ls(e))throw Error(s(418));e.flags=-4097&e.flags|2,as=!1,rs=e}}}function fs(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;rs=e}function us(e){if(e!==rs)return!1;if(!as)return fs(e),as=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!ra(e.type,e.memoizedProps)),t&&(t=ns)){if(ls(e))throw hs(),Error(s(418));for(;t;)is(e,t),t=ca(t.nextSibling)}if(fs(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(s(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var r=e.data;if("/$"===r){if(0===t){ns=ca(e.nextSibling);break e}t--}else"$"!==r&&"$!"!==r&&"$?"!==r||t++}e=e.nextSibling}ns=null}}else ns=rs?ca(e.stateNode.nextSibling):null;return!0}function hs(){for(var e=ns;e;)e=ca(e.nextSibling)}function ds(){ns=rs=null,as=!1}function ps(e){null===ss?ss=[e]:ss.push(e)}var ms=y.ReactCurrentBatchConfig;function gs(e,t){if(e&&e.defaultProps){for(var r in t=M({},t),e=e.defaultProps)void 0===t[r]&&(t[r]=e[r]);return t}return t}var vs=Ea(null),bs=null,ws=null,ys=null;function ks(){ys=ws=bs=null}function Ts(e){var t=vs.current;xa(vs),e._currentValue=t}function Ss(e,t,r){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==n&&(n.childLanes|=t)):null!==n&&(n.childLanes&t)!==t&&(n.childLanes|=t),e===r)break;e=e.return}}function Es(e,t){bs=e,ys=ws=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(yo=!0),e.firstContext=null)}function xs(e){var t=e._currentValue;if(ys!==e)if(e={context:e,memoizedValue:t,next:null},null===ws){if(null===bs)throw Error(s(308));ws=e,bs.dependencies={lanes:0,firstContext:e}}else ws=ws.next=e;return t}var _s=null;function Cs(e){null===_s?_s=[e]:_s.push(e)}function As(e,t,r,n){var a=t.interleaved;return null===a?(r.next=r,Cs(t)):(r.next=a.next,a.next=r),t.interleaved=r,Os(e,n)}function Os(e,t){e.lanes|=t;var r=e.alternate;for(null!==r&&(r.lanes|=t),r=e,e=e.return;null!==e;)e.childLanes|=t,null!==(r=e.alternate)&&(r.childLanes|=t),r=e,e=e.return;return 3===r.tag?r.stateNode:null}var Rs=!1;function Ns(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Is(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Ps(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Ds(e,t,r){var n=e.updateQueue;if(null===n)return null;if(n=n.shared,0!=(2&Al)){var a=n.pending;return null===a?t.next=t:(t.next=a.next,a.next=t),n.pending=t,Os(e,r)}return null===(a=n.interleaved)?(t.next=t,Cs(n)):(t.next=a.next,a.next=t),n.interleaved=t,Os(e,r)}function Fs(e,t,r){if(null!==(t=t.updateQueue)&&(t=t.shared,0!=(4194240&r))){var n=t.lanes;r|=n&=e.pendingLanes,t.lanes=r,bt(e,r)}}function Ls(e,t){var r=e.updateQueue,n=e.alternate;if(null!==n&&r===(n=n.updateQueue)){var a=null,s=null;if(null!==(r=r.firstBaseUpdate)){do{var i={eventTime:r.eventTime,lane:r.lane,tag:r.tag,payload:r.payload,callback:r.callback,next:null};null===s?a=s=i:s=s.next=i,r=r.next}while(null!==r);null===s?a=s=t:s=s.next=t}else a=s=t;return r={baseState:n.baseState,firstBaseUpdate:a,lastBaseUpdate:s,shared:n.shared,effects:n.effects},void(e.updateQueue=r)}null===(e=r.lastBaseUpdate)?r.firstBaseUpdate=t:e.next=t,r.lastBaseUpdate=t}function Ms(e,t,r,n){var a=e.updateQueue;Rs=!1;var s=a.firstBaseUpdate,i=a.lastBaseUpdate,o=a.shared.pending;if(null!==o){a.shared.pending=null;var l=o,c=l.next;l.next=null,null===i?s=c:i.next=c,i=l;var f=e.alternate;null!==f&&(o=(f=f.updateQueue).lastBaseUpdate)!==i&&(null===o?f.firstBaseUpdate=c:o.next=c,f.lastBaseUpdate=l)}if(null!==s){var u=a.baseState;for(i=0,f=c=l=null,o=s;;){var h=o.lane,d=o.eventTime;if((n&h)===h){null!==f&&(f=f.next={eventTime:d,lane:0,tag:o.tag,payload:o.payload,callback:o.callback,next:null});e:{var p=e,m=o;switch(h=t,d=r,m.tag){case 1:if("function"==typeof(p=m.payload)){u=p.call(d,u,h);break e}u=p;break e;case 3:p.flags=-65537&p.flags|128;case 0:if(null==(h="function"==typeof(p=m.payload)?p.call(d,u,h):p))break e;u=M({},u,h);break e;case 2:Rs=!0}}null!==o.callback&&0!==o.lane&&(e.flags|=64,null===(h=a.effects)?a.effects=[o]:h.push(o))}else d={eventTime:d,lane:h,tag:o.tag,payload:o.payload,callback:o.callback,next:null},null===f?(c=f=d,l=u):f=f.next=d,i|=h;if(null===(o=o.next)){if(null===(o=a.shared.pending))break;o=(h=o).next,h.next=null,a.lastBaseUpdate=h,a.shared.pending=null}}if(null===f&&(l=u),a.baseState=l,a.firstBaseUpdate=c,a.lastBaseUpdate=f,null!==(t=a.shared.interleaved)){a=t;do{i|=a.lane,a=a.next}while(a!==t)}else null===s&&(a.shared.lanes=0);Ll|=i,e.lanes=i,e.memoizedState=u}}function Us(e,t,r){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var n=e[t],a=n.callback;if(null!==a){if(n.callback=null,n=r,"function"!=typeof a)throw Error(s(191,a));a.call(n)}}}var Bs=(new n.Component).refs;function zs(e,t,r,n){r=null==(r=r(n,t=e.memoizedState))?t:M({},t,r),e.memoizedState=r,0===e.lanes&&(e.updateQueue.baseState=r)}var Ws={isMounted:function(e){return!!(e=e._reactInternals)&&He(e)===e},enqueueSetState:function(e,t,r){e=e._reactInternals;var n=ec(),a=tc(e),s=Ps(n,a);s.payload=t,null!=r&&(s.callback=r),null!==(t=Ds(e,s,a))&&(rc(t,e,a,n),Fs(t,e,a))},enqueueReplaceState:function(e,t,r){e=e._reactInternals;var n=ec(),a=tc(e),s=Ps(n,a);s.tag=1,s.payload=t,null!=r&&(s.callback=r),null!==(t=Ds(e,s,a))&&(rc(t,e,a,n),Fs(t,e,a))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var r=ec(),n=tc(e),a=Ps(r,n);a.tag=2,null!=t&&(a.callback=t),null!==(t=Ds(e,a,n))&&(rc(t,e,n,r),Fs(t,e,n))}};function Hs(e,t,r,n,a,s,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(n,s,i):!(t.prototype&&t.prototype.isPureReactComponent&&ln(r,n)&&ln(a,s))}function js(e,t,r){var n=!1,a=Ca,s=t.contextType;return"object"==typeof s&&null!==s?s=xs(s):(a=Ia(t)?Ra:Aa.current,s=(n=null!=(n=t.contextTypes))?Na(e,a):Ca),t=new t(r,s),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=Ws,e.stateNode=t,t._reactInternals=e,n&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=s),t}function Vs(e,t,r,n){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(r,n),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(r,n),t.state!==e&&Ws.enqueueReplaceState(t,t.state,null)}function $s(e,t,r,n){var a=e.stateNode;a.props=r,a.state=e.memoizedState,a.refs=Bs,Ns(e);var s=t.contextType;"object"==typeof s&&null!==s?a.context=xs(s):(s=Ia(t)?Ra:Aa.current,a.context=Na(e,s)),a.state=e.memoizedState,"function"==typeof(s=t.getDerivedStateFromProps)&&(zs(e,t,s,r),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&Ws.enqueueReplaceState(a,a.state,null),Ms(e,r,a,n),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4194308)}function Gs(e,t,r){if(null!==(e=r.ref)&&"function"!=typeof e&&"object"!=typeof e){if(r._owner){if(r=r._owner){if(1!==r.tag)throw Error(s(309));var n=r.stateNode}if(!n)throw Error(s(147,e));var a=n,i=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===i?t.ref:(t=function(e){var t=a.refs;t===Bs&&(t=a.refs={}),null===e?delete t[i]:t[i]=e},t._stringRef=i,t)}if("string"!=typeof e)throw Error(s(284));if(!r._owner)throw Error(s(290,e))}return e}function Xs(e,t){throw e=Object.prototype.toString.call(t),Error(s(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function Ys(e){return(0,e._init)(e._payload)}function Ks(e){function t(t,r){if(e){var n=t.deletions;null===n?(t.deletions=[r],t.flags|=16):n.push(r)}}function r(r,n){if(!e)return null;for(;null!==n;)t(r,n),n=n.sibling;return null}function n(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=Pc(e,t)).index=0,e.sibling=null,e}function i(t,r,n){return t.index=n,e?null!==(n=t.alternate)?(n=n.index)<r?(t.flags|=2,r):n:(t.flags|=2,r):(t.flags|=1048576,r)}function o(t){return e&&null===t.alternate&&(t.flags|=2),t}function l(e,t,r,n){return null===t||6!==t.tag?((t=Mc(r,e.mode,n)).return=e,t):((t=a(t,r)).return=e,t)}function c(e,t,r,n){var s=r.type;return s===S?u(e,t,r.props.children,n,r.key):null!==t&&(t.elementType===s||"object"==typeof s&&null!==s&&s.$$typeof===I&&Ys(s)===t.type)?((n=a(t,r.props)).ref=Gs(e,t,r),n.return=e,n):((n=Dc(r.type,r.key,r.props,null,e.mode,n)).ref=Gs(e,t,r),n.return=e,n)}function f(e,t,r,n){return null===t||4!==t.tag||t.stateNode.containerInfo!==r.containerInfo||t.stateNode.implementation!==r.implementation?((t=Uc(r,e.mode,n)).return=e,t):((t=a(t,r.children||[])).return=e,t)}function u(e,t,r,n,s){return null===t||7!==t.tag?((t=Fc(r,e.mode,n,s)).return=e,t):((t=a(t,r)).return=e,t)}function h(e,t,r){if("string"==typeof t&&""!==t||"number"==typeof t)return(t=Mc(""+t,e.mode,r)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case k:return(r=Dc(t.type,t.key,t.props,null,e.mode,r)).ref=Gs(e,null,t),r.return=e,r;case T:return(t=Uc(t,e.mode,r)).return=e,t;case I:return h(e,(0,t._init)(t._payload),r)}if(te(t)||F(t))return(t=Fc(t,e.mode,r,null)).return=e,t;Xs(e,t)}return null}function d(e,t,r,n){var a=null!==t?t.key:null;if("string"==typeof r&&""!==r||"number"==typeof r)return null!==a?null:l(e,t,""+r,n);if("object"==typeof r&&null!==r){switch(r.$$typeof){case k:return r.key===a?c(e,t,r,n):null;case T:return r.key===a?f(e,t,r,n):null;case I:return d(e,t,(a=r._init)(r._payload),n)}if(te(r)||F(r))return null!==a?null:u(e,t,r,n,null);Xs(e,r)}return null}function p(e,t,r,n,a){if("string"==typeof n&&""!==n||"number"==typeof n)return l(t,e=e.get(r)||null,""+n,a);if("object"==typeof n&&null!==n){switch(n.$$typeof){case k:return c(t,e=e.get(null===n.key?r:n.key)||null,n,a);case T:return f(t,e=e.get(null===n.key?r:n.key)||null,n,a);case I:return p(e,t,r,(0,n._init)(n._payload),a)}if(te(n)||F(n))return u(t,e=e.get(r)||null,n,a,null);Xs(t,n)}return null}function m(a,s,o,l){for(var c=null,f=null,u=s,m=s=0,g=null;null!==u&&m<o.length;m++){u.index>m?(g=u,u=null):g=u.sibling;var v=d(a,u,o[m],l);if(null===v){null===u&&(u=g);break}e&&u&&null===v.alternate&&t(a,u),s=i(v,s,m),null===f?c=v:f.sibling=v,f=v,u=g}if(m===o.length)return r(a,u),as&&Ja(a,m),c;if(null===u){for(;m<o.length;m++)null!==(u=h(a,o[m],l))&&(s=i(u,s,m),null===f?c=u:f.sibling=u,f=u);return as&&Ja(a,m),c}for(u=n(a,u);m<o.length;m++)null!==(g=p(u,a,m,o[m],l))&&(e&&null!==g.alternate&&u.delete(null===g.key?m:g.key),s=i(g,s,m),null===f?c=g:f.sibling=g,f=g);return e&&u.forEach((function(e){return t(a,e)})),as&&Ja(a,m),c}function g(a,o,l,c){var f=F(l);if("function"!=typeof f)throw Error(s(150));if(null==(l=f.call(l)))throw Error(s(151));for(var u=f=null,m=o,g=o=0,v=null,b=l.next();null!==m&&!b.done;g++,b=l.next()){m.index>g?(v=m,m=null):v=m.sibling;var w=d(a,m,b.value,c);if(null===w){null===m&&(m=v);break}e&&m&&null===w.alternate&&t(a,m),o=i(w,o,g),null===u?f=w:u.sibling=w,u=w,m=v}if(b.done)return r(a,m),as&&Ja(a,g),f;if(null===m){for(;!b.done;g++,b=l.next())null!==(b=h(a,b.value,c))&&(o=i(b,o,g),null===u?f=b:u.sibling=b,u=b);return as&&Ja(a,g),f}for(m=n(a,m);!b.done;g++,b=l.next())null!==(b=p(m,a,g,b.value,c))&&(e&&null!==b.alternate&&m.delete(null===b.key?g:b.key),o=i(b,o,g),null===u?f=b:u.sibling=b,u=b);return e&&m.forEach((function(e){return t(a,e)})),as&&Ja(a,g),f}return function e(n,s,i,l){if("object"==typeof i&&null!==i&&i.type===S&&null===i.key&&(i=i.props.children),"object"==typeof i&&null!==i){switch(i.$$typeof){case k:e:{for(var c=i.key,f=s;null!==f;){if(f.key===c){if((c=i.type)===S){if(7===f.tag){r(n,f.sibling),(s=a(f,i.props.children)).return=n,n=s;break e}}else if(f.elementType===c||"object"==typeof c&&null!==c&&c.$$typeof===I&&Ys(c)===f.type){r(n,f.sibling),(s=a(f,i.props)).ref=Gs(n,f,i),s.return=n,n=s;break e}r(n,f);break}t(n,f),f=f.sibling}i.type===S?((s=Fc(i.props.children,n.mode,l,i.key)).return=n,n=s):((l=Dc(i.type,i.key,i.props,null,n.mode,l)).ref=Gs(n,s,i),l.return=n,n=l)}return o(n);case T:e:{for(f=i.key;null!==s;){if(s.key===f){if(4===s.tag&&s.stateNode.containerInfo===i.containerInfo&&s.stateNode.implementation===i.implementation){r(n,s.sibling),(s=a(s,i.children||[])).return=n,n=s;break e}r(n,s);break}t(n,s),s=s.sibling}(s=Uc(i,n.mode,l)).return=n,n=s}return o(n);case I:return e(n,s,(f=i._init)(i._payload),l)}if(te(i))return m(n,s,i,l);if(F(i))return g(n,s,i,l);Xs(n,i)}return"string"==typeof i&&""!==i||"number"==typeof i?(i=""+i,null!==s&&6===s.tag?(r(n,s.sibling),(s=a(s,i)).return=n,n=s):(r(n,s),(s=Mc(i,n.mode,l)).return=n,n=s),o(n)):r(n,s)}}var qs=Ks(!0),Qs=Ks(!1),Js={},Zs=Ea(Js),ei=Ea(Js),ti=Ea(Js);function ri(e){if(e===Js)throw Error(s(174));return e}function ni(e,t){switch(_a(ti,t),_a(ei,e),_a(Zs,Js),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:le(null,"");break;default:t=le(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}xa(Zs),_a(Zs,t)}function ai(){xa(Zs),xa(ei),xa(ti)}function si(e){ri(ti.current);var t=ri(Zs.current),r=le(t,e.type);t!==r&&(_a(ei,e),_a(Zs,r))}function ii(e){ei.current===e&&(xa(Zs),xa(ei))}var oi=Ea(0);function li(e){for(var t=e;null!==t;){if(13===t.tag){var r=t.memoizedState;if(null!==r&&(null===(r=r.dehydrated)||"$?"===r.data||"$!"===r.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var ci=[];function fi(){for(var e=0;e<ci.length;e++)ci[e]._workInProgressVersionPrimary=null;ci.length=0}var ui=y.ReactCurrentDispatcher,hi=y.ReactCurrentBatchConfig,di=0,pi=null,mi=null,gi=null,vi=!1,bi=!1,wi=0,yi=0;function ki(){throw Error(s(321))}function Ti(e,t){if(null===t)return!1;for(var r=0;r<t.length&&r<e.length;r++)if(!on(e[r],t[r]))return!1;return!0}function Si(e,t,r,n,a,i){if(di=i,pi=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,ui.current=null===e||null===e.memoizedState?io:oo,e=r(n,a),bi){i=0;do{if(bi=!1,wi=0,25<=i)throw Error(s(301));i+=1,gi=mi=null,t.updateQueue=null,ui.current=lo,e=r(n,a)}while(bi)}if(ui.current=so,t=null!==mi&&null!==mi.next,di=0,gi=mi=pi=null,vi=!1,t)throw Error(s(300));return e}function Ei(){var e=0!==wi;return wi=0,e}function xi(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===gi?pi.memoizedState=gi=e:gi=gi.next=e,gi}function _i(){if(null===mi){var e=pi.alternate;e=null!==e?e.memoizedState:null}else e=mi.next;var t=null===gi?pi.memoizedState:gi.next;if(null!==t)gi=t,mi=e;else{if(null===e)throw Error(s(310));e={memoizedState:(mi=e).memoizedState,baseState:mi.baseState,baseQueue:mi.baseQueue,queue:mi.queue,next:null},null===gi?pi.memoizedState=gi=e:gi=gi.next=e}return gi}function Ci(e,t){return"function"==typeof t?t(e):t}function Ai(e){var t=_i(),r=t.queue;if(null===r)throw Error(s(311));r.lastRenderedReducer=e;var n=mi,a=n.baseQueue,i=r.pending;if(null!==i){if(null!==a){var o=a.next;a.next=i.next,i.next=o}n.baseQueue=a=i,r.pending=null}if(null!==a){i=a.next,n=n.baseState;var l=o=null,c=null,f=i;do{var u=f.lane;if((di&u)===u)null!==c&&(c=c.next={lane:0,action:f.action,hasEagerState:f.hasEagerState,eagerState:f.eagerState,next:null}),n=f.hasEagerState?f.eagerState:e(n,f.action);else{var h={lane:u,action:f.action,hasEagerState:f.hasEagerState,eagerState:f.eagerState,next:null};null===c?(l=c=h,o=n):c=c.next=h,pi.lanes|=u,Ll|=u}f=f.next}while(null!==f&&f!==i);null===c?o=n:c.next=l,on(n,t.memoizedState)||(yo=!0),t.memoizedState=n,t.baseState=o,t.baseQueue=c,r.lastRenderedState=n}if(null!==(e=r.interleaved)){a=e;do{i=a.lane,pi.lanes|=i,Ll|=i,a=a.next}while(a!==e)}else null===a&&(r.lanes=0);return[t.memoizedState,r.dispatch]}function Oi(e){var t=_i(),r=t.queue;if(null===r)throw Error(s(311));r.lastRenderedReducer=e;var n=r.dispatch,a=r.pending,i=t.memoizedState;if(null!==a){r.pending=null;var o=a=a.next;do{i=e(i,o.action),o=o.next}while(o!==a);on(i,t.memoizedState)||(yo=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),r.lastRenderedState=i}return[i,n]}function Ri(){}function Ni(e,t){var r=pi,n=_i(),a=t(),i=!on(n.memoizedState,a);if(i&&(n.memoizedState=a,yo=!0),n=n.queue,ji(Di.bind(null,r,n,e),[e]),n.getSnapshot!==t||i||null!==gi&&1&gi.memoizedState.tag){if(r.flags|=2048,Ui(9,Pi.bind(null,r,n,a,t),void 0,null),null===Ol)throw Error(s(349));0!=(30&di)||Ii(r,t,a)}return a}function Ii(e,t,r){e.flags|=16384,e={getSnapshot:t,value:r},null===(t=pi.updateQueue)?(t={lastEffect:null,stores:null},pi.updateQueue=t,t.stores=[e]):null===(r=t.stores)?t.stores=[e]:r.push(e)}function Pi(e,t,r,n){t.value=r,t.getSnapshot=n,Fi(t)&&Li(e)}function Di(e,t,r){return r((function(){Fi(t)&&Li(e)}))}function Fi(e){var t=e.getSnapshot;e=e.value;try{var r=t();return!on(e,r)}catch(e){return!0}}function Li(e){var t=Os(e,1);null!==t&&rc(t,e,1,-1)}function Mi(e){var t=xi();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Ci,lastRenderedState:e},t.queue=e,e=e.dispatch=to.bind(null,pi,e),[t.memoizedState,e]}function Ui(e,t,r,n){return e={tag:e,create:t,destroy:r,deps:n,next:null},null===(t=pi.updateQueue)?(t={lastEffect:null,stores:null},pi.updateQueue=t,t.lastEffect=e.next=e):null===(r=t.lastEffect)?t.lastEffect=e.next=e:(n=r.next,r.next=e,e.next=n,t.lastEffect=e),e}function Bi(){return _i().memoizedState}function zi(e,t,r,n){var a=xi();pi.flags|=e,a.memoizedState=Ui(1|t,r,void 0,void 0===n?null:n)}function Wi(e,t,r,n){var a=_i();n=void 0===n?null:n;var s=void 0;if(null!==mi){var i=mi.memoizedState;if(s=i.destroy,null!==n&&Ti(n,i.deps))return void(a.memoizedState=Ui(t,r,s,n))}pi.flags|=e,a.memoizedState=Ui(1|t,r,s,n)}function Hi(e,t){return zi(8390656,8,e,t)}function ji(e,t){return Wi(2048,8,e,t)}function Vi(e,t){return Wi(4,2,e,t)}function $i(e,t){return Wi(4,4,e,t)}function Gi(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Xi(e,t,r){return r=null!=r?r.concat([e]):null,Wi(4,4,Gi.bind(null,t,e),r)}function Yi(){}function Ki(e,t){var r=_i();t=void 0===t?null:t;var n=r.memoizedState;return null!==n&&null!==t&&Ti(t,n[1])?n[0]:(r.memoizedState=[e,t],e)}function qi(e,t){var r=_i();t=void 0===t?null:t;var n=r.memoizedState;return null!==n&&null!==t&&Ti(t,n[1])?n[0]:(e=e(),r.memoizedState=[e,t],e)}function Qi(e,t,r){return 0==(21&di)?(e.baseState&&(e.baseState=!1,yo=!0),e.memoizedState=r):(on(r,t)||(r=mt(),pi.lanes|=r,Ll|=r,e.baseState=!0),t)}function Ji(e,t){var r=wt;wt=0!==r&&4>r?r:4,e(!0);var n=hi.transition;hi.transition={};try{e(!1),t()}finally{wt=r,hi.transition=n}}function Zi(){return _i().memoizedState}function eo(e,t,r){var n=tc(e);r={lane:n,action:r,hasEagerState:!1,eagerState:null,next:null},ro(e)?no(t,r):null!==(r=As(e,t,r,n))&&(rc(r,e,n,ec()),ao(r,t,n))}function to(e,t,r){var n=tc(e),a={lane:n,action:r,hasEagerState:!1,eagerState:null,next:null};if(ro(e))no(t,a);else{var s=e.alternate;if(0===e.lanes&&(null===s||0===s.lanes)&&null!==(s=t.lastRenderedReducer))try{var i=t.lastRenderedState,o=s(i,r);if(a.hasEagerState=!0,a.eagerState=o,on(o,i)){var l=t.interleaved;return null===l?(a.next=a,Cs(t)):(a.next=l.next,l.next=a),void(t.interleaved=a)}}catch(e){}null!==(r=As(e,t,a,n))&&(rc(r,e,n,a=ec()),ao(r,t,n))}}function ro(e){var t=e.alternate;return e===pi||null!==t&&t===pi}function no(e,t){bi=vi=!0;var r=e.pending;null===r?t.next=t:(t.next=r.next,r.next=t),e.pending=t}function ao(e,t,r){if(0!=(4194240&r)){var n=t.lanes;r|=n&=e.pendingLanes,t.lanes=r,bt(e,r)}}var so={readContext:xs,useCallback:ki,useContext:ki,useEffect:ki,useImperativeHandle:ki,useInsertionEffect:ki,useLayoutEffect:ki,useMemo:ki,useReducer:ki,useRef:ki,useState:ki,useDebugValue:ki,useDeferredValue:ki,useTransition:ki,useMutableSource:ki,useSyncExternalStore:ki,useId:ki,unstable_isNewReconciler:!1},io={readContext:xs,useCallback:function(e,t){return xi().memoizedState=[e,void 0===t?null:t],e},useContext:xs,useEffect:Hi,useImperativeHandle:function(e,t,r){return r=null!=r?r.concat([e]):null,zi(4194308,4,Gi.bind(null,t,e),r)},useLayoutEffect:function(e,t){return zi(4194308,4,e,t)},useInsertionEffect:function(e,t){return zi(4,2,e,t)},useMemo:function(e,t){var r=xi();return t=void 0===t?null:t,e=e(),r.memoizedState=[e,t],e},useReducer:function(e,t,r){var n=xi();return t=void 0!==r?r(t):t,n.memoizedState=n.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},n.queue=e,e=e.dispatch=eo.bind(null,pi,e),[n.memoizedState,e]},useRef:function(e){return e={current:e},xi().memoizedState=e},useState:Mi,useDebugValue:Yi,useDeferredValue:function(e){return xi().memoizedState=e},useTransition:function(){var e=Mi(!1),t=e[0];return e=Ji.bind(null,e[1]),xi().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,r){var n=pi,a=xi();if(as){if(void 0===r)throw Error(s(407));r=r()}else{if(r=t(),null===Ol)throw Error(s(349));0!=(30&di)||Ii(n,t,r)}a.memoizedState=r;var i={value:r,getSnapshot:t};return a.queue=i,Hi(Di.bind(null,n,i,e),[e]),n.flags|=2048,Ui(9,Pi.bind(null,n,i,r,t),void 0,null),r},useId:function(){var e=xi(),t=Ol.identifierPrefix;if(as){var r=Qa;t=":"+t+"R"+(r=(qa&~(1<<32-it(qa)-1)).toString(32)+r),0<(r=wi++)&&(t+="H"+r.toString(32)),t+=":"}else t=":"+t+"r"+(r=yi++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},oo={readContext:xs,useCallback:Ki,useContext:xs,useEffect:ji,useImperativeHandle:Xi,useInsertionEffect:Vi,useLayoutEffect:$i,useMemo:qi,useReducer:Ai,useRef:Bi,useState:function(){return Ai(Ci)},useDebugValue:Yi,useDeferredValue:function(e){return Qi(_i(),mi.memoizedState,e)},useTransition:function(){return[Ai(Ci)[0],_i().memoizedState]},useMutableSource:Ri,useSyncExternalStore:Ni,useId:Zi,unstable_isNewReconciler:!1},lo={readContext:xs,useCallback:Ki,useContext:xs,useEffect:ji,useImperativeHandle:Xi,useInsertionEffect:Vi,useLayoutEffect:$i,useMemo:qi,useReducer:Oi,useRef:Bi,useState:function(){return Oi(Ci)},useDebugValue:Yi,useDeferredValue:function(e){var t=_i();return null===mi?t.memoizedState=e:Qi(t,mi.memoizedState,e)},useTransition:function(){return[Oi(Ci)[0],_i().memoizedState]},useMutableSource:Ri,useSyncExternalStore:Ni,useId:Zi,unstable_isNewReconciler:!1};function co(e,t){try{var r="",n=t;do{r+=W(n),n=n.return}while(n);var a=r}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a,digest:null}}function fo(e,t,r){return{value:e,source:null,stack:null!=r?r:null,digest:null!=t?t:null}}function uo(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}var ho="function"==typeof WeakMap?WeakMap:Map;function po(e,t,r){(r=Ps(-1,r)).tag=3,r.payload={element:null};var n=t.value;return r.callback=function(){Vl||(Vl=!0,$l=n),uo(0,t)},r}function mo(e,t,r){(r=Ps(-1,r)).tag=3;var n=e.type.getDerivedStateFromError;if("function"==typeof n){var a=t.value;r.payload=function(){return n(a)},r.callback=function(){uo(0,t)}}var s=e.stateNode;return null!==s&&"function"==typeof s.componentDidCatch&&(r.callback=function(){uo(0,t),"function"!=typeof n&&(null===Gl?Gl=new Set([this]):Gl.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),r}function go(e,t,r){var n=e.pingCache;if(null===n){n=e.pingCache=new ho;var a=new Set;n.set(t,a)}else void 0===(a=n.get(t))&&(a=new Set,n.set(t,a));a.has(r)||(a.add(r),e=xc.bind(null,e,t,r),t.then(e,e))}function vo(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function bo(e,t,r,n,a){return 0==(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,r.flags|=131072,r.flags&=-52805,1===r.tag&&(null===r.alternate?r.tag=17:((t=Ps(-1,1)).tag=2,Ds(r,t,1))),r.lanes|=1),e):(e.flags|=65536,e.lanes=a,e)}var wo=y.ReactCurrentOwner,yo=!1;function ko(e,t,r,n){t.child=null===e?Qs(t,null,r,n):qs(t,e.child,r,n)}function To(e,t,r,n,a){r=r.render;var s=t.ref;return Es(t,a),n=Si(e,t,r,n,s,a),r=Ei(),null===e||yo?(as&&r&&es(t),t.flags|=1,ko(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,Vo(e,t,a))}function So(e,t,r,n,a){if(null===e){var s=r.type;return"function"!=typeof s||Ic(s)||void 0!==s.defaultProps||null!==r.compare||void 0!==r.defaultProps?((e=Dc(r.type,null,n,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=s,Eo(e,t,s,n,a))}if(s=e.child,0==(e.lanes&a)){var i=s.memoizedProps;if((r=null!==(r=r.compare)?r:ln)(i,n)&&e.ref===t.ref)return Vo(e,t,a)}return t.flags|=1,(e=Pc(s,n)).ref=t.ref,e.return=t,t.child=e}function Eo(e,t,r,n,a){if(null!==e){var s=e.memoizedProps;if(ln(s,n)&&e.ref===t.ref){if(yo=!1,t.pendingProps=n=s,0==(e.lanes&a))return t.lanes=e.lanes,Vo(e,t,a);0!=(131072&e.flags)&&(yo=!0)}}return Co(e,t,r,n,a)}function xo(e,t,r){var n=t.pendingProps,a=n.children,s=null!==e?e.memoizedState:null;if("hidden"===n.mode)if(0==(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},_a(Pl,Il),Il|=r;else{if(0==(1073741824&r))return e=null!==s?s.baseLanes|r:r,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,_a(Pl,Il),Il|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},n=null!==s?s.baseLanes:r,_a(Pl,Il),Il|=n}else null!==s?(n=s.baseLanes|r,t.memoizedState=null):n=r,_a(Pl,Il),Il|=n;return ko(e,t,a,r),t.child}function _o(e,t){var r=t.ref;(null===e&&null!==r||null!==e&&e.ref!==r)&&(t.flags|=512,t.flags|=2097152)}function Co(e,t,r,n,a){var s=Ia(r)?Ra:Aa.current;return s=Na(t,s),Es(t,a),r=Si(e,t,r,n,s,a),n=Ei(),null===e||yo?(as&&n&&es(t),t.flags|=1,ko(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,Vo(e,t,a))}function Ao(e,t,r,n,a){if(Ia(r)){var s=!0;La(t)}else s=!1;if(Es(t,a),null===t.stateNode)jo(e,t),js(t,r,n),$s(t,r,n,a),n=!0;else if(null===e){var i=t.stateNode,o=t.memoizedProps;i.props=o;var l=i.context,c=r.contextType;c="object"==typeof c&&null!==c?xs(c):Na(t,c=Ia(r)?Ra:Aa.current);var f=r.getDerivedStateFromProps,u="function"==typeof f||"function"==typeof i.getSnapshotBeforeUpdate;u||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(o!==n||l!==c)&&Vs(t,i,n,c),Rs=!1;var h=t.memoizedState;i.state=h,Ms(t,n,i,a),l=t.memoizedState,o!==n||h!==l||Oa.current||Rs?("function"==typeof f&&(zs(t,r,f,n),l=t.memoizedState),(o=Rs||Hs(t,r,o,n,h,l,c))?(u||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.flags|=4194308)):("function"==typeof i.componentDidMount&&(t.flags|=4194308),t.memoizedProps=n,t.memoizedState=l),i.props=n,i.state=l,i.context=c,n=o):("function"==typeof i.componentDidMount&&(t.flags|=4194308),n=!1)}else{i=t.stateNode,Is(e,t),o=t.memoizedProps,c=t.type===t.elementType?o:gs(t.type,o),i.props=c,u=t.pendingProps,h=i.context,l="object"==typeof(l=r.contextType)&&null!==l?xs(l):Na(t,l=Ia(r)?Ra:Aa.current);var d=r.getDerivedStateFromProps;(f="function"==typeof d||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(o!==u||h!==l)&&Vs(t,i,n,l),Rs=!1,h=t.memoizedState,i.state=h,Ms(t,n,i,a);var p=t.memoizedState;o!==u||h!==p||Oa.current||Rs?("function"==typeof d&&(zs(t,r,d,n),p=t.memoizedState),(c=Rs||Hs(t,r,c,n,h,p,l)||!1)?(f||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(n,p,l),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(n,p,l)),"function"==typeof i.componentDidUpdate&&(t.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!=typeof i.componentDidUpdate||o===e.memoizedProps&&h===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||o===e.memoizedProps&&h===e.memoizedState||(t.flags|=1024),t.memoizedProps=n,t.memoizedState=p),i.props=n,i.state=p,i.context=l,n=c):("function"!=typeof i.componentDidUpdate||o===e.memoizedProps&&h===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||o===e.memoizedProps&&h===e.memoizedState||(t.flags|=1024),n=!1)}return Oo(e,t,r,n,s,a)}function Oo(e,t,r,n,a,s){_o(e,t);var i=0!=(128&t.flags);if(!n&&!i)return a&&Ma(t,r,!1),Vo(e,t,s);n=t.stateNode,wo.current=t;var o=i&&"function"!=typeof r.getDerivedStateFromError?null:n.render();return t.flags|=1,null!==e&&i?(t.child=qs(t,e.child,null,s),t.child=qs(t,null,o,s)):ko(e,t,o,s),t.memoizedState=n.state,a&&Ma(t,r,!0),t.child}function Ro(e){var t=e.stateNode;t.pendingContext?Da(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Da(0,t.context,!1),ni(e,t.containerInfo)}function No(e,t,r,n,a){return ds(),ps(a),t.flags|=256,ko(e,t,r,n),t.child}var Io,Po,Do,Fo={dehydrated:null,treeContext:null,retryLane:0};function Lo(e){return{baseLanes:e,cachePool:null,transitions:null}}function Mo(e,t,r){var n,a=t.pendingProps,i=oi.current,o=!1,l=0!=(128&t.flags);if((n=l)||(n=(null===e||null!==e.memoizedState)&&0!=(2&i)),n?(o=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(i|=1),_a(oi,1&i),null===e)return cs(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0==(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(l=a.children,e=a.fallback,o?(a=t.mode,o=t.child,l={mode:"hidden",children:l},0==(1&a)&&null!==o?(o.childLanes=0,o.pendingProps=l):o=Lc(l,a,0,null),e=Fc(e,a,r,null),o.return=t,e.return=t,o.sibling=e,t.child=o,t.child.memoizedState=Lo(r),t.memoizedState=Fo,e):Uo(t,l));if(null!==(i=e.memoizedState)&&null!==(n=i.dehydrated))return function(e,t,r,n,a,i,o){if(r)return 256&t.flags?(t.flags&=-257,Bo(e,t,o,n=fo(Error(s(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(i=n.fallback,a=t.mode,n=Lc({mode:"visible",children:n.children},a,0,null),(i=Fc(i,a,o,null)).flags|=2,n.return=t,i.return=t,n.sibling=i,t.child=n,0!=(1&t.mode)&&qs(t,e.child,null,o),t.child.memoizedState=Lo(o),t.memoizedState=Fo,i);if(0==(1&t.mode))return Bo(e,t,o,null);if("$!"===a.data){if(n=a.nextSibling&&a.nextSibling.dataset)var l=n.dgst;return n=l,Bo(e,t,o,n=fo(i=Error(s(419)),n,void 0))}if(l=0!=(o&e.childLanes),yo||l){if(null!==(n=Ol)){switch(o&-o){case 4:a=2;break;case 16:a=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:a=32;break;case 536870912:a=268435456;break;default:a=0}0!==(a=0!=(a&(n.suspendedLanes|o))?0:a)&&a!==i.retryLane&&(i.retryLane=a,Os(e,a),rc(n,e,a,-1))}return mc(),Bo(e,t,o,n=fo(Error(s(421))))}return"$?"===a.data?(t.flags|=128,t.child=e.child,t=Cc.bind(null,e),a._reactRetry=t,null):(e=i.treeContext,ns=ca(a.nextSibling),rs=t,as=!0,ss=null,null!==e&&(Xa[Ya++]=qa,Xa[Ya++]=Qa,Xa[Ya++]=Ka,qa=e.id,Qa=e.overflow,Ka=t),(t=Uo(t,n.children)).flags|=4096,t)}(e,t,l,a,n,i,r);if(o){o=a.fallback,l=t.mode,n=(i=e.child).sibling;var c={mode:"hidden",children:a.children};return 0==(1&l)&&t.child!==i?((a=t.child).childLanes=0,a.pendingProps=c,t.deletions=null):(a=Pc(i,c)).subtreeFlags=14680064&i.subtreeFlags,null!==n?o=Pc(n,o):(o=Fc(o,l,r,null)).flags|=2,o.return=t,a.return=t,a.sibling=o,t.child=a,a=o,o=t.child,l=null===(l=e.child.memoizedState)?Lo(r):{baseLanes:l.baseLanes|r,cachePool:null,transitions:l.transitions},o.memoizedState=l,o.childLanes=e.childLanes&~r,t.memoizedState=Fo,a}return e=(o=e.child).sibling,a=Pc(o,{mode:"visible",children:a.children}),0==(1&t.mode)&&(a.lanes=r),a.return=t,a.sibling=null,null!==e&&(null===(r=t.deletions)?(t.deletions=[e],t.flags|=16):r.push(e)),t.child=a,t.memoizedState=null,a}function Uo(e,t){return(t=Lc({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Bo(e,t,r,n){return null!==n&&ps(n),qs(t,e.child,null,r),(e=Uo(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function zo(e,t,r){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),Ss(e.return,t,r)}function Wo(e,t,r,n,a){var s=e.memoizedState;null===s?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:n,tail:r,tailMode:a}:(s.isBackwards=t,s.rendering=null,s.renderingStartTime=0,s.last=n,s.tail=r,s.tailMode=a)}function Ho(e,t,r){var n=t.pendingProps,a=n.revealOrder,s=n.tail;if(ko(e,t,n.children,r),0!=(2&(n=oi.current)))n=1&n|2,t.flags|=128;else{if(null!==e&&0!=(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&zo(e,r,t);else if(19===e.tag)zo(e,r,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}n&=1}if(_a(oi,n),0==(1&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(r=t.child,a=null;null!==r;)null!==(e=r.alternate)&&null===li(e)&&(a=r),r=r.sibling;null===(r=a)?(a=t.child,t.child=null):(a=r.sibling,r.sibling=null),Wo(t,!1,a,r,s);break;case"backwards":for(r=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===li(e)){t.child=a;break}e=a.sibling,a.sibling=r,r=a,a=e}Wo(t,!0,r,null,s);break;case"together":Wo(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function jo(e,t){0==(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Vo(e,t,r){if(null!==e&&(t.dependencies=e.dependencies),Ll|=t.lanes,0==(r&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(s(153));if(null!==t.child){for(r=Pc(e=t.child,e.pendingProps),t.child=r,r.return=t;null!==e.sibling;)e=e.sibling,(r=r.sibling=Pc(e,e.pendingProps)).return=t;r.sibling=null}return t.child}function $o(e,t){if(!as)switch(e.tailMode){case"hidden":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?e.tail=null:r.sibling=null;break;case"collapsed":r=e.tail;for(var n=null;null!==r;)null!==r.alternate&&(n=r),r=r.sibling;null===n?t||null===e.tail?e.tail=null:e.tail.sibling=null:n.sibling=null}}function Go(e){var t=null!==e.alternate&&e.alternate.child===e.child,r=0,n=0;if(t)for(var a=e.child;null!==a;)r|=a.lanes|a.childLanes,n|=14680064&a.subtreeFlags,n|=14680064&a.flags,a.return=e,a=a.sibling;else for(a=e.child;null!==a;)r|=a.lanes|a.childLanes,n|=a.subtreeFlags,n|=a.flags,a.return=e,a=a.sibling;return e.subtreeFlags|=n,e.childLanes=r,t}function Xo(e,t,r){var n=t.pendingProps;switch(ts(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Go(t),null;case 1:case 17:return Ia(t.type)&&Pa(),Go(t),null;case 3:return n=t.stateNode,ai(),xa(Oa),xa(Aa),fi(),n.pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||(us(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0==(256&t.flags)||(t.flags|=1024,null!==ss&&(ic(ss),ss=null))),Go(t),null;case 5:ii(t);var a=ri(ti.current);if(r=t.type,null!==e&&null!=t.stateNode)Po(e,t,r,n),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!n){if(null===t.stateNode)throw Error(s(166));return Go(t),null}if(e=ri(Zs.current),us(t)){n=t.stateNode,r=t.type;var i=t.memoizedProps;switch(n[ha]=t,n[da]=i,e=0!=(1&t.mode),r){case"dialog":Bn("cancel",n),Bn("close",n);break;case"iframe":case"object":case"embed":Bn("load",n);break;case"video":case"audio":for(a=0;a<Fn.length;a++)Bn(Fn[a],n);break;case"source":Bn("error",n);break;case"img":case"image":case"link":Bn("error",n),Bn("load",n);break;case"details":Bn("toggle",n);break;case"input":q(n,i),Bn("invalid",n);break;case"select":n._wrapperState={wasMultiple:!!i.multiple},Bn("invalid",n);break;case"textarea":ae(n,i),Bn("invalid",n)}for(var l in be(r,i),a=null,i)if(i.hasOwnProperty(l)){var c=i[l];"children"===l?"string"==typeof c?n.textContent!==c&&(!0!==i.suppressHydrationWarning&&Jn(n.textContent,c,e),a=["children",c]):"number"==typeof c&&n.textContent!==""+c&&(!0!==i.suppressHydrationWarning&&Jn(n.textContent,c,e),a=["children",""+c]):o.hasOwnProperty(l)&&null!=c&&"onScroll"===l&&Bn("scroll",n)}switch(r){case"input":G(n),Z(n,i,!0);break;case"textarea":G(n),ie(n);break;case"select":case"option":break;default:"function"==typeof i.onClick&&(n.onclick=Zn)}n=a,t.updateQueue=n,null!==n&&(t.flags|=4)}else{l=9===a.nodeType?a:a.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=oe(r)),"http://www.w3.org/1999/xhtml"===e?"script"===r?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof n.is?e=l.createElement(r,{is:n.is}):(e=l.createElement(r),"select"===r&&(l=e,n.multiple?l.multiple=!0:n.size&&(l.size=n.size))):e=l.createElementNS(e,r),e[ha]=t,e[da]=n,Io(e,t),t.stateNode=e;e:{switch(l=we(r,n),r){case"dialog":Bn("cancel",e),Bn("close",e),a=n;break;case"iframe":case"object":case"embed":Bn("load",e),a=n;break;case"video":case"audio":for(a=0;a<Fn.length;a++)Bn(Fn[a],e);a=n;break;case"source":Bn("error",e),a=n;break;case"img":case"image":case"link":Bn("error",e),Bn("load",e),a=n;break;case"details":Bn("toggle",e),a=n;break;case"input":q(e,n),a=K(e,n),Bn("invalid",e);break;case"option":default:a=n;break;case"select":e._wrapperState={wasMultiple:!!n.multiple},a=M({},n,{value:void 0}),Bn("invalid",e);break;case"textarea":ae(e,n),a=ne(e,n),Bn("invalid",e)}for(i in be(r,a),c=a)if(c.hasOwnProperty(i)){var f=c[i];"style"===i?ge(e,f):"dangerouslySetInnerHTML"===i?null!=(f=f?f.__html:void 0)&&ue(e,f):"children"===i?"string"==typeof f?("textarea"!==r||""!==f)&&he(e,f):"number"==typeof f&&he(e,""+f):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(o.hasOwnProperty(i)?null!=f&&"onScroll"===i&&Bn("scroll",e):null!=f&&w(e,i,f,l))}switch(r){case"input":G(e),Z(e,n,!1);break;case"textarea":G(e),ie(e);break;case"option":null!=n.value&&e.setAttribute("value",""+V(n.value));break;case"select":e.multiple=!!n.multiple,null!=(i=n.value)?re(e,!!n.multiple,i,!1):null!=n.defaultValue&&re(e,!!n.multiple,n.defaultValue,!0);break;default:"function"==typeof a.onClick&&(e.onclick=Zn)}switch(r){case"button":case"input":case"select":case"textarea":n=!!n.autoFocus;break e;case"img":n=!0;break e;default:n=!1}}n&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return Go(t),null;case 6:if(e&&null!=t.stateNode)Do(0,t,e.memoizedProps,n);else{if("string"!=typeof n&&null===t.stateNode)throw Error(s(166));if(r=ri(ti.current),ri(Zs.current),us(t)){if(n=t.stateNode,r=t.memoizedProps,n[ha]=t,(i=n.nodeValue!==r)&&null!==(e=rs))switch(e.tag){case 3:Jn(n.nodeValue,r,0!=(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Jn(n.nodeValue,r,0!=(1&e.mode))}i&&(t.flags|=4)}else(n=(9===r.nodeType?r:r.ownerDocument).createTextNode(n))[ha]=t,t.stateNode=n}return Go(t),null;case 13:if(xa(oi),n=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(as&&null!==ns&&0!=(1&t.mode)&&0==(128&t.flags))hs(),ds(),t.flags|=98560,i=!1;else if(i=us(t),null!==n&&null!==n.dehydrated){if(null===e){if(!i)throw Error(s(318));if(!(i=null!==(i=t.memoizedState)?i.dehydrated:null))throw Error(s(317));i[ha]=t}else ds(),0==(128&t.flags)&&(t.memoizedState=null),t.flags|=4;Go(t),i=!1}else null!==ss&&(ic(ss),ss=null),i=!0;if(!i)return 65536&t.flags?t:null}return 0!=(128&t.flags)?(t.lanes=r,t):((n=null!==n)!=(null!==e&&null!==e.memoizedState)&&n&&(t.child.flags|=8192,0!=(1&t.mode)&&(null===e||0!=(1&oi.current)?0===Dl&&(Dl=3):mc())),null!==t.updateQueue&&(t.flags|=4),Go(t),null);case 4:return ai(),null===e&&Hn(t.stateNode.containerInfo),Go(t),null;case 10:return Ts(t.type._context),Go(t),null;case 19:if(xa(oi),null===(i=t.memoizedState))return Go(t),null;if(n=0!=(128&t.flags),null===(l=i.rendering))if(n)$o(i,!1);else{if(0!==Dl||null!==e&&0!=(128&e.flags))for(e=t.child;null!==e;){if(null!==(l=li(e))){for(t.flags|=128,$o(i,!1),null!==(n=l.updateQueue)&&(t.updateQueue=n,t.flags|=4),t.subtreeFlags=0,n=r,r=t.child;null!==r;)e=n,(i=r).flags&=14680066,null===(l=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.subtreeFlags=0,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=l.childLanes,i.lanes=l.lanes,i.child=l.child,i.subtreeFlags=0,i.deletions=null,i.memoizedProps=l.memoizedProps,i.memoizedState=l.memoizedState,i.updateQueue=l.updateQueue,i.type=l.type,e=l.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),r=r.sibling;return _a(oi,1&oi.current|2),t.child}e=e.sibling}null!==i.tail&&Qe()>Hl&&(t.flags|=128,n=!0,$o(i,!1),t.lanes=4194304)}else{if(!n)if(null!==(e=li(l))){if(t.flags|=128,n=!0,null!==(r=e.updateQueue)&&(t.updateQueue=r,t.flags|=4),$o(i,!0),null===i.tail&&"hidden"===i.tailMode&&!l.alternate&&!as)return Go(t),null}else 2*Qe()-i.renderingStartTime>Hl&&1073741824!==r&&(t.flags|=128,n=!0,$o(i,!1),t.lanes=4194304);i.isBackwards?(l.sibling=t.child,t.child=l):(null!==(r=i.last)?r.sibling=l:t.child=l,i.last=l)}return null!==i.tail?(t=i.tail,i.rendering=t,i.tail=t.sibling,i.renderingStartTime=Qe(),t.sibling=null,r=oi.current,_a(oi,n?1&r|2:1&r),t):(Go(t),null);case 22:case 23:return uc(),n=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==n&&(t.flags|=8192),n&&0!=(1&t.mode)?0!=(1073741824&Il)&&(Go(t),6&t.subtreeFlags&&(t.flags|=8192)):Go(t),null;case 24:case 25:return null}throw Error(s(156,t.tag))}function Yo(e,t){switch(ts(t),t.tag){case 1:return Ia(t.type)&&Pa(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return ai(),xa(Oa),xa(Aa),fi(),0!=(65536&(e=t.flags))&&0==(128&e)?(t.flags=-65537&e|128,t):null;case 5:return ii(t),null;case 13:if(xa(oi),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(s(340));ds()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return xa(oi),null;case 4:return ai(),null;case 10:return Ts(t.type._context),null;case 22:case 23:return uc(),null;default:return null}}Io=function(e,t){for(var r=t.child;null!==r;){if(5===r.tag||6===r.tag)e.appendChild(r.stateNode);else if(4!==r.tag&&null!==r.child){r.child.return=r,r=r.child;continue}if(r===t)break;for(;null===r.sibling;){if(null===r.return||r.return===t)return;r=r.return}r.sibling.return=r.return,r=r.sibling}},Po=function(e,t,r,n){var a=e.memoizedProps;if(a!==n){e=t.stateNode,ri(Zs.current);var s,i=null;switch(r){case"input":a=K(e,a),n=K(e,n),i=[];break;case"select":a=M({},a,{value:void 0}),n=M({},n,{value:void 0}),i=[];break;case"textarea":a=ne(e,a),n=ne(e,n),i=[];break;default:"function"!=typeof a.onClick&&"function"==typeof n.onClick&&(e.onclick=Zn)}for(f in be(r,n),r=null,a)if(!n.hasOwnProperty(f)&&a.hasOwnProperty(f)&&null!=a[f])if("style"===f){var l=a[f];for(s in l)l.hasOwnProperty(s)&&(r||(r={}),r[s]="")}else"dangerouslySetInnerHTML"!==f&&"children"!==f&&"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(o.hasOwnProperty(f)?i||(i=[]):(i=i||[]).push(f,null));for(f in n){var c=n[f];if(l=null!=a?a[f]:void 0,n.hasOwnProperty(f)&&c!==l&&(null!=c||null!=l))if("style"===f)if(l){for(s in l)!l.hasOwnProperty(s)||c&&c.hasOwnProperty(s)||(r||(r={}),r[s]="");for(s in c)c.hasOwnProperty(s)&&l[s]!==c[s]&&(r||(r={}),r[s]=c[s])}else r||(i||(i=[]),i.push(f,r)),r=c;else"dangerouslySetInnerHTML"===f?(c=c?c.__html:void 0,l=l?l.__html:void 0,null!=c&&l!==c&&(i=i||[]).push(f,c)):"children"===f?"string"!=typeof c&&"number"!=typeof c||(i=i||[]).push(f,""+c):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&(o.hasOwnProperty(f)?(null!=c&&"onScroll"===f&&Bn("scroll",e),i||l===c||(i=[])):(i=i||[]).push(f,c))}r&&(i=i||[]).push("style",r);var f=i;(t.updateQueue=f)&&(t.flags|=4)}},Do=function(e,t,r,n){r!==n&&(t.flags|=4)};var Ko=!1,qo=!1,Qo="function"==typeof WeakSet?WeakSet:Set,Jo=null;function Zo(e,t){var r=e.ref;if(null!==r)if("function"==typeof r)try{r(null)}catch(r){Ec(e,t,r)}else r.current=null}function el(e,t,r){try{r()}catch(r){Ec(e,t,r)}}var tl=!1;function rl(e,t,r){var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var a=n=n.next;do{if((a.tag&e)===e){var s=a.destroy;a.destroy=void 0,void 0!==s&&el(t,r,s)}a=a.next}while(a!==n)}}function nl(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var r=t=t.next;do{if((r.tag&e)===e){var n=r.create;r.destroy=n()}r=r.next}while(r!==t)}}function al(e){var t=e.ref;if(null!==t){var r=e.stateNode;e.tag,e=r,"function"==typeof t?t(e):t.current=e}}function sl(e){var t=e.alternate;null!==t&&(e.alternate=null,sl(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&null!==(t=e.stateNode)&&(delete t[ha],delete t[da],delete t[ma],delete t[ga],delete t[va]),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function il(e){return 5===e.tag||3===e.tag||4===e.tag}function ol(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||il(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function ll(e,t,r){var n=e.tag;if(5===n||6===n)e=e.stateNode,t?8===r.nodeType?r.parentNode.insertBefore(e,t):r.insertBefore(e,t):(8===r.nodeType?(t=r.parentNode).insertBefore(e,r):(t=r).appendChild(e),null!=(r=r._reactRootContainer)||null!==t.onclick||(t.onclick=Zn));else if(4!==n&&null!==(e=e.child))for(ll(e,t,r),e=e.sibling;null!==e;)ll(e,t,r),e=e.sibling}function cl(e,t,r){var n=e.tag;if(5===n||6===n)e=e.stateNode,t?r.insertBefore(e,t):r.appendChild(e);else if(4!==n&&null!==(e=e.child))for(cl(e,t,r),e=e.sibling;null!==e;)cl(e,t,r),e=e.sibling}var fl=null,ul=!1;function hl(e,t,r){for(r=r.child;null!==r;)dl(e,t,r),r=r.sibling}function dl(e,t,r){if(st&&"function"==typeof st.onCommitFiberUnmount)try{st.onCommitFiberUnmount(at,r)}catch(e){}switch(r.tag){case 5:qo||Zo(r,t);case 6:var n=fl,a=ul;fl=null,hl(e,t,r),ul=a,null!==(fl=n)&&(ul?(e=fl,r=r.stateNode,8===e.nodeType?e.parentNode.removeChild(r):e.removeChild(r)):fl.removeChild(r.stateNode));break;case 18:null!==fl&&(ul?(e=fl,r=r.stateNode,8===e.nodeType?la(e.parentNode,r):1===e.nodeType&&la(e,r),Ht(e)):la(fl,r.stateNode));break;case 4:n=fl,a=ul,fl=r.stateNode.containerInfo,ul=!0,hl(e,t,r),fl=n,ul=a;break;case 0:case 11:case 14:case 15:if(!qo&&null!==(n=r.updateQueue)&&null!==(n=n.lastEffect)){a=n=n.next;do{var s=a,i=s.destroy;s=s.tag,void 0!==i&&(0!=(2&s)||0!=(4&s))&&el(r,t,i),a=a.next}while(a!==n)}hl(e,t,r);break;case 1:if(!qo&&(Zo(r,t),"function"==typeof(n=r.stateNode).componentWillUnmount))try{n.props=r.memoizedProps,n.state=r.memoizedState,n.componentWillUnmount()}catch(e){Ec(r,t,e)}hl(e,t,r);break;case 21:hl(e,t,r);break;case 22:1&r.mode?(qo=(n=qo)||null!==r.memoizedState,hl(e,t,r),qo=n):hl(e,t,r);break;default:hl(e,t,r)}}function pl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var r=e.stateNode;null===r&&(r=e.stateNode=new Qo),t.forEach((function(t){var n=Ac.bind(null,e,t);r.has(t)||(r.add(t),t.then(n,n))}))}}function ml(e,t){var r=t.deletions;if(null!==r)for(var n=0;n<r.length;n++){var a=r[n];try{var i=e,o=t,l=o;e:for(;null!==l;){switch(l.tag){case 5:fl=l.stateNode,ul=!1;break e;case 3:case 4:fl=l.stateNode.containerInfo,ul=!0;break e}l=l.return}if(null===fl)throw Error(s(160));dl(i,o,a),fl=null,ul=!1;var c=a.alternate;null!==c&&(c.return=null),a.return=null}catch(e){Ec(a,t,e)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)gl(t,e),t=t.sibling}function gl(e,t){var r=e.alternate,n=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(ml(t,e),vl(e),4&n){try{rl(3,e,e.return),nl(3,e)}catch(t){Ec(e,e.return,t)}try{rl(5,e,e.return)}catch(t){Ec(e,e.return,t)}}break;case 1:ml(t,e),vl(e),512&n&&null!==r&&Zo(r,r.return);break;case 5:if(ml(t,e),vl(e),512&n&&null!==r&&Zo(r,r.return),32&e.flags){var a=e.stateNode;try{he(a,"")}catch(t){Ec(e,e.return,t)}}if(4&n&&null!=(a=e.stateNode)){var i=e.memoizedProps,o=null!==r?r.memoizedProps:i,l=e.type,c=e.updateQueue;if(e.updateQueue=null,null!==c)try{"input"===l&&"radio"===i.type&&null!=i.name&&Q(a,i),we(l,o);var f=we(l,i);for(o=0;o<c.length;o+=2){var u=c[o],h=c[o+1];"style"===u?ge(a,h):"dangerouslySetInnerHTML"===u?ue(a,h):"children"===u?he(a,h):w(a,u,h,f)}switch(l){case"input":J(a,i);break;case"textarea":se(a,i);break;case"select":var d=a._wrapperState.wasMultiple;a._wrapperState.wasMultiple=!!i.multiple;var p=i.value;null!=p?re(a,!!i.multiple,p,!1):d!==!!i.multiple&&(null!=i.defaultValue?re(a,!!i.multiple,i.defaultValue,!0):re(a,!!i.multiple,i.multiple?[]:"",!1))}a[da]=i}catch(t){Ec(e,e.return,t)}}break;case 6:if(ml(t,e),vl(e),4&n){if(null===e.stateNode)throw Error(s(162));a=e.stateNode,i=e.memoizedProps;try{a.nodeValue=i}catch(t){Ec(e,e.return,t)}}break;case 3:if(ml(t,e),vl(e),4&n&&null!==r&&r.memoizedState.isDehydrated)try{Ht(t.containerInfo)}catch(t){Ec(e,e.return,t)}break;case 4:default:ml(t,e),vl(e);break;case 13:ml(t,e),vl(e),8192&(a=e.child).flags&&(i=null!==a.memoizedState,a.stateNode.isHidden=i,!i||null!==a.alternate&&null!==a.alternate.memoizedState||(Wl=Qe())),4&n&&pl(e);break;case 22:if(u=null!==r&&null!==r.memoizedState,1&e.mode?(qo=(f=qo)||u,ml(t,e),qo=f):ml(t,e),vl(e),8192&n){if(f=null!==e.memoizedState,(e.stateNode.isHidden=f)&&!u&&0!=(1&e.mode))for(Jo=e,u=e.child;null!==u;){for(h=Jo=u;null!==Jo;){switch(p=(d=Jo).child,d.tag){case 0:case 11:case 14:case 15:rl(4,d,d.return);break;case 1:Zo(d,d.return);var m=d.stateNode;if("function"==typeof m.componentWillUnmount){n=d,r=d.return;try{t=n,m.props=t.memoizedProps,m.state=t.memoizedState,m.componentWillUnmount()}catch(e){Ec(n,r,e)}}break;case 5:Zo(d,d.return);break;case 22:if(null!==d.memoizedState){kl(h);continue}}null!==p?(p.return=d,Jo=p):kl(h)}u=u.sibling}e:for(u=null,h=e;;){if(5===h.tag){if(null===u){u=h;try{a=h.stateNode,f?"function"==typeof(i=a.style).setProperty?i.setProperty("display","none","important"):i.display="none":(l=h.stateNode,o=null!=(c=h.memoizedProps.style)&&c.hasOwnProperty("display")?c.display:null,l.style.display=me("display",o))}catch(t){Ec(e,e.return,t)}}}else if(6===h.tag){if(null===u)try{h.stateNode.nodeValue=f?"":h.memoizedProps}catch(t){Ec(e,e.return,t)}}else if((22!==h.tag&&23!==h.tag||null===h.memoizedState||h===e)&&null!==h.child){h.child.return=h,h=h.child;continue}if(h===e)break e;for(;null===h.sibling;){if(null===h.return||h.return===e)break e;u===h&&(u=null),h=h.return}u===h&&(u=null),h.sibling.return=h.return,h=h.sibling}}break;case 19:ml(t,e),vl(e),4&n&&pl(e);case 21:}}function vl(e){var t=e.flags;if(2&t){try{e:{for(var r=e.return;null!==r;){if(il(r)){var n=r;break e}r=r.return}throw Error(s(160))}switch(n.tag){case 5:var a=n.stateNode;32&n.flags&&(he(a,""),n.flags&=-33),cl(e,ol(e),a);break;case 3:case 4:var i=n.stateNode.containerInfo;ll(e,ol(e),i);break;default:throw Error(s(161))}}catch(t){Ec(e,e.return,t)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function bl(e,t,r){Jo=e,wl(e,t,r)}function wl(e,t,r){for(var n=0!=(1&e.mode);null!==Jo;){var a=Jo,s=a.child;if(22===a.tag&&n){var i=null!==a.memoizedState||Ko;if(!i){var o=a.alternate,l=null!==o&&null!==o.memoizedState||qo;o=Ko;var c=qo;if(Ko=i,(qo=l)&&!c)for(Jo=a;null!==Jo;)l=(i=Jo).child,22===i.tag&&null!==i.memoizedState?Tl(a):null!==l?(l.return=i,Jo=l):Tl(a);for(;null!==s;)Jo=s,wl(s,t,r),s=s.sibling;Jo=a,Ko=o,qo=c}yl(e)}else 0!=(8772&a.subtreeFlags)&&null!==s?(s.return=a,Jo=s):yl(e)}}function yl(e){for(;null!==Jo;){var t=Jo;if(0!=(8772&t.flags)){var r=t.alternate;try{if(0!=(8772&t.flags))switch(t.tag){case 0:case 11:case 15:qo||nl(5,t);break;case 1:var n=t.stateNode;if(4&t.flags&&!qo)if(null===r)n.componentDidMount();else{var a=t.elementType===t.type?r.memoizedProps:gs(t.type,r.memoizedProps);n.componentDidUpdate(a,r.memoizedState,n.__reactInternalSnapshotBeforeUpdate)}var i=t.updateQueue;null!==i&&Us(t,i,n);break;case 3:var o=t.updateQueue;if(null!==o){if(r=null,null!==t.child)switch(t.child.tag){case 5:case 1:r=t.child.stateNode}Us(t,o,r)}break;case 5:var l=t.stateNode;if(null===r&&4&t.flags){r=l;var c=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":c.autoFocus&&r.focus();break;case"img":c.src&&(r.src=c.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var f=t.alternate;if(null!==f){var u=f.memoizedState;if(null!==u){var h=u.dehydrated;null!==h&&Ht(h)}}}break;default:throw Error(s(163))}qo||512&t.flags&&al(t)}catch(e){Ec(t,t.return,e)}}if(t===e){Jo=null;break}if(null!==(r=t.sibling)){r.return=t.return,Jo=r;break}Jo=t.return}}function kl(e){for(;null!==Jo;){var t=Jo;if(t===e){Jo=null;break}var r=t.sibling;if(null!==r){r.return=t.return,Jo=r;break}Jo=t.return}}function Tl(e){for(;null!==Jo;){var t=Jo;try{switch(t.tag){case 0:case 11:case 15:var r=t.return;try{nl(4,t)}catch(e){Ec(t,r,e)}break;case 1:var n=t.stateNode;if("function"==typeof n.componentDidMount){var a=t.return;try{n.componentDidMount()}catch(e){Ec(t,a,e)}}var s=t.return;try{al(t)}catch(e){Ec(t,s,e)}break;case 5:var i=t.return;try{al(t)}catch(e){Ec(t,i,e)}}}catch(e){Ec(t,t.return,e)}if(t===e){Jo=null;break}var o=t.sibling;if(null!==o){o.return=t.return,Jo=o;break}Jo=t.return}}var Sl,El=Math.ceil,xl=y.ReactCurrentDispatcher,_l=y.ReactCurrentOwner,Cl=y.ReactCurrentBatchConfig,Al=0,Ol=null,Rl=null,Nl=0,Il=0,Pl=Ea(0),Dl=0,Fl=null,Ll=0,Ml=0,Ul=0,Bl=null,zl=null,Wl=0,Hl=1/0,jl=null,Vl=!1,$l=null,Gl=null,Xl=!1,Yl=null,Kl=0,ql=0,Ql=null,Jl=-1,Zl=0;function ec(){return 0!=(6&Al)?Qe():-1!==Jl?Jl:Jl=Qe()}function tc(e){return 0==(1&e.mode)?1:0!=(2&Al)&&0!==Nl?Nl&-Nl:null!==ms.transition?(0===Zl&&(Zl=mt()),Zl):0!==(e=wt)?e:e=void 0===(e=window.event)?16:qt(e.type)}function rc(e,t,r,n){if(50<ql)throw ql=0,Ql=null,Error(s(185));vt(e,r,n),0!=(2&Al)&&e===Ol||(e===Ol&&(0==(2&Al)&&(Ml|=r),4===Dl&&oc(e,Nl)),nc(e,n),1===r&&0===Al&&0==(1&t.mode)&&(Hl=Qe()+500,Ba&&Ha()))}function nc(e,t){var r=e.callbackNode;!function(e,t){for(var r=e.suspendedLanes,n=e.pingedLanes,a=e.expirationTimes,s=e.pendingLanes;0<s;){var i=31-it(s),o=1<<i,l=a[i];-1===l?0!=(o&r)&&0==(o&n)||(a[i]=dt(o,t)):l<=t&&(e.expiredLanes|=o),s&=~o}}(e,t);var n=ht(e,e===Ol?Nl:0);if(0===n)null!==r&&Ye(r),e.callbackNode=null,e.callbackPriority=0;else if(t=n&-n,e.callbackPriority!==t){if(null!=r&&Ye(r),1===t)0===e.tag?function(e){Ba=!0,Wa(e)}(lc.bind(null,e)):Wa(lc.bind(null,e)),ia((function(){0==(6&Al)&&Ha()})),r=null;else{switch(yt(n)){case 1:r=Ze;break;case 4:r=et;break;case 16:default:r=tt;break;case 536870912:r=nt}r=Oc(r,ac.bind(null,e))}e.callbackPriority=t,e.callbackNode=r}}function ac(e,t){if(Jl=-1,Zl=0,0!=(6&Al))throw Error(s(327));var r=e.callbackNode;if(Tc()&&e.callbackNode!==r)return null;var n=ht(e,e===Ol?Nl:0);if(0===n)return null;if(0!=(30&n)||0!=(n&e.expiredLanes)||t)t=gc(e,n);else{t=n;var a=Al;Al|=2;var i=pc();for(Ol===e&&Nl===t||(jl=null,Hl=Qe()+500,hc(e,t));;)try{bc();break}catch(t){dc(e,t)}ks(),xl.current=i,Al=a,null!==Rl?t=0:(Ol=null,Nl=0,t=Dl)}if(0!==t){if(2===t&&0!==(a=pt(e))&&(n=a,t=sc(e,a)),1===t)throw r=Fl,hc(e,0),oc(e,n),nc(e,Qe()),r;if(6===t)oc(e,n);else{if(a=e.current.alternate,0==(30&n)&&!function(e){for(var t=e;;){if(16384&t.flags){var r=t.updateQueue;if(null!==r&&null!==(r=r.stores))for(var n=0;n<r.length;n++){var a=r[n],s=a.getSnapshot;a=a.value;try{if(!on(s(),a))return!1}catch(e){return!1}}}if(r=t.child,16384&t.subtreeFlags&&null!==r)r.return=t,t=r;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(a)&&(2===(t=gc(e,n))&&0!==(i=pt(e))&&(n=i,t=sc(e,i)),1===t))throw r=Fl,hc(e,0),oc(e,n),nc(e,Qe()),r;switch(e.finishedWork=a,e.finishedLanes=n,t){case 0:case 1:throw Error(s(345));case 2:case 5:kc(e,zl,jl);break;case 3:if(oc(e,n),(130023424&n)===n&&10<(t=Wl+500-Qe())){if(0!==ht(e,0))break;if(((a=e.suspendedLanes)&n)!==n){ec(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=na(kc.bind(null,e,zl,jl),t);break}kc(e,zl,jl);break;case 4:if(oc(e,n),(4194240&n)===n)break;for(t=e.eventTimes,a=-1;0<n;){var o=31-it(n);i=1<<o,(o=t[o])>a&&(a=o),n&=~i}if(n=a,10<(n=(120>(n=Qe()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*El(n/1960))-n)){e.timeoutHandle=na(kc.bind(null,e,zl,jl),n);break}kc(e,zl,jl);break;default:throw Error(s(329))}}}return nc(e,Qe()),e.callbackNode===r?ac.bind(null,e):null}function sc(e,t){var r=Bl;return e.current.memoizedState.isDehydrated&&(hc(e,t).flags|=256),2!==(e=gc(e,t))&&(t=zl,zl=r,null!==t&&ic(t)),e}function ic(e){null===zl?zl=e:zl.push.apply(zl,e)}function oc(e,t){for(t&=~Ul,t&=~Ml,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var r=31-it(t),n=1<<r;e[r]=-1,t&=~n}}function lc(e){if(0!=(6&Al))throw Error(s(327));Tc();var t=ht(e,0);if(0==(1&t))return nc(e,Qe()),null;var r=gc(e,t);if(0!==e.tag&&2===r){var n=pt(e);0!==n&&(t=n,r=sc(e,n))}if(1===r)throw r=Fl,hc(e,0),oc(e,t),nc(e,Qe()),r;if(6===r)throw Error(s(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,kc(e,zl,jl),nc(e,Qe()),null}function cc(e,t){var r=Al;Al|=1;try{return e(t)}finally{0===(Al=r)&&(Hl=Qe()+500,Ba&&Ha())}}function fc(e){null!==Yl&&0===Yl.tag&&0==(6&Al)&&Tc();var t=Al;Al|=1;var r=Cl.transition,n=wt;try{if(Cl.transition=null,wt=1,e)return e()}finally{wt=n,Cl.transition=r,0==(6&(Al=t))&&Ha()}}function uc(){Il=Pl.current,xa(Pl)}function hc(e,t){e.finishedWork=null,e.finishedLanes=0;var r=e.timeoutHandle;if(-1!==r&&(e.timeoutHandle=-1,aa(r)),null!==Rl)for(r=Rl.return;null!==r;){var n=r;switch(ts(n),n.tag){case 1:null!=(n=n.type.childContextTypes)&&Pa();break;case 3:ai(),xa(Oa),xa(Aa),fi();break;case 5:ii(n);break;case 4:ai();break;case 13:case 19:xa(oi);break;case 10:Ts(n.type._context);break;case 22:case 23:uc()}r=r.return}if(Ol=e,Rl=e=Pc(e.current,null),Nl=Il=t,Dl=0,Fl=null,Ul=Ml=Ll=0,zl=Bl=null,null!==_s){for(t=0;t<_s.length;t++)if(null!==(n=(r=_s[t]).interleaved)){r.interleaved=null;var a=n.next,s=r.pending;if(null!==s){var i=s.next;s.next=a,n.next=i}r.pending=n}_s=null}return e}function dc(e,t){for(;;){var r=Rl;try{if(ks(),ui.current=so,vi){for(var n=pi.memoizedState;null!==n;){var a=n.queue;null!==a&&(a.pending=null),n=n.next}vi=!1}if(di=0,gi=mi=pi=null,bi=!1,wi=0,_l.current=null,null===r||null===r.return){Dl=1,Fl=t,Rl=null;break}e:{var i=e,o=r.return,l=r,c=t;if(t=Nl,l.flags|=32768,null!==c&&"object"==typeof c&&"function"==typeof c.then){var f=c,u=l,h=u.tag;if(0==(1&u.mode)&&(0===h||11===h||15===h)){var d=u.alternate;d?(u.updateQueue=d.updateQueue,u.memoizedState=d.memoizedState,u.lanes=d.lanes):(u.updateQueue=null,u.memoizedState=null)}var p=vo(o);if(null!==p){p.flags&=-257,bo(p,o,l,0,t),1&p.mode&&go(i,f,t),c=f;var m=(t=p).updateQueue;if(null===m){var g=new Set;g.add(c),t.updateQueue=g}else m.add(c);break e}if(0==(1&t)){go(i,f,t),mc();break e}c=Error(s(426))}else if(as&&1&l.mode){var v=vo(o);if(null!==v){0==(65536&v.flags)&&(v.flags|=256),bo(v,o,l,0,t),ps(co(c,l));break e}}i=c=co(c,l),4!==Dl&&(Dl=2),null===Bl?Bl=[i]:Bl.push(i),i=o;do{switch(i.tag){case 3:i.flags|=65536,t&=-t,i.lanes|=t,Ls(i,po(0,c,t));break e;case 1:l=c;var b=i.type,w=i.stateNode;if(0==(128&i.flags)&&("function"==typeof b.getDerivedStateFromError||null!==w&&"function"==typeof w.componentDidCatch&&(null===Gl||!Gl.has(w)))){i.flags|=65536,t&=-t,i.lanes|=t,Ls(i,mo(i,l,t));break e}}i=i.return}while(null!==i)}yc(r)}catch(e){t=e,Rl===r&&null!==r&&(Rl=r=r.return);continue}break}}function pc(){var e=xl.current;return xl.current=so,null===e?so:e}function mc(){0!==Dl&&3!==Dl&&2!==Dl||(Dl=4),null===Ol||0==(268435455&Ll)&&0==(268435455&Ml)||oc(Ol,Nl)}function gc(e,t){var r=Al;Al|=2;var n=pc();for(Ol===e&&Nl===t||(jl=null,hc(e,t));;)try{vc();break}catch(t){dc(e,t)}if(ks(),Al=r,xl.current=n,null!==Rl)throw Error(s(261));return Ol=null,Nl=0,Dl}function vc(){for(;null!==Rl;)wc(Rl)}function bc(){for(;null!==Rl&&!Ke();)wc(Rl)}function wc(e){var t=Sl(e.alternate,e,Il);e.memoizedProps=e.pendingProps,null===t?yc(e):Rl=t,_l.current=null}function yc(e){var t=e;do{var r=t.alternate;if(e=t.return,0==(32768&t.flags)){if(null!==(r=Xo(r,t,Il)))return void(Rl=r)}else{if(null!==(r=Yo(r,t)))return r.flags&=32767,void(Rl=r);if(null===e)return Dl=6,void(Rl=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Rl=t);Rl=t=e}while(null!==t);0===Dl&&(Dl=5)}function kc(e,t,r){var n=wt,a=Cl.transition;try{Cl.transition=null,wt=1,function(e,t,r,n){do{Tc()}while(null!==Yl);if(0!=(6&Al))throw Error(s(327));r=e.finishedWork;var a=e.finishedLanes;if(null===r)return null;if(e.finishedWork=null,e.finishedLanes=0,r===e.current)throw Error(s(177));e.callbackNode=null,e.callbackPriority=0;var i=r.lanes|r.childLanes;if(function(e,t){var r=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var n=e.eventTimes;for(e=e.expirationTimes;0<r;){var a=31-it(r),s=1<<a;t[a]=0,n[a]=-1,e[a]=-1,r&=~s}}(e,i),e===Ol&&(Rl=Ol=null,Nl=0),0==(2064&r.subtreeFlags)&&0==(2064&r.flags)||Xl||(Xl=!0,Oc(tt,(function(){return Tc(),null}))),i=0!=(15990&r.flags),0!=(15990&r.subtreeFlags)||i){i=Cl.transition,Cl.transition=null;var o=wt;wt=1;var l=Al;Al|=4,_l.current=null,function(e,t){if(ea=Vt,dn(e=hn())){if("selectionStart"in e)var r={start:e.selectionStart,end:e.selectionEnd};else e:{var n=(r=(r=e.ownerDocument)&&r.defaultView||window).getSelection&&r.getSelection();if(n&&0!==n.rangeCount){r=n.anchorNode;var a=n.anchorOffset,i=n.focusNode;n=n.focusOffset;try{r.nodeType,i.nodeType}catch(e){r=null;break e}var o=0,l=-1,c=-1,f=0,u=0,h=e,d=null;t:for(;;){for(var p;h!==r||0!==a&&3!==h.nodeType||(l=o+a),h!==i||0!==n&&3!==h.nodeType||(c=o+n),3===h.nodeType&&(o+=h.nodeValue.length),null!==(p=h.firstChild);)d=h,h=p;for(;;){if(h===e)break t;if(d===r&&++f===a&&(l=o),d===i&&++u===n&&(c=o),null!==(p=h.nextSibling))break;d=(h=d).parentNode}h=p}r=-1===l||-1===c?null:{start:l,end:c}}else r=null}r=r||{start:0,end:0}}else r=null;for(ta={focusedElem:e,selectionRange:r},Vt=!1,Jo=t;null!==Jo;)if(e=(t=Jo).child,0!=(1028&t.subtreeFlags)&&null!==e)e.return=t,Jo=e;else for(;null!==Jo;){t=Jo;try{var m=t.alternate;if(0!=(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==m){var g=m.memoizedProps,v=m.memoizedState,b=t.stateNode,w=b.getSnapshotBeforeUpdate(t.elementType===t.type?g:gs(t.type,g),v);b.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var y=t.stateNode.containerInfo;1===y.nodeType?y.textContent="":9===y.nodeType&&y.documentElement&&y.removeChild(y.documentElement);break;default:throw Error(s(163))}}catch(e){Ec(t,t.return,e)}if(null!==(e=t.sibling)){e.return=t.return,Jo=e;break}Jo=t.return}m=tl,tl=!1}(e,r),gl(r,e),pn(ta),Vt=!!ea,ta=ea=null,e.current=r,bl(r,e,a),qe(),Al=l,wt=o,Cl.transition=i}else e.current=r;if(Xl&&(Xl=!1,Yl=e,Kl=a),0===(i=e.pendingLanes)&&(Gl=null),function(e){if(st&&"function"==typeof st.onCommitFiberRoot)try{st.onCommitFiberRoot(at,e,void 0,128==(128&e.current.flags))}catch(e){}}(r.stateNode),nc(e,Qe()),null!==t)for(n=e.onRecoverableError,r=0;r<t.length;r++)n((a=t[r]).value,{componentStack:a.stack,digest:a.digest});if(Vl)throw Vl=!1,e=$l,$l=null,e;0!=(1&Kl)&&0!==e.tag&&Tc(),0!=(1&(i=e.pendingLanes))?e===Ql?ql++:(ql=0,Ql=e):ql=0,Ha()}(e,t,r,n)}finally{Cl.transition=a,wt=n}return null}function Tc(){if(null!==Yl){var e=yt(Kl),t=Cl.transition,r=wt;try{if(Cl.transition=null,wt=16>e?16:e,null===Yl)var n=!1;else{if(e=Yl,Yl=null,Kl=0,0!=(6&Al))throw Error(s(331));var a=Al;for(Al|=4,Jo=e.current;null!==Jo;){var i=Jo,o=i.child;if(0!=(16&Jo.flags)){var l=i.deletions;if(null!==l){for(var c=0;c<l.length;c++){var f=l[c];for(Jo=f;null!==Jo;){var u=Jo;switch(u.tag){case 0:case 11:case 15:rl(8,u,i)}var h=u.child;if(null!==h)h.return=u,Jo=h;else for(;null!==Jo;){var d=(u=Jo).sibling,p=u.return;if(sl(u),u===f){Jo=null;break}if(null!==d){d.return=p,Jo=d;break}Jo=p}}}var m=i.alternate;if(null!==m){var g=m.child;if(null!==g){m.child=null;do{var v=g.sibling;g.sibling=null,g=v}while(null!==g)}}Jo=i}}if(0!=(2064&i.subtreeFlags)&&null!==o)o.return=i,Jo=o;else e:for(;null!==Jo;){if(0!=(2048&(i=Jo).flags))switch(i.tag){case 0:case 11:case 15:rl(9,i,i.return)}var b=i.sibling;if(null!==b){b.return=i.return,Jo=b;break e}Jo=i.return}}var w=e.current;for(Jo=w;null!==Jo;){var y=(o=Jo).child;if(0!=(2064&o.subtreeFlags)&&null!==y)y.return=o,Jo=y;else e:for(o=w;null!==Jo;){if(0!=(2048&(l=Jo).flags))try{switch(l.tag){case 0:case 11:case 15:nl(9,l)}}catch(e){Ec(l,l.return,e)}if(l===o){Jo=null;break e}var k=l.sibling;if(null!==k){k.return=l.return,Jo=k;break e}Jo=l.return}}if(Al=a,Ha(),st&&"function"==typeof st.onPostCommitFiberRoot)try{st.onPostCommitFiberRoot(at,e)}catch(e){}n=!0}return n}finally{wt=r,Cl.transition=t}}return!1}function Sc(e,t,r){e=Ds(e,t=po(0,t=co(r,t),1),1),t=ec(),null!==e&&(vt(e,1,t),nc(e,t))}function Ec(e,t,r){if(3===e.tag)Sc(e,e,r);else for(;null!==t;){if(3===t.tag){Sc(t,e,r);break}if(1===t.tag){var n=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof n.componentDidCatch&&(null===Gl||!Gl.has(n))){t=Ds(t,e=mo(t,e=co(r,e),1),1),e=ec(),null!==t&&(vt(t,1,e),nc(t,e));break}}t=t.return}}function xc(e,t,r){var n=e.pingCache;null!==n&&n.delete(t),t=ec(),e.pingedLanes|=e.suspendedLanes&r,Ol===e&&(Nl&r)===r&&(4===Dl||3===Dl&&(130023424&Nl)===Nl&&500>Qe()-Wl?hc(e,0):Ul|=r),nc(e,t)}function _c(e,t){0===t&&(0==(1&e.mode)?t=1:(t=ft,0==(130023424&(ft<<=1))&&(ft=4194304)));var r=ec();null!==(e=Os(e,t))&&(vt(e,t,r),nc(e,r))}function Cc(e){var t=e.memoizedState,r=0;null!==t&&(r=t.retryLane),_c(e,r)}function Ac(e,t){var r=0;switch(e.tag){case 13:var n=e.stateNode,a=e.memoizedState;null!==a&&(r=a.retryLane);break;case 19:n=e.stateNode;break;default:throw Error(s(314))}null!==n&&n.delete(t),_c(e,r)}function Oc(e,t){return Xe(e,t)}function Rc(e,t,r,n){this.tag=e,this.key=r,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=n,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Nc(e,t,r,n){return new Rc(e,t,r,n)}function Ic(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Pc(e,t){var r=e.alternate;return null===r?((r=Nc(e.tag,t,e.key,e.mode)).elementType=e.elementType,r.type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.pendingProps=t,r.type=e.type,r.flags=0,r.subtreeFlags=0,r.deletions=null),r.flags=14680064&e.flags,r.childLanes=e.childLanes,r.lanes=e.lanes,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,t=e.dependencies,r.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r}function Dc(e,t,r,n,a,i){var o=2;if(n=e,"function"==typeof e)Ic(e)&&(o=1);else if("string"==typeof e)o=5;else e:switch(e){case S:return Fc(r.children,a,i,t);case E:o=8,a|=8;break;case x:return(e=Nc(12,r,t,2|a)).elementType=x,e.lanes=i,e;case O:return(e=Nc(13,r,t,a)).elementType=O,e.lanes=i,e;case R:return(e=Nc(19,r,t,a)).elementType=R,e.lanes=i,e;case P:return Lc(r,a,i,t);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case _:o=10;break e;case C:o=9;break e;case A:o=11;break e;case N:o=14;break e;case I:o=16,n=null;break e}throw Error(s(130,null==e?e:typeof e,""))}return(t=Nc(o,r,t,a)).elementType=e,t.type=n,t.lanes=i,t}function Fc(e,t,r,n){return(e=Nc(7,e,n,t)).lanes=r,e}function Lc(e,t,r,n){return(e=Nc(22,e,n,t)).elementType=P,e.lanes=r,e.stateNode={isHidden:!1},e}function Mc(e,t,r){return(e=Nc(6,e,null,t)).lanes=r,e}function Uc(e,t,r){return(t=Nc(4,null!==e.children?e.children:[],e.key,t)).lanes=r,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Bc(e,t,r,n,a){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gt(0),this.expirationTimes=gt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gt(0),this.identifierPrefix=n,this.onRecoverableError=a,this.mutableSourceEagerHydrationData=null}function zc(e,t,r,n,a,s,i,o,l){return e=new Bc(e,t,r,o,l),1===t?(t=1,!0===s&&(t|=8)):t=0,s=Nc(3,null,null,t),e.current=s,s.stateNode=e,s.memoizedState={element:n,isDehydrated:r,cache:null,transitions:null,pendingSuspenseBoundaries:null},Ns(s),e}function Wc(e,t,r){var n=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:T,key:null==n?null:""+n,children:e,containerInfo:t,implementation:r}}function Hc(e){if(!e)return Ca;e:{if(He(e=e._reactInternals)!==e||1!==e.tag)throw Error(s(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Ia(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(s(171))}if(1===e.tag){var r=e.type;if(Ia(r))return Fa(e,r,t)}return t}function jc(e,t,r,n,a,s,i,o,l){return(e=zc(r,n,!0,e,0,s,0,o,l)).context=Hc(null),r=e.current,(s=Ps(n=ec(),a=tc(r))).callback=null!=t?t:null,Ds(r,s,a),e.current.lanes=a,vt(e,a,n),nc(e,n),e}function Vc(e,t,r,n){var a=t.current,s=ec(),i=tc(a);return r=Hc(r),null===t.context?t.context=r:t.pendingContext=r,(t=Ps(s,i)).payload={element:e},null!==(n=void 0===n?null:n)&&(t.callback=n),null!==(e=Ds(a,t,i))&&(rc(e,a,i,s),Fs(e,a,i)),i}function $c(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Gc(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var r=e.retryLane;e.retryLane=0!==r&&r<t?r:t}}function Xc(e,t){Gc(e,t),(e=e.alternate)&&Gc(e,t)}Sl=function(e,t,r){if(null!==e)if(e.memoizedProps!==t.pendingProps||Oa.current)yo=!0;else{if(0==(e.lanes&r)&&0==(128&t.flags))return yo=!1,function(e,t,r){switch(t.tag){case 3:Ro(t),ds();break;case 5:si(t);break;case 1:Ia(t.type)&&La(t);break;case 4:ni(t,t.stateNode.containerInfo);break;case 10:var n=t.type._context,a=t.memoizedProps.value;_a(vs,n._currentValue),n._currentValue=a;break;case 13:if(null!==(n=t.memoizedState))return null!==n.dehydrated?(_a(oi,1&oi.current),t.flags|=128,null):0!=(r&t.child.childLanes)?Mo(e,t,r):(_a(oi,1&oi.current),null!==(e=Vo(e,t,r))?e.sibling:null);_a(oi,1&oi.current);break;case 19:if(n=0!=(r&t.childLanes),0!=(128&e.flags)){if(n)return Ho(e,t,r);t.flags|=128}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),_a(oi,oi.current),n)break;return null;case 22:case 23:return t.lanes=0,xo(e,t,r)}return Vo(e,t,r)}(e,t,r);yo=0!=(131072&e.flags)}else yo=!1,as&&0!=(1048576&t.flags)&&Za(t,Ga,t.index);switch(t.lanes=0,t.tag){case 2:var n=t.type;jo(e,t),e=t.pendingProps;var a=Na(t,Aa.current);Es(t,r),a=Si(null,t,n,e,a,r);var i=Ei();return t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Ia(n)?(i=!0,La(t)):i=!1,t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,Ns(t),a.updater=Ws,t.stateNode=a,a._reactInternals=t,$s(t,n,e,r),t=Oo(null,t,n,!0,i,r)):(t.tag=0,as&&i&&es(t),ko(null,t,a,r),t=t.child),t;case 16:n=t.elementType;e:{switch(jo(e,t),e=t.pendingProps,n=(a=n._init)(n._payload),t.type=n,a=t.tag=function(e){if("function"==typeof e)return Ic(e)?1:0;if(null!=e){if((e=e.$$typeof)===A)return 11;if(e===N)return 14}return 2}(n),e=gs(n,e),a){case 0:t=Co(null,t,n,e,r);break e;case 1:t=Ao(null,t,n,e,r);break e;case 11:t=To(null,t,n,e,r);break e;case 14:t=So(null,t,n,gs(n.type,e),r);break e}throw Error(s(306,n,""))}return t;case 0:return n=t.type,a=t.pendingProps,Co(e,t,n,a=t.elementType===n?a:gs(n,a),r);case 1:return n=t.type,a=t.pendingProps,Ao(e,t,n,a=t.elementType===n?a:gs(n,a),r);case 3:e:{if(Ro(t),null===e)throw Error(s(387));n=t.pendingProps,a=(i=t.memoizedState).element,Is(e,t),Ms(t,n,null,r);var o=t.memoizedState;if(n=o.element,i.isDehydrated){if(i={element:n,isDehydrated:!1,cache:o.cache,pendingSuspenseBoundaries:o.pendingSuspenseBoundaries,transitions:o.transitions},t.updateQueue.baseState=i,t.memoizedState=i,256&t.flags){t=No(e,t,n,r,a=co(Error(s(423)),t));break e}if(n!==a){t=No(e,t,n,r,a=co(Error(s(424)),t));break e}for(ns=ca(t.stateNode.containerInfo.firstChild),rs=t,as=!0,ss=null,r=Qs(t,null,n,r),t.child=r;r;)r.flags=-3&r.flags|4096,r=r.sibling}else{if(ds(),n===a){t=Vo(e,t,r);break e}ko(e,t,n,r)}t=t.child}return t;case 5:return si(t),null===e&&cs(t),n=t.type,a=t.pendingProps,i=null!==e?e.memoizedProps:null,o=a.children,ra(n,a)?o=null:null!==i&&ra(n,i)&&(t.flags|=32),_o(e,t),ko(e,t,o,r),t.child;case 6:return null===e&&cs(t),null;case 13:return Mo(e,t,r);case 4:return ni(t,t.stateNode.containerInfo),n=t.pendingProps,null===e?t.child=qs(t,null,n,r):ko(e,t,n,r),t.child;case 11:return n=t.type,a=t.pendingProps,To(e,t,n,a=t.elementType===n?a:gs(n,a),r);case 7:return ko(e,t,t.pendingProps,r),t.child;case 8:case 12:return ko(e,t,t.pendingProps.children,r),t.child;case 10:e:{if(n=t.type._context,a=t.pendingProps,i=t.memoizedProps,o=a.value,_a(vs,n._currentValue),n._currentValue=o,null!==i)if(on(i.value,o)){if(i.children===a.children&&!Oa.current){t=Vo(e,t,r);break e}}else for(null!==(i=t.child)&&(i.return=t);null!==i;){var l=i.dependencies;if(null!==l){o=i.child;for(var c=l.firstContext;null!==c;){if(c.context===n){if(1===i.tag){(c=Ps(-1,r&-r)).tag=2;var f=i.updateQueue;if(null!==f){var u=(f=f.shared).pending;null===u?c.next=c:(c.next=u.next,u.next=c),f.pending=c}}i.lanes|=r,null!==(c=i.alternate)&&(c.lanes|=r),Ss(i.return,r,t),l.lanes|=r;break}c=c.next}}else if(10===i.tag)o=i.type===t.type?null:i.child;else if(18===i.tag){if(null===(o=i.return))throw Error(s(341));o.lanes|=r,null!==(l=o.alternate)&&(l.lanes|=r),Ss(o,r,t),o=i.sibling}else o=i.child;if(null!==o)o.return=i;else for(o=i;null!==o;){if(o===t){o=null;break}if(null!==(i=o.sibling)){i.return=o.return,o=i;break}o=o.return}i=o}ko(e,t,a.children,r),t=t.child}return t;case 9:return a=t.type,n=t.pendingProps.children,Es(t,r),n=n(a=xs(a)),t.flags|=1,ko(e,t,n,r),t.child;case 14:return a=gs(n=t.type,t.pendingProps),So(e,t,n,a=gs(n.type,a),r);case 15:return Eo(e,t,t.type,t.pendingProps,r);case 17:return n=t.type,a=t.pendingProps,a=t.elementType===n?a:gs(n,a),jo(e,t),t.tag=1,Ia(n)?(e=!0,La(t)):e=!1,Es(t,r),js(t,n,a),$s(t,n,a,r),Oo(null,t,n,!0,e,r);case 19:return Ho(e,t,r);case 22:return xo(e,t,r)}throw Error(s(156,t.tag))};var Yc="function"==typeof reportError?reportError:function(e){console.error(e)};function Kc(e){this._internalRoot=e}function qc(e){this._internalRoot=e}function Qc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Jc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Zc(){}function ef(e,t,r,n,a){var s=r._reactRootContainer;if(s){var i=s;if("function"==typeof a){var o=a;a=function(){var e=$c(i);o.call(e)}}Vc(t,i,e,a)}else i=function(e,t,r,n,a){if(a){if("function"==typeof n){var s=n;n=function(){var e=$c(i);s.call(e)}}var i=jc(t,n,e,0,null,!1,0,"",Zc);return e._reactRootContainer=i,e[pa]=i.current,Hn(8===e.nodeType?e.parentNode:e),fc(),i}for(;a=e.lastChild;)e.removeChild(a);if("function"==typeof n){var o=n;n=function(){var e=$c(l);o.call(e)}}var l=zc(e,0,!1,null,0,!1,0,"",Zc);return e._reactRootContainer=l,e[pa]=l.current,Hn(8===e.nodeType?e.parentNode:e),fc((function(){Vc(t,l,r,n)})),l}(r,t,e,a,n);return $c(i)}qc.prototype.render=Kc.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(s(409));Vc(e,t,null,null)},qc.prototype.unmount=Kc.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;fc((function(){Vc(null,e,null,null)})),t[pa]=null}},qc.prototype.unstable_scheduleHydration=function(e){if(e){var t=Et();e={blockedOn:null,target:e,priority:t};for(var r=0;r<Pt.length&&0!==t&&t<Pt[r].priority;r++);Pt.splice(r,0,e),0===r&&Mt(e)}},kt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var r=ut(t.pendingLanes);0!==r&&(bt(t,1|r),nc(t,Qe()),0==(6&Al)&&(Hl=Qe()+500,Ha()))}break;case 13:fc((function(){var t=Os(e,1);if(null!==t){var r=ec();rc(t,e,1,r)}})),Xc(e,1)}},Tt=function(e){if(13===e.tag){var t=Os(e,134217728);null!==t&&rc(t,e,134217728,ec()),Xc(e,134217728)}},St=function(e){if(13===e.tag){var t=tc(e),r=Os(e,t);null!==r&&rc(r,e,t,ec()),Xc(e,t)}},Et=function(){return wt},xt=function(e,t){var r=wt;try{return wt=e,t()}finally{wt=r}},Te=function(e,t,r){switch(t){case"input":if(J(e,r),t=r.name,"radio"===r.type&&null!=t){for(r=e;r.parentNode;)r=r.parentNode;for(r=r.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<r.length;t++){var n=r[t];if(n!==e&&n.form===e.form){var a=ka(n);if(!a)throw Error(s(90));X(n),J(n,a)}}}break;case"textarea":se(e,r);break;case"select":null!=(t=r.value)&&re(e,!!r.multiple,t,!1)}},Ae=cc,Oe=fc;var tf={usingClientEntryPoint:!1,Events:[wa,ya,ka,_e,Ce,cc]},rf={findFiberByHostInstance:ba,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},nf={bundleType:rf.bundleType,version:rf.version,rendererPackageName:rf.rendererPackageName,rendererConfig:rf.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:y.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=$e(e))?null:e.stateNode},findFiberByHostInstance:rf.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var af=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!af.isDisabled&&af.supportsFiber)try{at=af.inject(nf),st=af}catch(fe){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tf,t.createPortal=function(e,t){var r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Qc(t))throw Error(s(200));return Wc(e,t,null,r)},t.createRoot=function(e,t){if(!Qc(e))throw Error(s(299));var r=!1,n="",a=Yc;return null!=t&&(!0===t.unstable_strictMode&&(r=!0),void 0!==t.identifierPrefix&&(n=t.identifierPrefix),void 0!==t.onRecoverableError&&(a=t.onRecoverableError)),t=zc(e,1,!1,null,0,r,0,n,a),e[pa]=t.current,Hn(8===e.nodeType?e.parentNode:e),new Kc(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(s(188));throw e=Object.keys(e).join(","),Error(s(268,e))}return null===(e=$e(t))?null:e.stateNode},t.flushSync=function(e){return fc(e)},t.hydrate=function(e,t,r){if(!Jc(t))throw Error(s(200));return ef(null,e,t,!0,r)},t.hydrateRoot=function(e,t,r){if(!Qc(e))throw Error(s(405));var n=null!=r&&r.hydratedSources||null,a=!1,i="",o=Yc;if(null!=r&&(!0===r.unstable_strictMode&&(a=!0),void 0!==r.identifierPrefix&&(i=r.identifierPrefix),void 0!==r.onRecoverableError&&(o=r.onRecoverableError)),t=jc(t,null,e,1,null!=r?r:null,a,0,i,o),e[pa]=t.current,Hn(e),n)for(e=0;e<n.length;e++)a=(a=(r=n[e])._getVersion)(r._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[r,a]:t.mutableSourceEagerHydrationData.push(r,a);return new qc(t)},t.render=function(e,t,r){if(!Jc(t))throw Error(s(200));return ef(null,e,t,!1,r)},t.unmountComponentAtNode=function(e){if(!Jc(e))throw Error(s(40));return!!e._reactRootContainer&&(fc((function(){ef(null,null,e,!1,(function(){e._reactRootContainer=null,e[pa]=null}))})),!0)},t.unstable_batchedUpdates=cc,t.unstable_renderSubtreeIntoContainer=function(e,t,r,n){if(!Jc(r))throw Error(s(200));if(null==e||void 0===e._reactInternals)throw Error(s(38));return ef(e,t,r,!1,n)},t.version="18.2.0-next-9e3b772b8-20220608"},745:(e,t,r)=>{"use strict";var n=r(935);t.createRoot=n.createRoot,t.hydrateRoot=n.hydrateRoot},935:(e,t,r)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=r(448)},921:(e,t)=>{"use strict";var r="function"==typeof Symbol&&Symbol.for,n=r?Symbol.for("react.element"):60103,a=r?Symbol.for("react.portal"):60106,s=r?Symbol.for("react.fragment"):60107,i=r?Symbol.for("react.strict_mode"):60108,o=r?Symbol.for("react.profiler"):60114,l=r?Symbol.for("react.provider"):60109,c=r?Symbol.for("react.context"):60110,f=r?Symbol.for("react.async_mode"):60111,u=r?Symbol.for("react.concurrent_mode"):60111,h=r?Symbol.for("react.forward_ref"):60112,d=r?Symbol.for("react.suspense"):60113,p=r?Symbol.for("react.suspense_list"):60120,m=r?Symbol.for("react.memo"):60115,g=r?Symbol.for("react.lazy"):60116,v=r?Symbol.for("react.block"):60121,b=r?Symbol.for("react.fundamental"):60117,w=r?Symbol.for("react.responder"):60118,y=r?Symbol.for("react.scope"):60119;function k(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case n:switch(e=e.type){case f:case u:case s:case o:case i:case d:return e;default:switch(e=e&&e.$$typeof){case c:case h:case g:case m:case l:return e;default:return t}}case a:return t}}}function T(e){return k(e)===u}t.AsyncMode=f,t.ConcurrentMode=u,t.ContextConsumer=c,t.ContextProvider=l,t.Element=n,t.ForwardRef=h,t.Fragment=s,t.Lazy=g,t.Memo=m,t.Portal=a,t.Profiler=o,t.StrictMode=i,t.Suspense=d,t.isAsyncMode=function(e){return T(e)||k(e)===f},t.isConcurrentMode=T,t.isContextConsumer=function(e){return k(e)===c},t.isContextProvider=function(e){return k(e)===l},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===n},t.isForwardRef=function(e){return k(e)===h},t.isFragment=function(e){return k(e)===s},t.isLazy=function(e){return k(e)===g},t.isMemo=function(e){return k(e)===m},t.isPortal=function(e){return k(e)===a},t.isProfiler=function(e){return k(e)===o},t.isStrictMode=function(e){return k(e)===i},t.isSuspense=function(e){return k(e)===d},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===s||e===u||e===o||e===i||e===d||e===p||"object"==typeof e&&null!==e&&(e.$$typeof===g||e.$$typeof===m||e.$$typeof===l||e.$$typeof===c||e.$$typeof===h||e.$$typeof===b||e.$$typeof===w||e.$$typeof===y||e.$$typeof===v)},t.typeOf=k},864:(e,t,r)=>{"use strict";e.exports=r(921)},408:(e,t)=>{"use strict";var r=Symbol.for("react.element"),n=Symbol.for("react.portal"),a=Symbol.for("react.fragment"),s=Symbol.for("react.strict_mode"),i=Symbol.for("react.profiler"),o=Symbol.for("react.provider"),l=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),f=Symbol.for("react.suspense"),u=Symbol.for("react.memo"),h=Symbol.for("react.lazy"),d=Symbol.iterator,p={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,g={};function v(e,t,r){this.props=e,this.context=t,this.refs=g,this.updater=r||p}function b(){}function w(e,t,r){this.props=e,this.context=t,this.refs=g,this.updater=r||p}v.prototype.isReactComponent={},v.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},v.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=v.prototype;var y=w.prototype=new b;y.constructor=w,m(y,v.prototype),y.isPureReactComponent=!0;var k=Array.isArray,T=Object.prototype.hasOwnProperty,S={current:null},E={key:!0,ref:!0,__self:!0,__source:!0};function x(e,t,n){var a,s={},i=null,o=null;if(null!=t)for(a in void 0!==t.ref&&(o=t.ref),void 0!==t.key&&(i=""+t.key),t)T.call(t,a)&&!E.hasOwnProperty(a)&&(s[a]=t[a]);var l=arguments.length-2;if(1===l)s.children=n;else if(1<l){for(var c=Array(l),f=0;f<l;f++)c[f]=arguments[f+2];s.children=c}if(e&&e.defaultProps)for(a in l=e.defaultProps)void 0===s[a]&&(s[a]=l[a]);return{$$typeof:r,type:e,key:i,ref:o,props:s,_owner:S.current}}function _(e){return"object"==typeof e&&null!==e&&e.$$typeof===r}var C=/\/+/g;function A(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function O(e,t,a,s,i){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var l=!1;if(null===e)l=!0;else switch(o){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case r:case n:l=!0}}if(l)return i=i(l=e),e=""===s?"."+A(l,0):s,k(i)?(a="",null!=e&&(a=e.replace(C,"$&/")+"/"),O(i,t,a,"",(function(e){return e}))):null!=i&&(_(i)&&(i=function(e,t){return{$$typeof:r,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,a+(!i.key||l&&l.key===i.key?"":(""+i.key).replace(C,"$&/")+"/")+e)),t.push(i)),1;if(l=0,s=""===s?".":s+":",k(e))for(var c=0;c<e.length;c++){var f=s+A(o=e[c],c);l+=O(o,t,a,f,i)}else if(f=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e),"function"==typeof f)for(e=f.call(e),c=0;!(o=e.next()).done;)l+=O(o=o.value,t,a,f=s+A(o,c++),i);else if("object"===o)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return l}function R(e,t,r){if(null==e)return e;var n=[],a=0;return O(e,n,"","",(function(e){return t.call(r,e,a++)})),n}function N(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var I={current:null},P={transition:null},D={ReactCurrentDispatcher:I,ReactCurrentBatchConfig:P,ReactCurrentOwner:S};t.Children={map:R,forEach:function(e,t,r){R(e,(function(){t.apply(this,arguments)}),r)},count:function(e){var t=0;return R(e,(function(){t++})),t},toArray:function(e){return R(e,(function(e){return e}))||[]},only:function(e){if(!_(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=v,t.Fragment=a,t.Profiler=i,t.PureComponent=w,t.StrictMode=s,t.Suspense=f,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=D,t.cloneElement=function(e,t,n){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var a=m({},e.props),s=e.key,i=e.ref,o=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,o=S.current),void 0!==t.key&&(s=""+t.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(c in t)T.call(t,c)&&!E.hasOwnProperty(c)&&(a[c]=void 0===t[c]&&void 0!==l?l[c]:t[c])}var c=arguments.length-2;if(1===c)a.children=n;else if(1<c){l=Array(c);for(var f=0;f<c;f++)l[f]=arguments[f+2];a.children=l}return{$$typeof:r,type:e.type,key:s,ref:i,props:a,_owner:o}},t.createContext=function(e){return(e={$$typeof:l,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:o,_context:e},e.Consumer=e},t.createElement=x,t.createFactory=function(e){var t=x.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:c,render:e}},t.isValidElement=_,t.lazy=function(e){return{$$typeof:h,_payload:{_status:-1,_result:e},_init:N}},t.memo=function(e,t){return{$$typeof:u,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=P.transition;P.transition={};try{e()}finally{P.transition=t}},t.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},t.useCallback=function(e,t){return I.current.useCallback(e,t)},t.useContext=function(e){return I.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return I.current.useDeferredValue(e)},t.useEffect=function(e,t){return I.current.useEffect(e,t)},t.useId=function(){return I.current.useId()},t.useImperativeHandle=function(e,t,r){return I.current.useImperativeHandle(e,t,r)},t.useInsertionEffect=function(e,t){return I.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return I.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return I.current.useMemo(e,t)},t.useReducer=function(e,t,r){return I.current.useReducer(e,t,r)},t.useRef=function(e){return I.current.useRef(e)},t.useState=function(e){return I.current.useState(e)},t.useSyncExternalStore=function(e,t,r){return I.current.useSyncExternalStore(e,t,r)},t.useTransition=function(){return I.current.useTransition()},t.version="18.2.0"},294:(e,t,r)=>{"use strict";e.exports=r(408)},53:(e,t)=>{"use strict";function r(e,t){var r=e.length;e.push(t);e:for(;0<r;){var n=r-1>>>1,a=e[n];if(!(0<s(a,t)))break e;e[n]=t,e[r]=a,r=n}}function n(e){return 0===e.length?null:e[0]}function a(e){if(0===e.length)return null;var t=e[0],r=e.pop();if(r!==t){e[0]=r;e:for(var n=0,a=e.length,i=a>>>1;n<i;){var o=2*(n+1)-1,l=e[o],c=o+1,f=e[c];if(0>s(l,r))c<a&&0>s(f,l)?(e[n]=f,e[c]=r,n=c):(e[n]=l,e[o]=r,n=o);else{if(!(c<a&&0>s(f,r)))break e;e[n]=f,e[c]=r,n=c}}}return t}function s(e,t){var r=e.sortIndex-t.sortIndex;return 0!==r?r:e.id-t.id}if("object"==typeof performance&&"function"==typeof performance.now){var i=performance;t.unstable_now=function(){return i.now()}}else{var o=Date,l=o.now();t.unstable_now=function(){return o.now()-l}}var c=[],f=[],u=1,h=null,d=3,p=!1,m=!1,g=!1,v="function"==typeof setTimeout?setTimeout:null,b="function"==typeof clearTimeout?clearTimeout:null,w="undefined"!=typeof setImmediate?setImmediate:null;function y(e){for(var t=n(f);null!==t;){if(null===t.callback)a(f);else{if(!(t.startTime<=e))break;a(f),t.sortIndex=t.expirationTime,r(c,t)}t=n(f)}}function k(e){if(g=!1,y(e),!m)if(null!==n(c))m=!0,P(T);else{var t=n(f);null!==t&&D(k,t.startTime-e)}}function T(e,r){m=!1,g&&(g=!1,b(_),_=-1),p=!0;var s=d;try{for(y(r),h=n(c);null!==h&&(!(h.expirationTime>r)||e&&!O());){var i=h.callback;if("function"==typeof i){h.callback=null,d=h.priorityLevel;var o=i(h.expirationTime<=r);r=t.unstable_now(),"function"==typeof o?h.callback=o:h===n(c)&&a(c),y(r)}else a(c);h=n(c)}if(null!==h)var l=!0;else{var u=n(f);null!==u&&D(k,u.startTime-r),l=!1}return l}finally{h=null,d=s,p=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var S,E=!1,x=null,_=-1,C=5,A=-1;function O(){return!(t.unstable_now()-A<C)}function R(){if(null!==x){var e=t.unstable_now();A=e;var r=!0;try{r=x(!0,e)}finally{r?S():(E=!1,x=null)}}else E=!1}if("function"==typeof w)S=function(){w(R)};else if("undefined"!=typeof MessageChannel){var N=new MessageChannel,I=N.port2;N.port1.onmessage=R,S=function(){I.postMessage(null)}}else S=function(){v(R,0)};function P(e){x=e,E||(E=!0,S())}function D(e,r){_=v((function(){e(t.unstable_now())}),r)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){m||p||(m=!0,P(T))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):C=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return d},t.unstable_getFirstCallbackNode=function(){return n(c)},t.unstable_next=function(e){switch(d){case 1:case 2:case 3:var t=3;break;default:t=d}var r=d;d=t;try{return e()}finally{d=r}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=d;d=e;try{return t()}finally{d=r}},t.unstable_scheduleCallback=function(e,a,s){var i=t.unstable_now();switch(s="object"==typeof s&&null!==s&&"number"==typeof(s=s.delay)&&0<s?i+s:i,e){case 1:var o=-1;break;case 2:o=250;break;case 5:o=1073741823;break;case 4:o=1e4;break;default:o=5e3}return e={id:u++,callback:a,priorityLevel:e,startTime:s,expirationTime:o=s+o,sortIndex:-1},s>i?(e.sortIndex=s,r(f,e),null===n(c)&&e===n(f)&&(g?(b(_),_=-1):g=!0,D(k,s-i))):(e.sortIndex=o,r(c,e),m||p||(m=!0,P(T))),e},t.unstable_shouldYield=O,t.unstable_wrapCallback=function(e){var t=d;return function(){var r=d;d=t;try{return e.apply(this,arguments)}finally{d=r}}}},840:(e,t,r)=>{"use strict";e.exports=r(53)},774:e=>{e.exports=function(e,t,r,n){var a=r?r.call(n,e,t):void 0;if(void 0!==a)return!!a;if(e===t)return!0;if("object"!=typeof e||!e||"object"!=typeof t||!t)return!1;var s=Object.keys(e),i=Object.keys(t);if(s.length!==i.length)return!1;for(var o=Object.prototype.hasOwnProperty.bind(t),l=0;l<s.length;l++){var c=s[l];if(!o(c))return!1;var f=e[c],u=t[c];if(!1===(a=r?r.call(n,f,u,c):void 0)||void 0===a&&f!==u)return!1}return!0}},788:(e,t,r)=>{"use strict";r.r(t),r.d(t,{ServerStyleSheet:()=>ze,StyleSheetConsumer:()=>ae,StyleSheetContext:()=>ne,StyleSheetManager:()=>fe,ThemeConsumer:()=>Ie,ThemeContext:()=>Ne,ThemeProvider:()=>Pe,__PRIVATE__:()=>je,createGlobalStyle:()=>Ue,css:()=>ye,default:()=>Ve,isStyledComponent:()=>y,keyframes:()=>Be,useTheme:()=>He,version:()=>T,withTheme:()=>We});var n=r(864),a=r(294),s=r(774),i=r.n(s);const o=function(e){function t(e,n,l,c,h){for(var d,p,m,g,y,T=0,S=0,E=0,x=0,_=0,I=0,D=m=d=0,L=0,M=0,U=0,B=0,z=l.length,W=z-1,H="",j="",V="",$="";L<z;){if(p=l.charCodeAt(L),L===W&&0!==S+x+E+T&&(0!==S&&(p=47===S?10:47),x=E=T=0,z++,W++),0===S+x+E+T){if(L===W&&(0<M&&(H=H.replace(u,"")),0<H.trim().length)){switch(p){case 32:case 9:case 59:case 13:case 10:break;default:H+=l.charAt(L)}p=59}switch(p){case 123:for(d=(H=H.trim()).charCodeAt(0),m=1,B=++L;L<z;){switch(p=l.charCodeAt(L)){case 123:m++;break;case 125:m--;break;case 47:switch(p=l.charCodeAt(L+1)){case 42:case 47:e:{for(D=L+1;D<W;++D)switch(l.charCodeAt(D)){case 47:if(42===p&&42===l.charCodeAt(D-1)&&L+2!==D){L=D+1;break e}break;case 10:if(47===p){L=D+1;break e}}L=D}}break;case 91:p++;case 40:p++;case 34:case 39:for(;L++<W&&l.charCodeAt(L)!==p;);}if(0===m)break;L++}if(m=l.substring(B,L),0===d&&(d=(H=H.replace(f,"").trim()).charCodeAt(0)),64===d){switch(0<M&&(H=H.replace(u,"")),p=H.charCodeAt(1)){case 100:case 109:case 115:case 45:M=n;break;default:M=N}if(B=(m=t(n,M,m,p,h+1)).length,0<P&&(y=o(3,m,M=r(N,H,U),n,A,C,B,p,h,c),H=M.join(""),void 0!==y&&0===(B=(m=y.trim()).length)&&(p=0,m="")),0<B)switch(p){case 115:H=H.replace(k,i);case 100:case 109:case 45:m=H+"{"+m+"}";break;case 107:m=(H=H.replace(v,"$1 $2"))+"{"+m+"}",m=1===R||2===R&&s("@"+m,3)?"@-webkit-"+m+"@"+m:"@"+m;break;default:m=H+m,112===c&&(j+=m,m="")}else m=""}else m=t(n,r(n,H,U),m,c,h+1);V+=m,m=U=M=D=d=0,H="",p=l.charCodeAt(++L);break;case 125:case 59:if(1<(B=(H=(0<M?H.replace(u,""):H).trim()).length))switch(0===D&&(d=H.charCodeAt(0),45===d||96<d&&123>d)&&(B=(H=H.replace(" ",":")).length),0<P&&void 0!==(y=o(1,H,n,e,A,C,j.length,c,h,c))&&0===(B=(H=y.trim()).length)&&(H="\0\0"),d=H.charCodeAt(0),p=H.charCodeAt(1),d){case 0:break;case 64:if(105===p||99===p){$+=H+l.charAt(L);break}default:58!==H.charCodeAt(B-1)&&(j+=a(H,d,p,H.charCodeAt(2)))}U=M=D=d=0,H="",p=l.charCodeAt(++L)}}switch(p){case 13:case 10:47===S?S=0:0===1+d&&107!==c&&0<H.length&&(M=1,H+="\0"),0<P*F&&o(0,H,n,e,A,C,j.length,c,h,c),C=1,A++;break;case 59:case 125:if(0===S+x+E+T){C++;break}default:switch(C++,g=l.charAt(L),p){case 9:case 32:if(0===x+T+S)switch(_){case 44:case 58:case 9:case 32:g="";break;default:32!==p&&(g=" ")}break;case 0:g="\\0";break;case 12:g="\\f";break;case 11:g="\\v";break;case 38:0===x+S+T&&(M=U=1,g="\f"+g);break;case 108:if(0===x+S+T+O&&0<D)switch(L-D){case 2:112===_&&58===l.charCodeAt(L-3)&&(O=_);case 8:111===I&&(O=I)}break;case 58:0===x+S+T&&(D=L);break;case 44:0===S+E+x+T&&(M=1,g+="\r");break;case 34:case 39:0===S&&(x=x===p?0:0===x?p:x);break;case 91:0===x+S+E&&T++;break;case 93:0===x+S+E&&T--;break;case 41:0===x+S+T&&E--;break;case 40:0===x+S+T&&(0===d&&(2*_+3*I==533||(d=1)),E++);break;case 64:0===S+E+x+T+D+m&&(m=1);break;case 42:case 47:if(!(0<x+T+E))switch(S){case 0:switch(2*p+3*l.charCodeAt(L+1)){case 235:S=47;break;case 220:B=L,S=42}break;case 42:47===p&&42===_&&B+2!==L&&(33===l.charCodeAt(B+2)&&(j+=l.substring(B,L+1)),g="",S=0)}}0===S&&(H+=g)}I=_,_=p,L++}if(0<(B=j.length)){if(M=n,0<P&&void 0!==(y=o(2,j,M,e,A,C,B,c,h,c))&&0===(j=y).length)return $+j+V;if(j=M.join(",")+"{"+j+"}",0!=R*O){switch(2!==R||s(j,2)||(O=0),O){case 111:j=j.replace(w,":-moz-$1")+j;break;case 112:j=j.replace(b,"::-webkit-input-$1")+j.replace(b,"::-moz-$1")+j.replace(b,":-ms-input-$1")+j}O=0}}return $+j+V}function r(e,t,r){var a=t.trim().split(m);t=a;var s=a.length,i=e.length;switch(i){case 0:case 1:var o=0;for(e=0===i?"":e[0]+" ";o<s;++o)t[o]=n(e,t[o],r).trim();break;default:var l=o=0;for(t=[];o<s;++o)for(var c=0;c<i;++c)t[l++]=n(e[c]+" ",a[o],r).trim()}return t}function n(e,t,r){var n=t.charCodeAt(0);switch(33>n&&(n=(t=t.trim()).charCodeAt(0)),n){case 38:return t.replace(g,"$1"+e.trim());case 58:return e.trim()+t.replace(g,"$1"+e.trim());default:if(0<1*r&&0<t.indexOf("\f"))return t.replace(g,(58===e.charCodeAt(0)?"":"$1")+e.trim())}return e+t}function a(e,t,r,n){var i=e+";",o=2*t+3*r+4*n;if(944===o){e=i.indexOf(":",9)+1;var l=i.substring(e,i.length-1).trim();return l=i.substring(0,e).trim()+l+";",1===R||2===R&&s(l,1)?"-webkit-"+l+l:l}if(0===R||2===R&&!s(i,1))return i;switch(o){case 1015:return 97===i.charCodeAt(10)?"-webkit-"+i+i:i;case 951:return 116===i.charCodeAt(3)?"-webkit-"+i+i:i;case 963:return 110===i.charCodeAt(5)?"-webkit-"+i+i:i;case 1009:if(100!==i.charCodeAt(4))break;case 969:case 942:return"-webkit-"+i+i;case 978:return"-webkit-"+i+"-moz-"+i+i;case 1019:case 983:return"-webkit-"+i+"-moz-"+i+"-ms-"+i+i;case 883:if(45===i.charCodeAt(8))return"-webkit-"+i+i;if(0<i.indexOf("image-set(",11))return i.replace(_,"$1-webkit-$2")+i;break;case 932:if(45===i.charCodeAt(4))switch(i.charCodeAt(5)){case 103:return"-webkit-box-"+i.replace("-grow","")+"-webkit-"+i+"-ms-"+i.replace("grow","positive")+i;case 115:return"-webkit-"+i+"-ms-"+i.replace("shrink","negative")+i;case 98:return"-webkit-"+i+"-ms-"+i.replace("basis","preferred-size")+i}return"-webkit-"+i+"-ms-"+i+i;case 964:return"-webkit-"+i+"-ms-flex-"+i+i;case 1023:if(99!==i.charCodeAt(8))break;return"-webkit-box-pack"+(l=i.substring(i.indexOf(":",15)).replace("flex-","").replace("space-between","justify"))+"-webkit-"+i+"-ms-flex-pack"+l+i;case 1005:return d.test(i)?i.replace(h,":-webkit-")+i.replace(h,":-moz-")+i:i;case 1e3:switch(t=(l=i.substring(13).trim()).indexOf("-")+1,l.charCodeAt(0)+l.charCodeAt(t)){case 226:l=i.replace(y,"tb");break;case 232:l=i.replace(y,"tb-rl");break;case 220:l=i.replace(y,"lr");break;default:return i}return"-webkit-"+i+"-ms-"+l+i;case 1017:if(-1===i.indexOf("sticky",9))break;case 975:switch(t=(i=e).length-10,o=(l=(33===i.charCodeAt(t)?i.substring(0,t):i).substring(e.indexOf(":",7)+1).trim()).charCodeAt(0)+(0|l.charCodeAt(7))){case 203:if(111>l.charCodeAt(8))break;case 115:i=i.replace(l,"-webkit-"+l)+";"+i;break;case 207:case 102:i=i.replace(l,"-webkit-"+(102<o?"inline-":"")+"box")+";"+i.replace(l,"-webkit-"+l)+";"+i.replace(l,"-ms-"+l+"box")+";"+i}return i+";";case 938:if(45===i.charCodeAt(5))switch(i.charCodeAt(6)){case 105:return l=i.replace("-items",""),"-webkit-"+i+"-webkit-box-"+l+"-ms-flex-"+l+i;case 115:return"-webkit-"+i+"-ms-flex-item-"+i.replace(S,"")+i;default:return"-webkit-"+i+"-ms-flex-line-pack"+i.replace("align-content","").replace(S,"")+i}break;case 973:case 989:if(45!==i.charCodeAt(3)||122===i.charCodeAt(4))break;case 931:case 953:if(!0===x.test(e))return 115===(l=e.substring(e.indexOf(":")+1)).charCodeAt(0)?a(e.replace("stretch","fill-available"),t,r,n).replace(":fill-available",":stretch"):i.replace(l,"-webkit-"+l)+i.replace(l,"-moz-"+l.replace("fill-",""))+i;break;case 962:if(i="-webkit-"+i+(102===i.charCodeAt(5)?"-ms-"+i:"")+i,211===r+n&&105===i.charCodeAt(13)&&0<i.indexOf("transform",10))return i.substring(0,i.indexOf(";",27)+1).replace(p,"$1-webkit-$2")+i}return i}function s(e,t){var r=e.indexOf(1===t?":":"{"),n=e.substring(0,3!==t?r:10);return r=e.substring(r+1,e.length-1),D(2!==t?n:n.replace(E,"$1"),r,t)}function i(e,t){var r=a(t,t.charCodeAt(0),t.charCodeAt(1),t.charCodeAt(2));return r!==t+";"?r.replace(T," or ($1)").substring(4):"("+t+")"}function o(e,t,r,n,a,s,i,o,l,f){for(var u,h=0,d=t;h<P;++h)switch(u=I[h].call(c,e,d,r,n,a,s,i,o,l,f)){case void 0:case!1:case!0:case null:break;default:d=u}if(d!==t)return d}function l(e){return void 0!==(e=e.prefix)&&(D=null,e?"function"!=typeof e?R=1:(R=2,D=e):R=0),l}function c(e,r){var n=e;if(33>n.charCodeAt(0)&&(n=n.trim()),n=[n],0<P){var a=o(-1,r,n,n,A,C,0,0,0,0);void 0!==a&&"string"==typeof a&&(r=a)}var s=t(N,n,r,0,0);return 0<P&&void 0!==(a=o(-2,s,n,n,A,C,s.length,0,0,0))&&(s=a),O=0,C=A=1,s}var f=/^\0+/g,u=/[\0\r\f]/g,h=/: */g,d=/zoo|gra/,p=/([,: ])(transform)/g,m=/,\r+?/g,g=/([\t\r\n ])*\f?&/g,v=/@(k\w+)\s*(\S*)\s*/,b=/::(place)/g,w=/:(read-only)/g,y=/[svh]\w+-[tblr]{2}/,k=/\(\s*(.*)\s*\)/g,T=/([\s\S]*?);/g,S=/-self|flex-/g,E=/[^]*?(:[rp][el]a[\w-]+)[^]*/,x=/stretch|:\s*\w+\-(?:conte|avail)/,_=/([^-])(image-set\()/,C=1,A=1,O=0,R=1,N=[],I=[],P=0,D=null,F=0;return c.use=function e(t){switch(t){case void 0:case null:P=I.length=0;break;default:if("function"==typeof t)I[P++]=t;else if("object"==typeof t)for(var r=0,n=t.length;r<n;++r)e(t[r]);else F=0|!!t}return e},c.set=l,void 0!==e&&l(e),c},l={animationIterationCount:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1};var c=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;const f=function(e){var t=Object.create(null);return function(e){return void 0===t[e]&&(t[e]=(r=e,c.test(r)||111===r.charCodeAt(0)&&110===r.charCodeAt(1)&&r.charCodeAt(2)<91)),t[e];var r}}();var u=r(679),h=r.n(u);function d(){return(d=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}var p=function(e,t){for(var r=[e[0]],n=0,a=t.length;n<a;n+=1)r.push(t[n],e[n+1]);return r},m=function(e){return null!==e&&"object"==typeof e&&"[object Object]"===(e.toString?e.toString():Object.prototype.toString.call(e))&&!(0,n.typeOf)(e)},g=Object.freeze([]),v=Object.freeze({});function b(e){return"function"==typeof e}function w(e){return e.displayName||e.name||"Component"}function y(e){return e&&"string"==typeof e.styledComponentId}var k="undefined"!=typeof process&&(process.env.REACT_APP_SC_ATTR||process.env.SC_ATTR)||"data-styled",T="5.3.6",S="undefined"!=typeof window&&"HTMLElement"in window,E=Boolean("boolean"==typeof SC_DISABLE_SPEEDY?SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!==process.env.REACT_APP_SC_DISABLE_SPEEDY&&""!==process.env.REACT_APP_SC_DISABLE_SPEEDY?"false"!==process.env.REACT_APP_SC_DISABLE_SPEEDY&&process.env.REACT_APP_SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!==process.env.SC_DISABLE_SPEEDY&&""!==process.env.SC_DISABLE_SPEEDY&&"false"!==process.env.SC_DISABLE_SPEEDY&&process.env.SC_DISABLE_SPEEDY),x={};function _(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];throw new Error("An error occurred. See https://git.io/JUIaE#"+e+" for more information."+(r.length>0?" Args: "+r.join(", "):""))}var C=function(){function e(e){this.groupSizes=new Uint32Array(512),this.length=512,this.tag=e}var t=e.prototype;return t.indexOfGroup=function(e){for(var t=0,r=0;r<e;r++)t+=this.groupSizes[r];return t},t.insertRules=function(e,t){if(e>=this.groupSizes.length){for(var r=this.groupSizes,n=r.length,a=n;e>=a;)(a<<=1)<0&&_(16,""+e);this.groupSizes=new Uint32Array(a),this.groupSizes.set(r),this.length=a;for(var s=n;s<a;s++)this.groupSizes[s]=0}for(var i=this.indexOfGroup(e+1),o=0,l=t.length;o<l;o++)this.tag.insertRule(i,t[o])&&(this.groupSizes[e]++,i++)},t.clearGroup=function(e){if(e<this.length){var t=this.groupSizes[e],r=this.indexOfGroup(e),n=r+t;this.groupSizes[e]=0;for(var a=r;a<n;a++)this.tag.deleteRule(r)}},t.getGroup=function(e){var t="";if(e>=this.length||0===this.groupSizes[e])return t;for(var r=this.groupSizes[e],n=this.indexOfGroup(e),a=n+r,s=n;s<a;s++)t+=this.tag.getRule(s)+"/*!sc*/\n";return t},e}(),A=new Map,O=new Map,R=1,N=function(e){if(A.has(e))return A.get(e);for(;O.has(R);)R++;var t=R++;return A.set(e,t),O.set(t,e),t},I=function(e){return O.get(e)},P=function(e,t){t>=R&&(R=t+1),A.set(e,t),O.set(t,e)},D="style["+k+'][data-styled-version="5.3.6"]',F=new RegExp("^"+k+'\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)'),L=function(e,t,r){for(var n,a=r.split(","),s=0,i=a.length;s<i;s++)(n=a[s])&&e.registerName(t,n)},M=function(e,t){for(var r=(t.textContent||"").split("/*!sc*/\n"),n=[],a=0,s=r.length;a<s;a++){var i=r[a].trim();if(i){var o=i.match(F);if(o){var l=0|parseInt(o[1],10),c=o[2];0!==l&&(P(c,l),L(e,c,o[3]),e.getTag().insertRules(l,n)),n.length=0}else n.push(i)}}},U=function(){return r.nc},B=function(e){var t=document.head,r=e||t,n=document.createElement("style"),a=function(e){for(var t=e.childNodes,r=t.length;r>=0;r--){var n=t[r];if(n&&1===n.nodeType&&n.hasAttribute(k))return n}}(r),s=void 0!==a?a.nextSibling:null;n.setAttribute(k,"active"),n.setAttribute("data-styled-version","5.3.6");var i=U();return i&&n.setAttribute("nonce",i),r.insertBefore(n,s),n},z=function(){function e(e){var t=this.element=B(e);t.appendChild(document.createTextNode("")),this.sheet=function(e){if(e.sheet)return e.sheet;for(var t=document.styleSheets,r=0,n=t.length;r<n;r++){var a=t[r];if(a.ownerNode===e)return a}_(17)}(t),this.length=0}var t=e.prototype;return t.insertRule=function(e,t){try{return this.sheet.insertRule(t,e),this.length++,!0}catch(e){return!1}},t.deleteRule=function(e){this.sheet.deleteRule(e),this.length--},t.getRule=function(e){var t=this.sheet.cssRules[e];return void 0!==t&&"string"==typeof t.cssText?t.cssText:""},e}(),W=function(){function e(e){var t=this.element=B(e);this.nodes=t.childNodes,this.length=0}var t=e.prototype;return t.insertRule=function(e,t){if(e<=this.length&&e>=0){var r=document.createTextNode(t),n=this.nodes[e];return this.element.insertBefore(r,n||null),this.length++,!0}return!1},t.deleteRule=function(e){this.element.removeChild(this.nodes[e]),this.length--},t.getRule=function(e){return e<this.length?this.nodes[e].textContent:""},e}(),H=function(){function e(e){this.rules=[],this.length=0}var t=e.prototype;return t.insertRule=function(e,t){return e<=this.length&&(this.rules.splice(e,0,t),this.length++,!0)},t.deleteRule=function(e){this.rules.splice(e,1),this.length--},t.getRule=function(e){return e<this.length?this.rules[e]:""},e}(),j=S,V={isServer:!S,useCSSOMInjection:!E},$=function(){function e(e,t,r){void 0===e&&(e=v),void 0===t&&(t={}),this.options=d({},V,{},e),this.gs=t,this.names=new Map(r),this.server=!!e.isServer,!this.server&&S&&j&&(j=!1,function(e){for(var t=document.querySelectorAll(D),r=0,n=t.length;r<n;r++){var a=t[r];a&&"active"!==a.getAttribute(k)&&(M(e,a),a.parentNode&&a.parentNode.removeChild(a))}}(this))}e.registerId=function(e){return N(e)};var t=e.prototype;return t.reconstructWithOptions=function(t,r){return void 0===r&&(r=!0),new e(d({},this.options,{},t),this.gs,r&&this.names||void 0)},t.allocateGSInstance=function(e){return this.gs[e]=(this.gs[e]||0)+1},t.getTag=function(){return this.tag||(this.tag=(r=(t=this.options).isServer,n=t.useCSSOMInjection,a=t.target,e=r?new H(a):n?new z(a):new W(a),new C(e)));var e,t,r,n,a},t.hasNameForId=function(e,t){return this.names.has(e)&&this.names.get(e).has(t)},t.registerName=function(e,t){if(N(e),this.names.has(e))this.names.get(e).add(t);else{var r=new Set;r.add(t),this.names.set(e,r)}},t.insertRules=function(e,t,r){this.registerName(e,t),this.getTag().insertRules(N(e),r)},t.clearNames=function(e){this.names.has(e)&&this.names.get(e).clear()},t.clearRules=function(e){this.getTag().clearGroup(N(e)),this.clearNames(e)},t.clearTag=function(){this.tag=void 0},t.toString=function(){return function(e){for(var t=e.getTag(),r=t.length,n="",a=0;a<r;a++){var s=I(a);if(void 0!==s){var i=e.names.get(s),o=t.getGroup(a);if(i&&o&&i.size){var l=k+".g"+a+'[id="'+s+'"]',c="";void 0!==i&&i.forEach((function(e){e.length>0&&(c+=e+",")})),n+=""+o+l+'{content:"'+c+'"}/*!sc*/\n'}}}return n}(this)},e}(),G=/(a)(d)/gi,X=function(e){return String.fromCharCode(e+(e>25?39:97))};function Y(e){var t,r="";for(t=Math.abs(e);t>52;t=t/52|0)r=X(t%52)+r;return(X(t%52)+r).replace(G,"$1-$2")}var K=function(e,t){for(var r=t.length;r;)e=33*e^t.charCodeAt(--r);return e},q=function(e){return K(5381,e)};function Q(e){for(var t=0;t<e.length;t+=1){var r=e[t];if(b(r)&&!y(r))return!1}return!0}var J=q("5.3.6"),Z=function(){function e(e,t,r){this.rules=e,this.staticRulesId="",this.isStatic=(void 0===r||r.isStatic)&&Q(e),this.componentId=t,this.baseHash=K(J,t),this.baseStyle=r,$.registerId(t)}return e.prototype.generateAndInjectStyles=function(e,t,r){var n=this.componentId,a=[];if(this.baseStyle&&a.push(this.baseStyle.generateAndInjectStyles(e,t,r)),this.isStatic&&!r.hash)if(this.staticRulesId&&t.hasNameForId(n,this.staticRulesId))a.push(this.staticRulesId);else{var s=be(this.rules,e,t,r).join(""),i=Y(K(this.baseHash,s)>>>0);if(!t.hasNameForId(n,i)){var o=r(s,"."+i,void 0,n);t.insertRules(n,i,o)}a.push(i),this.staticRulesId=i}else{for(var l=this.rules.length,c=K(this.baseHash,r.hash),f="",u=0;u<l;u++){var h=this.rules[u];if("string"==typeof h)f+=h;else if(h){var d=be(h,e,t,r),p=Array.isArray(d)?d.join(""):d;c=K(c,p+u),f+=p}}if(f){var m=Y(c>>>0);if(!t.hasNameForId(n,m)){var g=r(f,"."+m,void 0,n);t.insertRules(n,m,g)}a.push(m)}}return a.join(" ")},e}(),ee=/^\s*\/\/.*$/gm,te=[":","[",".","#"];function re(e){var t,r,n,a,s=void 0===e?v:e,i=s.options,l=void 0===i?v:i,c=s.plugins,f=void 0===c?g:c,u=new o(l),h=[],d=function(e){function t(t){if(t)try{e(t+"}")}catch(e){}}return function(r,n,a,s,i,o,l,c,f,u){switch(r){case 1:if(0===f&&64===n.charCodeAt(0))return e(n+";"),"";break;case 2:if(0===c)return n+"/*|*/";break;case 3:switch(c){case 102:case 112:return e(a[0]+n),"";default:return n+(0===u?"/*|*/":"")}case-2:n.split("/*|*/}").forEach(t)}}}((function(e){h.push(e)})),p=function(e,n,s){return 0===n&&-1!==te.indexOf(s[r.length])||s.match(a)?e:"."+t};function m(e,s,i,o){void 0===o&&(o="&");var l=e.replace(ee,""),c=s&&i?i+" "+s+" { "+l+" }":l;return t=o,r=s,n=new RegExp("\\"+r+"\\b","g"),a=new RegExp("(\\"+r+"\\b){2,}"),u(i||!s?"":s,c)}return u.use([].concat(f,[function(e,t,a){2===e&&a.length&&a[0].lastIndexOf(r)>0&&(a[0]=a[0].replace(n,p))},d,function(e){if(-2===e){var t=h;return h=[],t}}])),m.hash=f.length?f.reduce((function(e,t){return t.name||_(15),K(e,t.name)}),5381).toString():"",m}var ne=a.createContext(),ae=ne.Consumer,se=a.createContext(),ie=(se.Consumer,new $),oe=re();function le(){return(0,a.useContext)(ne)||ie}function ce(){return(0,a.useContext)(se)||oe}function fe(e){var t=(0,a.useState)(e.stylisPlugins),r=t[0],n=t[1],s=le(),o=(0,a.useMemo)((function(){var t=s;return e.sheet?t=e.sheet:e.target&&(t=t.reconstructWithOptions({target:e.target},!1)),e.disableCSSOMInjection&&(t=t.reconstructWithOptions({useCSSOMInjection:!1})),t}),[e.disableCSSOMInjection,e.sheet,e.target]),l=(0,a.useMemo)((function(){return re({options:{prefix:!e.disableVendorPrefixes},plugins:r})}),[e.disableVendorPrefixes,r]);return(0,a.useEffect)((function(){i()(r,e.stylisPlugins)||n(e.stylisPlugins)}),[e.stylisPlugins]),a.createElement(ne.Provider,{value:o},a.createElement(se.Provider,{value:l},e.children))}var ue=function(){function e(e,t){var r=this;this.inject=function(e,t){void 0===t&&(t=oe);var n=r.name+t.hash;e.hasNameForId(r.id,n)||e.insertRules(r.id,n,t(r.rules,n,"@keyframes"))},this.toString=function(){return _(12,String(r.name))},this.name=e,this.id="sc-keyframes-"+e,this.rules=t}return e.prototype.getName=function(e){return void 0===e&&(e=oe),this.name+e.hash},e}(),he=/([A-Z])/,de=/([A-Z])/g,pe=/^ms-/,me=function(e){return"-"+e.toLowerCase()};function ge(e){return he.test(e)?e.replace(de,me).replace(pe,"-ms-"):e}var ve=function(e){return null==e||!1===e||""===e};function be(e,t,r,n){if(Array.isArray(e)){for(var a,s=[],i=0,o=e.length;i<o;i+=1)""!==(a=be(e[i],t,r,n))&&(Array.isArray(a)?s.push.apply(s,a):s.push(a));return s}return ve(e)?"":y(e)?"."+e.styledComponentId:b(e)?"function"!=typeof(c=e)||c.prototype&&c.prototype.isReactComponent||!t?e:be(e(t),t,r,n):e instanceof ue?r?(e.inject(r,n),e.getName(n)):e:m(e)?function e(t,r){var n,a,s=[];for(var i in t)t.hasOwnProperty(i)&&!ve(t[i])&&(Array.isArray(t[i])&&t[i].isCss||b(t[i])?s.push(ge(i)+":",t[i],";"):m(t[i])?s.push.apply(s,e(t[i],i)):s.push(ge(i)+": "+(n=i,(null==(a=t[i])||"boolean"==typeof a||""===a?"":"number"!=typeof a||0===a||n in l?String(a).trim():a+"px")+";")));return r?[r+" {"].concat(s,["}"]):s}(e):e.toString();var c}var we=function(e){return Array.isArray(e)&&(e.isCss=!0),e};function ye(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];return b(e)||m(e)?we(be(p(g,[e].concat(r)))):0===r.length&&1===e.length&&"string"==typeof e[0]?e:we(be(p(e,r)))}new Set;var ke=function(e,t,r){return void 0===r&&(r=v),e.theme!==r.theme&&e.theme||t||r.theme},Te=/[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,Se=/(^-|-$)/g;function Ee(e){return e.replace(Te,"-").replace(Se,"")}var xe=function(e){return Y(q(e)>>>0)};function _e(e){return"string"==typeof e&&!0}var Ce=function(e){return"function"==typeof e||"object"==typeof e&&null!==e&&!Array.isArray(e)},Ae=function(e){return"__proto__"!==e&&"constructor"!==e&&"prototype"!==e};function Oe(e,t,r){var n=e[r];Ce(t)&&Ce(n)?Re(n,t):e[r]=t}function Re(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];for(var a=0,s=r;a<s.length;a++){var i=s[a];if(Ce(i))for(var o in i)Ae(o)&&Oe(e,i[o],o)}return e}var Ne=a.createContext(),Ie=Ne.Consumer;function Pe(e){var t=(0,a.useContext)(Ne),r=(0,a.useMemo)((function(){return function(e,t){return e?b(e)?e(t):Array.isArray(e)||"object"!=typeof e?_(8):t?d({},t,{},e):e:_(14)}(e.theme,t)}),[e.theme,t]);return e.children?a.createElement(Ne.Provider,{value:r},e.children):null}var De={};function Fe(e,t,r){var n=y(e),s=!_e(e),i=t.attrs,o=void 0===i?g:i,l=t.componentId,c=void 0===l?function(e,t){var r="string"!=typeof e?"sc":Ee(e);De[r]=(De[r]||0)+1;var n=r+"-"+xe("5.3.6"+r+De[r]);return t?t+"-"+n:n}(t.displayName,t.parentComponentId):l,u=t.displayName,p=void 0===u?function(e){return _e(e)?"styled."+e:"Styled("+w(e)+")"}(e):u,m=t.displayName&&t.componentId?Ee(t.displayName)+"-"+t.componentId:t.componentId||c,k=n&&e.attrs?Array.prototype.concat(e.attrs,o).filter(Boolean):o,T=t.shouldForwardProp;n&&e.shouldForwardProp&&(T=t.shouldForwardProp?function(r,n,a){return e.shouldForwardProp(r,n,a)&&t.shouldForwardProp(r,n,a)}:e.shouldForwardProp);var S,E=new Z(r,m,n?e.componentStyle:void 0),x=E.isStatic&&0===o.length,_=function(e,t){return function(e,t,r,n){var s=e.attrs,i=e.componentStyle,o=e.defaultProps,l=e.foldedComponentIds,c=e.shouldForwardProp,u=e.styledComponentId,h=e.target,p=function(e,t,r){void 0===e&&(e=v);var n=d({},t,{theme:e}),a={};return r.forEach((function(e){var t,r,s,i=e;for(t in b(i)&&(i=i(n)),i)n[t]=a[t]="className"===t?(r=a[t],s=i[t],r&&s?r+" "+s:r||s):i[t]})),[n,a]}(ke(t,(0,a.useContext)(Ne),o)||v,t,s),m=p[0],g=p[1],w=function(e,t,r,n){var a=le(),s=ce();return t?e.generateAndInjectStyles(v,a,s):e.generateAndInjectStyles(r,a,s)}(i,n,m),y=r,k=g.$as||t.$as||g.as||t.as||h,T=_e(k),S=g!==t?d({},t,{},g):t,E={};for(var x in S)"$"!==x[0]&&"as"!==x&&("forwardedAs"===x?E.as=S[x]:(c?c(x,f,k):!T||f(x))&&(E[x]=S[x]));return t.style&&g.style!==t.style&&(E.style=d({},t.style,{},g.style)),E.className=Array.prototype.concat(l,u,w!==u?w:null,t.className,g.className).filter(Boolean).join(" "),E.ref=y,(0,a.createElement)(k,E)}(S,e,t,x)};return _.displayName=p,(S=a.forwardRef(_)).attrs=k,S.componentStyle=E,S.displayName=p,S.shouldForwardProp=T,S.foldedComponentIds=n?Array.prototype.concat(e.foldedComponentIds,e.styledComponentId):g,S.styledComponentId=m,S.target=n?e.target:e,S.withComponent=function(e){var n=t.componentId,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(t,["componentId"]),s=n&&n+"-"+(_e(e)?e:Ee(w(e)));return Fe(e,d({},a,{attrs:k,componentId:s}),r)},Object.defineProperty(S,"defaultProps",{get:function(){return this._foldedDefaultProps},set:function(t){this._foldedDefaultProps=n?Re({},e.defaultProps,t):t}}),S.toString=function(){return"."+S.styledComponentId},s&&h()(S,e,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,shouldForwardProp:!0,styledComponentId:!0,target:!0,withComponent:!0}),S}var Le=function(e){return function e(t,r,a){if(void 0===a&&(a=v),!(0,n.isValidElementType)(r))return _(1,String(r));var s=function(){return t(r,a,ye.apply(void 0,arguments))};return s.withConfig=function(n){return e(t,r,d({},a,{},n))},s.attrs=function(n){return e(t,r,d({},a,{attrs:Array.prototype.concat(a.attrs,n).filter(Boolean)}))},s}(Fe,e)};["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","marker","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","textPath","tspan"].forEach((function(e){Le[e]=Le(e)}));var Me=function(){function e(e,t){this.rules=e,this.componentId=t,this.isStatic=Q(e),$.registerId(this.componentId+1)}var t=e.prototype;return t.createStyles=function(e,t,r,n){var a=n(be(this.rules,t,r,n).join(""),""),s=this.componentId+e;r.insertRules(s,s,a)},t.removeStyles=function(e,t){t.clearRules(this.componentId+e)},t.renderStyles=function(e,t,r,n){e>2&&$.registerId(this.componentId+e),this.removeStyles(e,r),this.createStyles(e,t,r,n)},e}();function Ue(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];var s=ye.apply(void 0,[e].concat(r)),i="sc-global-"+xe(JSON.stringify(s)),o=new Me(s,i);function l(e){var t=le(),r=ce(),n=(0,a.useContext)(Ne),s=(0,a.useRef)(t.allocateGSInstance(i)).current;return t.server&&c(s,e,t,n,r),(0,a.useLayoutEffect)((function(){if(!t.server)return c(s,e,t,n,r),function(){return o.removeStyles(s,t)}}),[s,e,t,n,r]),null}function c(e,t,r,n,a){if(o.isStatic)o.renderStyles(e,x,r,a);else{var s=d({},t,{theme:ke(t,n,l.defaultProps)});o.renderStyles(e,s,r,a)}}return a.memo(l)}function Be(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];var a=ye.apply(void 0,[e].concat(r)).join(""),s=xe(a);return new ue(s,a)}var ze=function(){function e(){var e=this;this._emitSheetCSS=function(){var t=e.instance.toString();if(!t)return"";var r=U();return"<style "+[r&&'nonce="'+r+'"',k+'="true"','data-styled-version="5.3.6"'].filter(Boolean).join(" ")+">"+t+"</style>"},this.getStyleTags=function(){return e.sealed?_(2):e._emitSheetCSS()},this.getStyleElement=function(){var t;if(e.sealed)return _(2);var r=((t={})[k]="",t["data-styled-version"]="5.3.6",t.dangerouslySetInnerHTML={__html:e.instance.toString()},t),n=U();return n&&(r.nonce=n),[a.createElement("style",d({},r,{key:"sc-0-0"}))]},this.seal=function(){e.sealed=!0},this.instance=new $({isServer:!0}),this.sealed=!1}var t=e.prototype;return t.collectStyles=function(e){return this.sealed?_(2):a.createElement(fe,{sheet:this.instance},e)},t.interleaveWithNodeStream=function(e){return _(3)},e}(),We=function(e){var t=a.forwardRef((function(t,r){var n=(0,a.useContext)(Ne),s=e.defaultProps,i=ke(t,n,s);return a.createElement(e,d({},t,{theme:i,ref:r}))}));return h()(t,e),t.displayName="WithTheme("+w(e)+")",t},He=function(){return(0,a.useContext)(Ne)},je={StyleSheet:$,masterSheet:ie};const Ve=Le},78:function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.App=void 0;const a=n(r(294)),s=n(r(414)),i=r(874),o=r(156);t.App=()=>a.default.createElement(a.default.Fragment,null,a.default.createElement(s.default,null,a.default.createElement(o.Upload,null),a.default.createElement(i.Report,null)))},874:function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Report=void 0;const a=n(r(294));t.Report=()=>a.default.createElement(a.default.Fragment,null,a.default.createElement("h1",null,"Hello from Report!"))},156:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r);var a=Object.getOwnPropertyDescriptor(t,r);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,a)}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&n(t,e,r);return a(t,e),t},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Upload=void 0;const o=s(r(294)),l=i(r(788)),c=r(980),f=r(593);var u=r(105);t.Upload=()=>{const[e,t]=(0,o.useState)(),[r,n]=(0,o.useState)({}),[a,s]=(0,o.useState)(),[i,l]=(0,o.useState)(!1),[m,g]=(0,o.useState)(""),[v,b]=(0,o.useState)(),[w,y]=(0,o.useState)(!1),[k,T]=(0,o.useState)(!1),[S,E]=(0,o.useState)([]);console.log(r,"split");const x=e=>{let t;return e.map(((e,r)=>{"Gastos"===e.Year&&(t=r)})),t};return o.default.createElement(o.default.Fragment,null,o.default.createElement(d,null,o.default.createElement(h,null,"Insert Title Here (main)"),Object.entries(r).length>0?o.default.createElement(o.default.Fragment,null,o.default.createElement("button",{onClick:e=>(e=>{const r=document.getElementById("uploads");r.files.length>0&&(r.value="",t(null),E([]),b(null),n({}),l(!1))})()},"clear files")):null,o.default.createElement("form",{onDragEnter:e=>{e.preventDefault(),e.stopPropagation(),"dragenter"===e.type||"dragover"===e.type?T(!0):"dragleave"===e.type&&T(!1)},onSubmit:e=>e.preventDefault()},o.default.createElement("input",{type:"file",multiple:!0,name:"uploads",id:"uploads",onChange:e=>{e.preventDefault();let t={};e.target.files&&Object.values(e.target.files).map(((e,a)=>{const s=e.name;t[s]={unitInfo:[],costs:[]},S.includes(s)||E((e=>[...e,s]));const i=new FileReader;i.onload=e=>{const a=e.target.result,i=u.read(a,{type:"array"}),o=i.SheetNames[0],l=i.Sheets[o];console.log(l,"this is worksheet");const c=u.utils.sheet_to_json(l);for(let e=0;e<2;e++)if(0===e){(h=u.utils.decode_range(l["!ref"])).s.r=0,h.e.r=x(c);var f=u.utils.encode_range(h);const e=u.utils.sheet_to_json(l,{defval:"",range:f,blankrows:!0});t[s].unitInfo.push(...e)}else if(1===e){var h;(h=u.utils.decode_range(l["!ref"])).s.r=x(c)+1,h.e.r=c.length+1,f=u.utils.encode_range(h);const e=u.utils.sheet_to_json(l,{defval:"",range:f,header:["Gastos","Cost","Banknotes","Count","Totals","Amount"]});let r=e.slice(1,e.length);t[s].costs.push(...r)}n(Object.assign(Object.assign({},r),t))},i.readAsArrayBuffer(e)}))}}),o.default.createElement("label",{id:"label-file-upload",htmlFor:"uploads",className:k?"drag-active":""}),o.default.createElement(p,{id:"drop_dom_element"},S.length>0?S.map((e=>o.default.createElement("ul",null,e))):"upload files")),w?null:S.length>0?o.default.createElement("select",{onChange:e=>g((t=>e.target.value))},"filter by",o.default.createElement("option",{value:""},""!==m?"show all files":"select a file"),S.length>0?S.map((e=>o.default.createElement("option",{value:e},e))):null):null,!w&&Object.values(r).length>0?v?o.default.createElement(f.UploadTable,{exceldata:v,testing:r,fileName:m,showCosts:i}):o.default.createElement(f.UploadTable,{exceldata:a,testing:r,fileName:m,showCosts:i}):null,o.default.createElement("button",{onClick:()=>l((()=>!i))},i?"show unit info":"show costs"),o.default.createElement(c.Filtered,{data:r})))};const h=l.default.h1`
  display: flex;
  text-align: center;
`,d=l.default.div`
  display: flex;
  flex-direction: column;
  align-items: center;
`,p=l.default.div`
  display: flex;
  margin: auto;
  border: 1px solid black;
  height: 100px;
  min-width: 300px;
  width: fit-content;
  justify-content: center;
  align-items: center;
  border-radius: 3px;
`;l.default.ul`
  margin: auto;
`},593:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r);var a=Object.getOwnPropertyDescriptor(t,r);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,a)}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&n(t,e,r);return a(t,e),t},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.UploadTable=void 0;const o=s(r(294)),l=i(r(788)),c=r(414);t.UploadTable=({exceldata:e,testing:t,fileName:r,showCosts:n})=>{const[a,s]=(0,o.useState)([""]),[i,l]=(0,o.useState)([]),{hello:p}=(0,o.useContext)(c.AggregateContext);console.log(p,'this should be "world"');const[m,g]=(0,o.useState)(),[v,b]=(0,o.useState)();return(0,o.useEffect)((()=>{if(""===r){const e=[];let r=0;Object.values(t).map((t=>t.unitInfo.map((t=>e.push(t))))),e.map(((t,r)=>"string"==typeof t.Depto?"subtotal"===t.Depto.toLowerCase()?e.splice(r,1):console.log(Number(t.Renta),typeof t.Renta,r):null)),b(r),l((([])=>[...e])),i[0]&&g(i[0].Month)}t&&""!==r&&(n?(l((([])=>[...t[r].costs])),console.log(i,"with costs"),console.log("after splice information: ",i)):l((([])=>[...t[r].unitInfo]))),i.length>0&&s(Object.keys(i[0])),console.log(i)}),[a.length,t,r,i.length,n,m]),o.default.createElement(o.default.Fragment,null,o.default.createElement(f,null,o.default.createElement(u,null,"'Upload data here: '"),o.default.createElement(h,null,o.default.createElement("tbody",null,o.default.createElement("tr",null,o.default.createElement("td",null,`Month: ${m||"loading..."}`)),o.default.createElement("tr",null,a?a.map(((e,t)=>o.default.createElement(d,{key:t},e))):null),i.length>0?i.map(((e,t)=>o.default.createElement("tr",null,a.map((t=>o.default.createElement("td",null,e[t])))))):null))))};const f=l.default.div`
  display: flex;
  border: 1px solid;
  flex-direction: column;
  margin-top: 10px;
  width: fit-content;
  border-radius: 5px;
`,u=l.default.h1`
  text-align: center;
`,h=l.default.table`
  display: flex;
  border: 1px solid;
  // flex-direction: column;
`,d=l.default.th`
  text-align: center;
  border: 1px solid black;
`},414:function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.AggregateContext=void 0;const a=n(r(294));t.AggregateContext=a.default.createContext(null),t.default=({children:e})=>a.default.createElement(t.AggregateContext.Provider,{value:{hello:"world!"}},e)},980:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r);var a=Object.getOwnPropertyDescriptor(t,r);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,a)}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&n(t,e,r);return a(t,e),t},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Filtered=void 0;const o=s(r(294)),l=i(r(788)),c=r(361);t.Filtered=({data:e})=>{const t=Object.keys(e)[0],[r,n]=(0,o.useState)([]),[a,s]=(0,o.useState)([]);(0,o.useEffect)((()=>{e[t]&&(l(),i())}),[r.length,e[t],a.length]);const i=()=>{let e=[];r.map((t=>{e.push(...Object.entries(t))})),s((t=>[...e]))},l=()=>{let r=[];e[t].unitInfo.map((e=>{""===e.Depto?r.push("*"):r.push(e)}));let a=[],s=0,i=r.indexOf("*",s+1);for(;s<r.length;){let e=r.slice(s,i),t={};0!==e.length&&(t[e[0].Depto]=[],e.map(((r,n)=>{0!==n&&t[e[0].Depto].push(r)})),a.push(t)),s=i+1,i=-1!==r.indexOf("*",s)?r.indexOf("*",s):r.length-1}n(a)};return o.default.createElement(o.default.Fragment,null,o.default.createElement(f,null,"Filtered data"),a.length>0?a.map((e=>o.default.createElement(c.FilteredTable,{info:e}))):null)};const f=l.default.h1`
  border: 1px dotted;
`},361:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r);var a=Object.getOwnPropertyDescriptor(t,r);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,a)}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&n(t,e,r);return a(t,e),t},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.FilteredTable=void 0;const o=s(r(294)),l=i(r(788));t.FilteredTable=({info:e})=>{const[t,r]=(0,o.useState)(e);(0,o.useEffect)((()=>{r(e)}),[e]);const[n,a]=(0,o.useState)(),s=t[1].map((e=>Object.keys(e))),i=t[1].map((e=>Object.values(e)));return o.default.createElement(o.default.Fragment,null,o.default.createElement(c,null,o.default.createElement("h2",null,`building: ${t[0]}`),o.default.createElement("h2",null),o.default.createElement("table",null,o.default.createElement("tr",null,s[0].map((e=>o.default.createElement("th",null,e)))),i.map((e=>o.default.createElement("tr",null,e.map((e=>o.default.createElement("td",null,e)))))))))},l.default.td`
  display: flex;
`;const c=l.default.div`
  border-bottom: 1px solid black;
  // border-radius: 3px;
`},629:function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=n(r(294)),s=n(r(745)),i=r(78);s.default.createRoot(document.getElementById("root")).render(a.default.createElement(a.default.StrictMode,null,a.default.createElement(i.App,null)))},105:(e,t,r)=>{"use strict";r.r(t),r.d(t,{CFB:()=>Ce,SSF:()=>Se,parse_xlscfb:()=>oc,parse_zip:()=>cf,read:()=>gf,readFile:()=>vf,readFileSync:()=>vf,set_cptable:()=>v,set_fs:()=>Oe,stream:()=>zf,utils:()=>Bf,version:()=>Wf,write:()=>Sf,writeFile:()=>xf,writeFileAsync:()=>Cf,writeFileSync:()=>xf,writeFileXLSX:()=>_f,writeXLSX:()=>Tf});var n="0.18.5",a=1200,s=1252,i=[874,932,936,949,950,1250,1251,1252,1253,1254,1255,1256,1257,1258,1e4],o={0:1252,1:65001,2:65001,77:1e4,128:932,129:949,130:1361,134:936,136:950,161:1253,162:1254,163:1258,177:1255,178:1256,186:1257,204:1251,222:874,238:1250,255:1252,69:6969},l=function(e){-1!=i.indexOf(e)&&(s=o[0]=e)},c=function(e){a=e,l(e)};function f(){c(1200),l(1252)}function u(e){for(var t=[],r=0,n=e.length;r<n;++r)t[r]=e.charCodeAt(r);return t}function h(e){for(var t=[],r=0;r<e.length>>1;++r)t[r]=String.fromCharCode(e.charCodeAt(2*r+1)+(e.charCodeAt(2*r)<<8));return t.join("")}var d,p=function(e){var t=e.charCodeAt(0),r=e.charCodeAt(1);return 255==t&&254==r?function(e){for(var t=[],r=0;r<e.length>>1;++r)t[r]=String.fromCharCode(e.charCodeAt(2*r)+(e.charCodeAt(2*r+1)<<8));return t.join("")}(e.slice(2)):254==t&&255==r?h(e.slice(2)):65279==t?e.slice(1):e},m=function(e){return String.fromCharCode(e)},g=function(e){return String.fromCharCode(e)};function v(e){d=e,c=function(e){a=e,l(e)},p=function(e){return 255===e.charCodeAt(0)&&254===e.charCodeAt(1)?d.utils.decode(1200,u(e.slice(2))):e},m=function(e){return 1200===a?String.fromCharCode(e):d.utils.decode(a,[255&e,e>>8])[0]},g=function(e){return d.utils.decode(s,[e])[0]},_r()}var b="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";function w(e){for(var t="",r=0,n=0,a=0,s=0,i=0,o=0,l=0,c=0;c<e.length;)s=(r=e.charCodeAt(c++))>>2,i=(3&r)<<4|(n=e.charCodeAt(c++))>>4,o=(15&n)<<2|(a=e.charCodeAt(c++))>>6,l=63&a,isNaN(n)?o=l=64:isNaN(a)&&(l=64),t+=b.charAt(s)+b.charAt(i)+b.charAt(o)+b.charAt(l);return t}function y(e){var t="",r=0,n=0,a=0,s=0,i=0,o=0;e=e.replace(/[^\w\+\/\=]/g,"");for(var l=0;l<e.length;)r=b.indexOf(e.charAt(l++))<<2|(s=b.indexOf(e.charAt(l++)))>>4,t+=String.fromCharCode(r),n=(15&s)<<4|(i=b.indexOf(e.charAt(l++)))>>2,64!==i&&(t+=String.fromCharCode(n)),a=(3&i)<<6|(o=b.indexOf(e.charAt(l++))),64!==o&&(t+=String.fromCharCode(a));return t}var k=function(){return"undefined"!=typeof Buffer&&"undefined"!=typeof process&&void 0!==process.versions&&!!process.versions.node}(),T=function(){if("undefined"!=typeof Buffer){var e=!Buffer.from;if(!e)try{Buffer.from("foo","utf8")}catch(t){e=!0}return e?function(e,t){return t?new Buffer(e,t):new Buffer(e)}:Buffer.from.bind(Buffer)}return function(){}}();function S(e){return k?Buffer.alloc?Buffer.alloc(e):new Buffer(e):"undefined"!=typeof Uint8Array?new Uint8Array(e):new Array(e)}function E(e){return k?Buffer.allocUnsafe?Buffer.allocUnsafe(e):new Buffer(e):"undefined"!=typeof Uint8Array?new Uint8Array(e):new Array(e)}var x=function(e){return k?T(e,"binary"):e.split("").map((function(e){return 255&e.charCodeAt(0)}))};function _(e){if("undefined"==typeof ArrayBuffer)return x(e);for(var t=new ArrayBuffer(e.length),r=new Uint8Array(t),n=0;n!=e.length;++n)r[n]=255&e.charCodeAt(n);return t}function C(e){if(Array.isArray(e))return e.map((function(e){return String.fromCharCode(e)})).join("");for(var t=[],r=0;r<e.length;++r)t[r]=String.fromCharCode(e[r]);return t.join("")}function A(e){if("undefined"==typeof ArrayBuffer)throw new Error("Unsupported");if(e instanceof ArrayBuffer)return A(new Uint8Array(e));for(var t=new Array(e.length),r=0;r<e.length;++r)t[r]=e[r];return t}var O=k?function(e){return Buffer.concat(e.map((function(e){return Buffer.isBuffer(e)?e:T(e)})))}:function(e){if("undefined"!=typeof Uint8Array){var t=0,r=0;for(t=0;t<e.length;++t)r+=e[t].length;var n=new Uint8Array(r),a=0;for(t=0,r=0;t<e.length;r+=a,++t)if(a=e[t].length,e[t]instanceof Uint8Array)n.set(e[t],r);else{if("string"==typeof e[t])throw"wtf";n.set(new Uint8Array(e[t]),r)}return n}return[].concat.apply([],e.map((function(e){return Array.isArray(e)?e:[].slice.call(e)})))},R=/\u0000/g,N=/[\u0001-\u0006]/g;function I(e){for(var t="",r=e.length-1;r>=0;)t+=e.charAt(r--);return t}function P(e,t){var r=""+e;return r.length>=t?r:Ke("0",t-r.length)+r}function D(e,t){var r=""+e;return r.length>=t?r:Ke(" ",t-r.length)+r}function F(e,t){var r=""+e;return r.length>=t?r:r+Ke(" ",t-r.length)}var L=Math.pow(2,32);function M(e,t){return e>L||e<-L?function(e,t){var r=""+Math.round(e);return r.length>=t?r:Ke("0",t-r.length)+r}(e,t):function(e,t){var r=""+e;return r.length>=t?r:Ke("0",t-r.length)+r}(Math.round(e),t)}function U(e,t){return t=t||0,e.length>=7+t&&103==(32|e.charCodeAt(t))&&101==(32|e.charCodeAt(t+1))&&110==(32|e.charCodeAt(t+2))&&101==(32|e.charCodeAt(t+3))&&114==(32|e.charCodeAt(t+4))&&97==(32|e.charCodeAt(t+5))&&108==(32|e.charCodeAt(t+6))}var B=[["Sun","Sunday"],["Mon","Monday"],["Tue","Tuesday"],["Wed","Wednesday"],["Thu","Thursday"],["Fri","Friday"],["Sat","Saturday"]],z=[["J","Jan","January"],["F","Feb","February"],["M","Mar","March"],["A","Apr","April"],["M","May","May"],["J","Jun","June"],["J","Jul","July"],["A","Aug","August"],["S","Sep","September"],["O","Oct","October"],["N","Nov","November"],["D","Dec","December"]],W={0:"General",1:"0",2:"0.00",3:"#,##0",4:"#,##0.00",9:"0%",10:"0.00%",11:"0.00E+00",12:"# ?/?",13:"# ??/??",14:"m/d/yy",15:"d-mmm-yy",16:"d-mmm",17:"mmm-yy",18:"h:mm AM/PM",19:"h:mm:ss AM/PM",20:"h:mm",21:"h:mm:ss",22:"m/d/yy h:mm",37:"#,##0 ;(#,##0)",38:"#,##0 ;[Red](#,##0)",39:"#,##0.00;(#,##0.00)",40:"#,##0.00;[Red](#,##0.00)",45:"mm:ss",46:"[h]:mm:ss",47:"mmss.0",48:"##0.0E+0",49:"@",56:'"上午/下午 "hh"時"mm"分"ss"秒 "'},H={5:37,6:38,7:39,8:40,23:0,24:0,25:0,26:0,27:14,28:14,29:14,30:14,31:14,50:14,51:14,52:14,53:14,54:14,55:14,56:14,57:14,58:14,59:1,60:2,61:3,62:4,67:9,68:10,69:12,70:13,71:14,72:14,73:15,74:16,75:17,76:20,77:21,78:22,79:45,80:46,81:47,82:0},j={5:'"$"#,##0_);\\("$"#,##0\\)',63:'"$"#,##0_);\\("$"#,##0\\)',6:'"$"#,##0_);[Red]\\("$"#,##0\\)',64:'"$"#,##0_);[Red]\\("$"#,##0\\)',7:'"$"#,##0.00_);\\("$"#,##0.00\\)',65:'"$"#,##0.00_);\\("$"#,##0.00\\)',8:'"$"#,##0.00_);[Red]\\("$"#,##0.00\\)',66:'"$"#,##0.00_);[Red]\\("$"#,##0.00\\)',41:'_(* #,##0_);_(* \\(#,##0\\);_(* "-"_);_(@_)',42:'_("$"* #,##0_);_("$"* \\(#,##0\\);_("$"* "-"_);_(@_)',43:'_(* #,##0.00_);_(* \\(#,##0.00\\);_(* "-"??_);_(@_)',44:'_("$"* #,##0.00_);_("$"* \\(#,##0.00\\);_("$"* "-"??_);_(@_)'};function V(e,t,r){for(var n=e<0?-1:1,a=e*n,s=0,i=1,o=0,l=1,c=0,f=0,u=Math.floor(a);c<t&&(o=(u=Math.floor(a))*i+s,f=u*c+l,!(a-u<5e-8));)a=1/(a-u),s=i,i=o,l=c,c=f;if(f>t&&(c>t?(f=l,o=s):(f=c,o=i)),!r)return[0,n*o,f];var h=Math.floor(n*o/f);return[h,n*o-h*f,f]}function G(e,t,r){if(e>2958465||e<0)return null;var n=0|e,a=Math.floor(86400*(e-n)),s=0,i=[],o={D:n,T:a,u:86400*(e-n)-a,y:0,m:0,d:0,H:0,M:0,S:0,q:0};if(Math.abs(o.u)<1e-6&&(o.u=0),t&&t.date1904&&(n+=1462),o.u>.9999&&(o.u=0,86400==++a&&(o.T=a=0,++n,++o.D)),60===n)i=r?[1317,10,29]:[1900,2,29],s=3;else if(0===n)i=r?[1317,8,29]:[1900,1,0],s=6;else{n>60&&--n;var l=new Date(1900,0,1);l.setDate(l.getDate()+n-1),i=[l.getFullYear(),l.getMonth()+1,l.getDate()],s=l.getDay(),n<60&&(s=(s+6)%7),r&&(s=function(e,t){t[0]-=581;var r=e.getDay();return e<60&&(r=(r+6)%7),r}(l,i))}return o.y=i[0],o.m=i[1],o.d=i[2],o.S=a%60,a=Math.floor(a/60),o.M=a%60,a=Math.floor(a/60),o.H=a,o.q=s,o}var X=new Date(1899,11,31,0,0,0),Y=X.getTime(),K=new Date(1900,2,1,0,0,0);function q(e,t){var r=e.getTime();return t?r-=1262304e5:e>=K&&(r+=864e5),(r-(Y+6e4*(e.getTimezoneOffset()-X.getTimezoneOffset())))/864e5}function Q(e){return-1==e.indexOf(".")?e:e.replace(/(?:\.0*|(\.\d*[1-9])0+)$/,"$1")}function J(e){var t,r=Math.floor(Math.log(Math.abs(e))*Math.LOG10E);return t=r>=-4&&r<=-1?e.toPrecision(10+r):Math.abs(r)<=9?function(e){var t=e<0?12:11,r=Q(e.toFixed(12));return r.length<=t||(r=e.toPrecision(10)).length<=t?r:e.toExponential(5)}(e):10===r?e.toFixed(10).substr(0,12):function(e){var t=Q(e.toFixed(11));return t.length>(e<0?12:11)||"0"===t||"-0"===t?e.toPrecision(6):t}(e),Q(function(e){return-1==e.indexOf("E")?e:e.replace(/(?:\.0*|(\.\d*[1-9])0+)[Ee]/,"$1E").replace(/(E[+-])(\d)$/,"$10$2")}(t.toUpperCase()))}function Z(e,t){switch(typeof e){case"string":return e;case"boolean":return e?"TRUE":"FALSE";case"number":return(0|e)===e?e.toString(10):J(e);case"undefined":return"";case"object":if(null==e)return"";if(e instanceof Date)return we(14,q(e,t&&t.date1904),t)}throw new Error("unsupported value in General format: "+e)}function ee(e,t,r,n){var a,s="",i=0,o=0,l=r.y,c=0;switch(e){case 98:l=r.y+543;case 121:switch(t.length){case 1:case 2:a=l%100,c=2;break;default:a=l%1e4,c=4}break;case 109:switch(t.length){case 1:case 2:a=r.m,c=t.length;break;case 3:return z[r.m-1][1];case 5:return z[r.m-1][0];default:return z[r.m-1][2]}break;case 100:switch(t.length){case 1:case 2:a=r.d,c=t.length;break;case 3:return B[r.q][0];default:return B[r.q][1]}break;case 104:switch(t.length){case 1:case 2:a=1+(r.H+11)%12,c=t.length;break;default:throw"bad hour format: "+t}break;case 72:switch(t.length){case 1:case 2:a=r.H,c=t.length;break;default:throw"bad hour format: "+t}break;case 77:switch(t.length){case 1:case 2:a=r.M,c=t.length;break;default:throw"bad minute format: "+t}break;case 115:if("s"!=t&&"ss"!=t&&".0"!=t&&".00"!=t&&".000"!=t)throw"bad second format: "+t;return 0!==r.u||"s"!=t&&"ss"!=t?(o=n>=2?3===n?1e3:100:1===n?10:1,(i=Math.round(o*(r.S+r.u)))>=60*o&&(i=0),"s"===t?0===i?"0":""+i/o:(s=P(i,2+n),"ss"===t?s.substr(0,2):"."+s.substr(2,t.length-1))):P(r.S,t.length);case 90:switch(t){case"[h]":case"[hh]":a=24*r.D+r.H;break;case"[m]":case"[mm]":a=60*(24*r.D+r.H)+r.M;break;case"[s]":case"[ss]":a=60*(60*(24*r.D+r.H)+r.M)+Math.round(r.S+r.u);break;default:throw"bad abstime format: "+t}c=3===t.length?1:2;break;case 101:a=l,c=1}return c>0?P(a,c):""}function te(e){if(e.length<=3)return e;for(var t=e.length%3,r=e.substr(0,t);t!=e.length;t+=3)r+=(r.length>0?",":"")+e.substr(t,3);return r}var re=/%/g;function ne(e,t){var r,n=e.indexOf("E")-e.indexOf(".")-1;if(e.match(/^#+0.0E\+0$/)){if(0==t)return"0.0E+0";if(t<0)return"-"+ne(e,-t);var a=e.indexOf(".");-1===a&&(a=e.indexOf("E"));var s=Math.floor(Math.log(t)*Math.LOG10E)%a;if(s<0&&(s+=a),-1===(r=(t/Math.pow(10,s)).toPrecision(n+1+(a+s)%a)).indexOf("e")){var i=Math.floor(Math.log(t)*Math.LOG10E);for(-1===r.indexOf(".")?r=r.charAt(0)+"."+r.substr(1)+"E+"+(i-r.length+s):r+="E+"+(i-s);"0."===r.substr(0,2);)r=(r=r.charAt(0)+r.substr(2,a)+"."+r.substr(2+a)).replace(/^0+([1-9])/,"$1").replace(/^0+\./,"0.");r=r.replace(/\+-/,"-")}r=r.replace(/^([+-]?)(\d*)\.(\d*)[Ee]/,(function(e,t,r,n){return t+r+n.substr(0,(a+s)%a)+"."+n.substr(s)+"E"}))}else r=t.toExponential(n);return e.match(/E\+00$/)&&r.match(/e[+-]\d$/)&&(r=r.substr(0,r.length-1)+"0"+r.charAt(r.length-1)),e.match(/E\-/)&&r.match(/e\+/)&&(r=r.replace(/e\+/,"e")),r.replace("e","E")}var ae=/# (\?+)( ?)\/( ?)(\d+)/,se=/^#*0*\.([0#]+)/,ie=/\).*[0#]/,oe=/\(###\) ###\\?-####/;function le(e){for(var t,r="",n=0;n!=e.length;++n)switch(t=e.charCodeAt(n)){case 35:break;case 63:r+=" ";break;case 48:r+="0";break;default:r+=String.fromCharCode(t)}return r}function ce(e,t){var r=Math.pow(10,t);return""+Math.round(e*r)/r}function fe(e,t){var r=e-Math.floor(e),n=Math.pow(10,t);return t<(""+Math.round(r*n)).length?0:Math.round(r*n)}function ue(e,t,r){if(40===e.charCodeAt(0)&&!t.match(ie)){var n=t.replace(/\( */,"").replace(/ \)/,"").replace(/\)/,"");return r>=0?ue("n",n,r):"("+ue("n",n,-r)+")"}if(44===t.charCodeAt(t.length-1))return function(e,t,r){for(var n=t.length-1;44===t.charCodeAt(n-1);)--n;return pe(e,t.substr(0,n),r/Math.pow(10,3*(t.length-n)))}(e,t,r);if(-1!==t.indexOf("%"))return function(e,t,r){var n=t.replace(re,""),a=t.length-n.length;return pe(e,n,r*Math.pow(10,2*a))+Ke("%",a)}(e,t,r);if(-1!==t.indexOf("E"))return ne(t,r);if(36===t.charCodeAt(0))return"$"+ue(e,t.substr(" "==t.charAt(1)?2:1),r);var a,s,i,o,l=Math.abs(r),c=r<0?"-":"";if(t.match(/^00+$/))return c+M(l,t.length);if(t.match(/^[#?]+$/))return"0"===(a=M(r,0))&&(a=""),a.length>t.length?a:le(t.substr(0,t.length-a.length))+a;if(s=t.match(ae))return function(e,t,r){var n=parseInt(e[4],10),a=Math.round(t*n),s=Math.floor(a/n),i=a-s*n,o=n;return r+(0===s?"":""+s)+" "+(0===i?Ke(" ",e[1].length+1+e[4].length):D(i,e[1].length)+e[2]+"/"+e[3]+P(o,e[4].length))}(s,l,c);if(t.match(/^#+0+$/))return c+M(l,t.length-t.indexOf("0"));if(s=t.match(se))return a=ce(r,s[1].length).replace(/^([^\.]+)$/,"$1."+le(s[1])).replace(/\.$/,"."+le(s[1])).replace(/\.(\d*)$/,(function(e,t){return"."+t+Ke("0",le(s[1]).length-t.length)})),-1!==t.indexOf("0.")?a:a.replace(/^0\./,".");if(t=t.replace(/^#+([0.])/,"$1"),s=t.match(/^(0*)\.(#*)$/))return c+ce(l,s[2].length).replace(/\.(\d*[1-9])0*$/,".$1").replace(/^(-?\d*)$/,"$1.").replace(/^0\./,s[1].length?"0.":".");if(s=t.match(/^#{1,3},##0(\.?)$/))return c+te(M(l,0));if(s=t.match(/^#,##0\.([#0]*0)$/))return r<0?"-"+ue(e,t,-r):te(""+(Math.floor(r)+function(e,t){return t<(""+Math.round((e-Math.floor(e))*Math.pow(10,t))).length?1:0}(r,s[1].length)))+"."+P(fe(r,s[1].length),s[1].length);if(s=t.match(/^#,#*,#0/))return ue(e,t.replace(/^#,#*,/,""),r);if(s=t.match(/^([0#]+)(\\?-([0#]+))+$/))return a=I(ue(e,t.replace(/[\\-]/g,""),r)),i=0,I(I(t.replace(/\\/g,"")).replace(/[0#]/g,(function(e){return i<a.length?a.charAt(i++):"0"===e?"0":""})));if(t.match(oe))return"("+(a=ue(e,"##########",r)).substr(0,3)+") "+a.substr(3,3)+"-"+a.substr(6);var f="";if(s=t.match(/^([#0?]+)( ?)\/( ?)([#0?]+)/))return i=Math.min(s[4].length,7),o=V(l,Math.pow(10,i)-1,!1),a=""+c," "==(f=pe("n",s[1],o[1])).charAt(f.length-1)&&(f=f.substr(0,f.length-1)+"0"),a+=f+s[2]+"/"+s[3],(f=F(o[2],i)).length<s[4].length&&(f=le(s[4].substr(s[4].length-f.length))+f),a+=f;if(s=t.match(/^# ([#0?]+)( ?)\/( ?)([#0?]+)/))return i=Math.min(Math.max(s[1].length,s[4].length),7),c+((o=V(l,Math.pow(10,i)-1,!0))[0]||(o[1]?"":"0"))+" "+(o[1]?D(o[1],i)+s[2]+"/"+s[3]+F(o[2],i):Ke(" ",2*i+1+s[2].length+s[3].length));if(s=t.match(/^[#0?]+$/))return a=M(r,0),t.length<=a.length?a:le(t.substr(0,t.length-a.length))+a;if(s=t.match(/^([#0?]+)\.([#0]+)$/)){a=""+r.toFixed(Math.min(s[2].length,10)).replace(/([^0])0+$/,"$1"),i=a.indexOf(".");var u=t.indexOf(".")-i,h=t.length-a.length-u;return le(t.substr(0,u)+a+t.substr(t.length-h))}if(s=t.match(/^00,000\.([#0]*0)$/))return i=fe(r,s[1].length),r<0?"-"+ue(e,t,-r):te(function(e){return e<2147483647&&e>-2147483648?""+(e>=0?0|e:e-1|0):""+Math.floor(e)}(r)).replace(/^\d,\d{3}$/,"0$&").replace(/^\d*$/,(function(e){return"00,"+(e.length<3?P(0,3-e.length):"")+e}))+"."+P(i,s[1].length);switch(t){case"###,##0.00":return ue(e,"#,##0.00",r);case"###,###":case"##,###":case"#,###":var d=te(M(l,0));return"0"!==d?c+d:"";case"###,###.00":return ue(e,"###,##0.00",r).replace(/^0\./,".");case"#,###.00":return ue(e,"#,##0.00",r).replace(/^0\./,".")}throw new Error("unsupported format |"+t+"|")}function he(e,t){var r,n=e.indexOf("E")-e.indexOf(".")-1;if(e.match(/^#+0.0E\+0$/)){if(0==t)return"0.0E+0";if(t<0)return"-"+he(e,-t);var a=e.indexOf(".");-1===a&&(a=e.indexOf("E"));var s=Math.floor(Math.log(t)*Math.LOG10E)%a;if(s<0&&(s+=a),!(r=(t/Math.pow(10,s)).toPrecision(n+1+(a+s)%a)).match(/[Ee]/)){var i=Math.floor(Math.log(t)*Math.LOG10E);-1===r.indexOf(".")?r=r.charAt(0)+"."+r.substr(1)+"E+"+(i-r.length+s):r+="E+"+(i-s),r=r.replace(/\+-/,"-")}r=r.replace(/^([+-]?)(\d*)\.(\d*)[Ee]/,(function(e,t,r,n){return t+r+n.substr(0,(a+s)%a)+"."+n.substr(s)+"E"}))}else r=t.toExponential(n);return e.match(/E\+00$/)&&r.match(/e[+-]\d$/)&&(r=r.substr(0,r.length-1)+"0"+r.charAt(r.length-1)),e.match(/E\-/)&&r.match(/e\+/)&&(r=r.replace(/e\+/,"e")),r.replace("e","E")}function de(e,t,r){if(40===e.charCodeAt(0)&&!t.match(ie)){var n=t.replace(/\( */,"").replace(/ \)/,"").replace(/\)/,"");return r>=0?de("n",n,r):"("+de("n",n,-r)+")"}if(44===t.charCodeAt(t.length-1))return function(e,t,r){for(var n=t.length-1;44===t.charCodeAt(n-1);)--n;return pe(e,t.substr(0,n),r/Math.pow(10,3*(t.length-n)))}(e,t,r);if(-1!==t.indexOf("%"))return function(e,t,r){var n=t.replace(re,""),a=t.length-n.length;return pe(e,n,r*Math.pow(10,2*a))+Ke("%",a)}(e,t,r);if(-1!==t.indexOf("E"))return he(t,r);if(36===t.charCodeAt(0))return"$"+de(e,t.substr(" "==t.charAt(1)?2:1),r);var a,s,i,o,l=Math.abs(r),c=r<0?"-":"";if(t.match(/^00+$/))return c+P(l,t.length);if(t.match(/^[#?]+$/))return a=""+r,0===r&&(a=""),a.length>t.length?a:le(t.substr(0,t.length-a.length))+a;if(s=t.match(ae))return function(e,t,r){return r+(0===t?"":""+t)+Ke(" ",e[1].length+2+e[4].length)}(s,l,c);if(t.match(/^#+0+$/))return c+P(l,t.length-t.indexOf("0"));if(s=t.match(se))return a=(a=(""+r).replace(/^([^\.]+)$/,"$1."+le(s[1])).replace(/\.$/,"."+le(s[1]))).replace(/\.(\d*)$/,(function(e,t){return"."+t+Ke("0",le(s[1]).length-t.length)})),-1!==t.indexOf("0.")?a:a.replace(/^0\./,".");if(t=t.replace(/^#+([0.])/,"$1"),s=t.match(/^(0*)\.(#*)$/))return c+(""+l).replace(/\.(\d*[1-9])0*$/,".$1").replace(/^(-?\d*)$/,"$1.").replace(/^0\./,s[1].length?"0.":".");if(s=t.match(/^#{1,3},##0(\.?)$/))return c+te(""+l);if(s=t.match(/^#,##0\.([#0]*0)$/))return r<0?"-"+de(e,t,-r):te(""+r)+"."+Ke("0",s[1].length);if(s=t.match(/^#,#*,#0/))return de(e,t.replace(/^#,#*,/,""),r);if(s=t.match(/^([0#]+)(\\?-([0#]+))+$/))return a=I(de(e,t.replace(/[\\-]/g,""),r)),i=0,I(I(t.replace(/\\/g,"")).replace(/[0#]/g,(function(e){return i<a.length?a.charAt(i++):"0"===e?"0":""})));if(t.match(oe))return"("+(a=de(e,"##########",r)).substr(0,3)+") "+a.substr(3,3)+"-"+a.substr(6);var f="";if(s=t.match(/^([#0?]+)( ?)\/( ?)([#0?]+)/))return i=Math.min(s[4].length,7),o=V(l,Math.pow(10,i)-1,!1),a=""+c," "==(f=pe("n",s[1],o[1])).charAt(f.length-1)&&(f=f.substr(0,f.length-1)+"0"),a+=f+s[2]+"/"+s[3],(f=F(o[2],i)).length<s[4].length&&(f=le(s[4].substr(s[4].length-f.length))+f),a+=f;if(s=t.match(/^# ([#0?]+)( ?)\/( ?)([#0?]+)/))return i=Math.min(Math.max(s[1].length,s[4].length),7),c+((o=V(l,Math.pow(10,i)-1,!0))[0]||(o[1]?"":"0"))+" "+(o[1]?D(o[1],i)+s[2]+"/"+s[3]+F(o[2],i):Ke(" ",2*i+1+s[2].length+s[3].length));if(s=t.match(/^[#0?]+$/))return a=""+r,t.length<=a.length?a:le(t.substr(0,t.length-a.length))+a;if(s=t.match(/^([#0]+)\.([#0]+)$/)){a=""+r.toFixed(Math.min(s[2].length,10)).replace(/([^0])0+$/,"$1"),i=a.indexOf(".");var u=t.indexOf(".")-i,h=t.length-a.length-u;return le(t.substr(0,u)+a+t.substr(t.length-h))}if(s=t.match(/^00,000\.([#0]*0)$/))return r<0?"-"+de(e,t,-r):te(""+r).replace(/^\d,\d{3}$/,"0$&").replace(/^\d*$/,(function(e){return"00,"+(e.length<3?P(0,3-e.length):"")+e}))+"."+P(0,s[1].length);switch(t){case"###,###":case"##,###":case"#,###":var d=te(""+l);return"0"!==d?c+d:"";default:if(t.match(/\.[0#?]*$/))return de(e,t.slice(0,t.lastIndexOf(".")),r)+le(t.slice(t.lastIndexOf(".")))}throw new Error("unsupported format |"+t+"|")}function pe(e,t,r){return(0|r)===r?de(e,t,r):ue(e,t,r)}var me=/\[[HhMmSs\u0E0A\u0E19\u0E17]*\]/;function ge(e){for(var t=0,r="",n="";t<e.length;)switch(r=e.charAt(t)){case"G":U(e,t)&&(t+=6),t++;break;case'"':for(;34!==e.charCodeAt(++t)&&t<e.length;);++t;break;case"\\":case"_":t+=2;break;case"@":++t;break;case"B":case"b":if("1"===e.charAt(t+1)||"2"===e.charAt(t+1))return!0;case"M":case"D":case"Y":case"H":case"S":case"E":case"m":case"d":case"y":case"h":case"s":case"e":case"g":return!0;case"A":case"a":case"上":if("A/P"===e.substr(t,3).toUpperCase())return!0;if("AM/PM"===e.substr(t,5).toUpperCase())return!0;if("上午/下午"===e.substr(t,5).toUpperCase())return!0;++t;break;case"[":for(n=r;"]"!==e.charAt(t++)&&t<e.length;)n+=e.charAt(t);if(n.match(me))return!0;break;case".":case"0":case"#":for(;t<e.length&&("0#?.,E+-%".indexOf(r=e.charAt(++t))>-1||"\\"==r&&"-"==e.charAt(t+1)&&"0#".indexOf(e.charAt(t+2))>-1););break;case"?":for(;e.charAt(++t)===r;);break;case"*":++t," "!=e.charAt(t)&&"*"!=e.charAt(t)||++t;break;case"(":case")":++t;break;case"1":case"2":case"3":case"4":case"5":case"6":case"7":case"8":case"9":for(;t<e.length&&"0123456789".indexOf(e.charAt(++t))>-1;);break;default:++t}return!1}var ve=/\[(=|>[=]?|<[>=]?)(-?\d+(?:\.\d*)?)\]/;function be(e,t){if(null==t)return!1;var r=parseFloat(t[2]);switch(t[1]){case"=":if(e==r)return!0;break;case">":if(e>r)return!0;break;case"<":if(e<r)return!0;break;case"<>":if(e!=r)return!0;break;case">=":if(e>=r)return!0;break;case"<=":if(e<=r)return!0}return!1}function we(e,t,r){null==r&&(r={});var n="";switch(typeof e){case"string":n="m/d/yy"==e&&r.dateNF?r.dateNF:e;break;case"number":null==(n=14==e&&r.dateNF?r.dateNF:(null!=r.table?r.table:W)[e])&&(n=r.table&&r.table[H[e]]||W[H[e]]),null==n&&(n=j[e]||"General")}if(U(n,0))return Z(t,r);t instanceof Date&&(t=q(t,r.date1904));var a=function(e,t){var r=function(e){for(var t=[],r=!1,n=0,a=0;n<e.length;++n)switch(e.charCodeAt(n)){case 34:r=!r;break;case 95:case 42:case 92:++n;break;case 59:t[t.length]=e.substr(a,n-a),a=n+1}if(t[t.length]=e.substr(a),!0===r)throw new Error("Format |"+e+"| unterminated string ");return t}(e),n=r.length,a=r[n-1].indexOf("@");if(n<4&&a>-1&&--n,r.length>4)throw new Error("cannot find right format for |"+r.join("|")+"|");if("number"!=typeof t)return[4,4===r.length||a>-1?r[r.length-1]:"@"];switch(r.length){case 1:r=a>-1?["General","General","General",r[0]]:[r[0],r[0],r[0],"@"];break;case 2:r=a>-1?[r[0],r[0],r[0],r[1]]:[r[0],r[1],r[0],"@"];break;case 3:r=a>-1?[r[0],r[1],r[0],r[2]]:[r[0],r[1],r[2],"@"]}var s=t>0?r[0]:t<0?r[1]:r[2];if(-1===r[0].indexOf("[")&&-1===r[1].indexOf("["))return[n,s];if(null!=r[0].match(/\[[=<>]/)||null!=r[1].match(/\[[=<>]/)){var i=r[0].match(ve),o=r[1].match(ve);return be(t,i)?[n,r[0]]:be(t,o)?[n,r[1]]:[n,r[null!=i&&null!=o?2:1]]}return[n,s]}(n,t);if(U(a[1]))return Z(t,r);if(!0===t)t="TRUE";else if(!1===t)t="FALSE";else if(""===t||null==t)return"";return function(e,t,r,n){for(var a,s,i,o=[],l="",c=0,f="",u="t",h="H";c<e.length;)switch(f=e.charAt(c)){case"G":if(!U(e,c))throw new Error("unrecognized character "+f+" in "+e);o[o.length]={t:"G",v:"General"},c+=7;break;case'"':for(l="";34!==(i=e.charCodeAt(++c))&&c<e.length;)l+=String.fromCharCode(i);o[o.length]={t:"t",v:l},++c;break;case"\\":var d=e.charAt(++c),p="("===d||")"===d?d:"t";o[o.length]={t:p,v:d},++c;break;case"_":o[o.length]={t:"t",v:" "},c+=2;break;case"@":o[o.length]={t:"T",v:t},++c;break;case"B":case"b":if("1"===e.charAt(c+1)||"2"===e.charAt(c+1)){if(null==a&&null==(a=G(t,r,"2"===e.charAt(c+1))))return"";o[o.length]={t:"X",v:e.substr(c,2)},u=f,c+=2;break}case"M":case"D":case"Y":case"H":case"S":case"E":f=f.toLowerCase();case"m":case"d":case"y":case"h":case"s":case"e":case"g":if(t<0)return"";if(null==a&&null==(a=G(t,r)))return"";for(l=f;++c<e.length&&e.charAt(c).toLowerCase()===f;)l+=f;"m"===f&&"h"===u.toLowerCase()&&(f="M"),"h"===f&&(f=h),o[o.length]={t:f,v:l},u=f;break;case"A":case"a":case"上":var m={t:f,v:f};if(null==a&&(a=G(t,r)),"A/P"===e.substr(c,3).toUpperCase()?(null!=a&&(m.v=a.H>=12?"P":"A"),m.t="T",h="h",c+=3):"AM/PM"===e.substr(c,5).toUpperCase()?(null!=a&&(m.v=a.H>=12?"PM":"AM"),m.t="T",c+=5,h="h"):"上午/下午"===e.substr(c,5).toUpperCase()?(null!=a&&(m.v=a.H>=12?"下午":"上午"),m.t="T",c+=5,h="h"):(m.t="t",++c),null==a&&"T"===m.t)return"";o[o.length]=m,u=f;break;case"[":for(l=f;"]"!==e.charAt(c++)&&c<e.length;)l+=e.charAt(c);if("]"!==l.slice(-1))throw'unterminated "[" block: |'+l+"|";if(l.match(me)){if(null==a&&null==(a=G(t,r)))return"";o[o.length]={t:"Z",v:l.toLowerCase()},u=l.charAt(1)}else l.indexOf("$")>-1&&(l=(l.match(/\$([^-\[\]]*)/)||[])[1]||"$",ge(e)||(o[o.length]={t:"t",v:l}));break;case".":if(null!=a){for(l=f;++c<e.length&&"0"===(f=e.charAt(c));)l+=f;o[o.length]={t:"s",v:l};break}case"0":case"#":for(l=f;++c<e.length&&"0#?.,E+-%".indexOf(f=e.charAt(c))>-1;)l+=f;o[o.length]={t:"n",v:l};break;case"?":for(l=f;e.charAt(++c)===f;)l+=f;o[o.length]={t:f,v:l},u=f;break;case"*":++c," "!=e.charAt(c)&&"*"!=e.charAt(c)||++c;break;case"(":case")":o[o.length]={t:1===n?"t":f,v:f},++c;break;case"1":case"2":case"3":case"4":case"5":case"6":case"7":case"8":case"9":for(l=f;c<e.length&&"0123456789".indexOf(e.charAt(++c))>-1;)l+=e.charAt(c);o[o.length]={t:"D",v:l};break;case" ":o[o.length]={t:f,v:f},++c;break;case"$":o[o.length]={t:"t",v:"$"},++c;break;default:if(-1===",$-+/():!^&'~{}<>=€acfijklopqrtuvwxzP".indexOf(f))throw new Error("unrecognized character "+f+" in "+e);o[o.length]={t:"t",v:f},++c}var g,v=0,b=0;for(c=o.length-1,u="t";c>=0;--c)switch(o[c].t){case"h":case"H":o[c].t=h,u="h",v<1&&(v=1);break;case"s":(g=o[c].v.match(/\.0+$/))&&(b=Math.max(b,g[0].length-1)),v<3&&(v=3);case"d":case"y":case"M":case"e":u=o[c].t;break;case"m":"s"===u&&(o[c].t="M",v<2&&(v=2));break;case"X":break;case"Z":v<1&&o[c].v.match(/[Hh]/)&&(v=1),v<2&&o[c].v.match(/[Mm]/)&&(v=2),v<3&&o[c].v.match(/[Ss]/)&&(v=3)}switch(v){case 0:break;case 1:a.u>=.5&&(a.u=0,++a.S),a.S>=60&&(a.S=0,++a.M),a.M>=60&&(a.M=0,++a.H);break;case 2:a.u>=.5&&(a.u=0,++a.S),a.S>=60&&(a.S=0,++a.M)}var w,y="";for(c=0;c<o.length;++c)switch(o[c].t){case"t":case"T":case" ":case"D":break;case"X":o[c].v="",o[c].t=";";break;case"d":case"m":case"y":case"h":case"H":case"M":case"s":case"e":case"b":case"Z":o[c].v=ee(o[c].t.charCodeAt(0),o[c].v,a,b),o[c].t="t";break;case"n":case"?":for(w=c+1;null!=o[w]&&("?"===(f=o[w].t)||"D"===f||(" "===f||"t"===f)&&null!=o[w+1]&&("?"===o[w+1].t||"t"===o[w+1].t&&"/"===o[w+1].v)||"("===o[c].t&&(" "===f||"n"===f||")"===f)||"t"===f&&("/"===o[w].v||" "===o[w].v&&null!=o[w+1]&&"?"==o[w+1].t));)o[c].v+=o[w].v,o[w]={v:"",t:";"},++w;y+=o[c].v,c=w-1;break;case"G":o[c].t="t",o[c].v=Z(t,r)}var k,T,S="";if(y.length>0){40==y.charCodeAt(0)?(k=t<0&&45===y.charCodeAt(0)?-t:t,T=pe("n",y,k)):(T=pe("n",y,k=t<0&&n>1?-t:t),k<0&&o[0]&&"t"==o[0].t&&(T=T.substr(1),o[0].v="-"+o[0].v)),w=T.length-1;var E=o.length;for(c=0;c<o.length;++c)if(null!=o[c]&&"t"!=o[c].t&&o[c].v.indexOf(".")>-1){E=c;break}var x=o.length;if(E===o.length&&-1===T.indexOf("E")){for(c=o.length-1;c>=0;--c)null!=o[c]&&-1!=="n?".indexOf(o[c].t)&&(w>=o[c].v.length-1?(w-=o[c].v.length,o[c].v=T.substr(w+1,o[c].v.length)):w<0?o[c].v="":(o[c].v=T.substr(0,w+1),w=-1),o[c].t="t",x=c);w>=0&&x<o.length&&(o[x].v=T.substr(0,w+1)+o[x].v)}else if(E!==o.length&&-1===T.indexOf("E")){for(w=T.indexOf(".")-1,c=E;c>=0;--c)if(null!=o[c]&&-1!=="n?".indexOf(o[c].t)){for(s=o[c].v.indexOf(".")>-1&&c===E?o[c].v.indexOf(".")-1:o[c].v.length-1,S=o[c].v.substr(s+1);s>=0;--s)w>=0&&("0"===o[c].v.charAt(s)||"#"===o[c].v.charAt(s))&&(S=T.charAt(w--)+S);o[c].v=S,o[c].t="t",x=c}for(w>=0&&x<o.length&&(o[x].v=T.substr(0,w+1)+o[x].v),w=T.indexOf(".")+1,c=E;c<o.length;++c)if(null!=o[c]&&(-1!=="n?(".indexOf(o[c].t)||c===E)){for(s=o[c].v.indexOf(".")>-1&&c===E?o[c].v.indexOf(".")+1:0,S=o[c].v.substr(0,s);s<o[c].v.length;++s)w<T.length&&(S+=T.charAt(w++));o[c].v=S,o[c].t="t",x=c}}}for(c=0;c<o.length;++c)null!=o[c]&&"n?".indexOf(o[c].t)>-1&&(k=n>1&&t<0&&c>0&&"-"===o[c-1].v?-t:t,o[c].v=pe(o[c].t,o[c].v,k),o[c].t="t");var _="";for(c=0;c!==o.length;++c)null!=o[c]&&(_+=o[c].v);return _}(a[1],t,r,a[0])}function ye(e,t){if("number"!=typeof t){t=+t||-1;for(var r=0;r<392;++r)if(null!=W[r]){if(W[r]==e){t=r;break}}else t<0&&(t=r);t<0&&(t=391)}return W[t]=e,t}function ke(e){for(var t=0;392!=t;++t)void 0!==e[t]&&ye(e[t],t)}function Te(){var e;e||(e={}),e[0]="General",e[1]="0",e[2]="0.00",e[3]="#,##0",e[4]="#,##0.00",e[9]="0%",e[10]="0.00%",e[11]="0.00E+00",e[12]="# ?/?",e[13]="# ??/??",e[14]="m/d/yy",e[15]="d-mmm-yy",e[16]="d-mmm",e[17]="mmm-yy",e[18]="h:mm AM/PM",e[19]="h:mm:ss AM/PM",e[20]="h:mm",e[21]="h:mm:ss",e[22]="m/d/yy h:mm",e[37]="#,##0 ;(#,##0)",e[38]="#,##0 ;[Red](#,##0)",e[39]="#,##0.00;(#,##0.00)",e[40]="#,##0.00;[Red](#,##0.00)",e[45]="mm:ss",e[46]="[h]:mm:ss",e[47]="mmss.0",e[48]="##0.0E+0",e[49]="@",e[56]='"上午/下午 "hh"時"mm"分"ss"秒 "',W=e}var Se={format:we,load:ye,_table:W,load_table:ke,parse_date_code:G,is_date:ge,get_table:function(){return Se._table=W}},Ee={5:'"$"#,##0_);\\("$"#,##0\\)',6:'"$"#,##0_);[Red]\\("$"#,##0\\)',7:'"$"#,##0.00_);\\("$"#,##0.00\\)',8:'"$"#,##0.00_);[Red]\\("$"#,##0.00\\)',23:"General",24:"General",25:"General",26:"General",27:"m/d/yy",28:"m/d/yy",29:"m/d/yy",30:"m/d/yy",31:"m/d/yy",32:"h:mm:ss",33:"h:mm:ss",34:"h:mm:ss",35:"h:mm:ss",36:"m/d/yy",41:'_(* #,##0_);_(* (#,##0);_(* "-"_);_(@_)',42:'_("$"* #,##0_);_("$"* (#,##0);_("$"* "-"_);_(@_)',43:'_(* #,##0.00_);_(* (#,##0.00);_(* "-"??_);_(@_)',44:'_("$"* #,##0.00_);_("$"* (#,##0.00);_("$"* "-"??_);_(@_)',50:"m/d/yy",51:"m/d/yy",52:"m/d/yy",53:"m/d/yy",54:"m/d/yy",55:"m/d/yy",56:"m/d/yy",57:"m/d/yy",58:"m/d/yy",59:"0",60:"0.00",61:"#,##0",62:"#,##0.00",63:'"$"#,##0_);\\("$"#,##0\\)',64:'"$"#,##0_);[Red]\\("$"#,##0\\)',65:'"$"#,##0.00_);\\("$"#,##0.00\\)',66:'"$"#,##0.00_);[Red]\\("$"#,##0.00\\)',67:"0%",68:"0.00%",69:"# ?/?",70:"# ??/??",71:"m/d/yy",72:"m/d/yy",73:"d-mmm-yy",74:"d-mmm",75:"mmm-yy",76:"h:mm",77:"h:mm:ss",78:"m/d/yy h:mm",79:"mm:ss",80:"[h]:mm:ss",81:"mmss.0"},xe=/[dD]+|[mM]+|[yYeE]+|[Hh]+|[Ss]+/g,_e=function(){var e={version:"1.2.0"},t=function(){for(var e=0,t=new Array(256),r=0;256!=r;++r)e=1&(e=1&(e=1&(e=1&(e=1&(e=1&(e=1&(e=1&(e=r)?-306674912^e>>>1:e>>>1)?-306674912^e>>>1:e>>>1)?-306674912^e>>>1:e>>>1)?-306674912^e>>>1:e>>>1)?-306674912^e>>>1:e>>>1)?-306674912^e>>>1:e>>>1)?-306674912^e>>>1:e>>>1)?-306674912^e>>>1:e>>>1,t[r]=e;return"undefined"!=typeof Int32Array?new Int32Array(t):t}(),r=function(e){var t=0,r=0,n=0,a="undefined"!=typeof Int32Array?new Int32Array(4096):new Array(4096);for(n=0;256!=n;++n)a[n]=e[n];for(n=0;256!=n;++n)for(r=e[n],t=256+n;t<4096;t+=256)r=a[t]=r>>>8^e[255&r];var s=[];for(n=1;16!=n;++n)s[n-1]="undefined"!=typeof Int32Array?a.subarray(256*n,256*n+256):a.slice(256*n,256*n+256);return s}(t),n=r[0],a=r[1],s=r[2],i=r[3],o=r[4],l=r[5],c=r[6],f=r[7],u=r[8],h=r[9],d=r[10],p=r[11],m=r[12],g=r[13],v=r[14];return e.table=t,e.bstr=function(e,r){for(var n=-1^r,a=0,s=e.length;a<s;)n=n>>>8^t[255&(n^e.charCodeAt(a++))];return~n},e.buf=function(e,r){for(var b=-1^r,w=e.length-15,y=0;y<w;)b=v[e[y++]^255&b]^g[e[y++]^b>>8&255]^m[e[y++]^b>>16&255]^p[e[y++]^b>>>24]^d[e[y++]]^h[e[y++]]^u[e[y++]]^f[e[y++]]^c[e[y++]]^l[e[y++]]^o[e[y++]]^i[e[y++]]^s[e[y++]]^a[e[y++]]^n[e[y++]]^t[e[y++]];for(w+=15;y<w;)b=b>>>8^t[255&(b^e[y++])];return~b},e.str=function(e,r){for(var n=-1^r,a=0,s=e.length,i=0,o=0;a<s;)(i=e.charCodeAt(a++))<128?n=n>>>8^t[255&(n^i)]:i<2048?n=(n=n>>>8^t[255&(n^(192|i>>6&31))])>>>8^t[255&(n^(128|63&i))]:i>=55296&&i<57344?(i=64+(1023&i),o=1023&e.charCodeAt(a++),n=(n=(n=(n=n>>>8^t[255&(n^(240|i>>8&7))])>>>8^t[255&(n^(128|i>>2&63))])>>>8^t[255&(n^(128|o>>6&15|(3&i)<<4))])>>>8^t[255&(n^(128|63&o))]):n=(n=(n=n>>>8^t[255&(n^(224|i>>12&15))])>>>8^t[255&(n^(128|i>>6&63))])>>>8^t[255&(n^(128|63&i))];return~n},e}(),Ce=function(){var e,t={};function r(e){if("/"==e.charAt(e.length-1))return-1===e.slice(0,-1).indexOf("/")?e:r(e.slice(0,-1));var t=e.lastIndexOf("/");return-1===t?e:e.slice(0,t+1)}function n(e){if("/"==e.charAt(e.length-1))return n(e.slice(0,-1));var t=e.lastIndexOf("/");return-1===t?e:e.slice(t+1)}function a(e,t){"string"==typeof t&&(t=new Date(t));var r=t.getHours();r=(r=r<<6|t.getMinutes())<<5|t.getSeconds()>>>1,e.write_shift(2,r);var n=t.getFullYear()-1980;n=(n=n<<4|t.getMonth()+1)<<5|t.getDate(),e.write_shift(2,n)}function s(e){Mr(e,0);for(var t={},r=0;e.l<=e.length-4;){var n=e.read_shift(2),a=e.read_shift(2),s=e.l+a,i={};21589===n&&(1&(r=e.read_shift(1))&&(i.mtime=e.read_shift(4)),a>5&&(2&r&&(i.atime=e.read_shift(4)),4&r&&(i.ctime=e.read_shift(4))),i.mtime&&(i.mt=new Date(1e3*i.mtime))),e.l=s,t[n]=i}return t}function i(){return e||(e={})}function o(e,t){if(80==e[0]&&75==e[1])return de(e,t);if(109==(32|e[0])&&105==(32|e[1]))return function(e,t){if("mime-version:"!=I(e.slice(0,13)).toLowerCase())throw new Error("Unsupported MAD header");var r=t&&t.root||"",n=(k&&Buffer.isBuffer(e)?e.toString("binary"):I(e)).split("\r\n"),a=0,s="";for(a=0;a<n.length;++a)if(s=n[a],/^Content-Location:/i.test(s)&&(s=s.slice(s.indexOf("file")),r||(r=s.slice(0,s.lastIndexOf("/")+1)),s.slice(0,r.length)!=r))for(;r.length>0&&(r=(r=r.slice(0,r.length-1)).slice(0,r.lastIndexOf("/")+1),s.slice(0,r.length)!=r););var i=(n[1]||"").match(/boundary="(.*?)"/);if(!i)throw new Error("MAD cannot find boundary");var o="--"+(i[1]||""),l={FileIndex:[],FullPaths:[]};h(l);var c,f=0;for(a=0;a<n.length;++a){var u=n[a];u!==o&&u!==o+"--"||(f++&&we(l,n.slice(c,a),r),c=a)}return l}(e,t);if(e.length<512)throw new Error("CFB file size "+e.length+" < 512");var r,n,a,s,i,o,d=512,p=[],m=e.slice(0,512);Mr(m,0);var g=function(e){if(80==e[e.l]&&75==e[e.l+1])return[0,0];e.chk(b,"Header Signature: "),e.l+=16;var t=e.read_shift(2,"u");return[e.read_shift(2,"u"),t]}(m);switch(r=g[0]){case 3:d=512;break;case 4:d=4096;break;case 0:if(0==g[1])return de(e,t);default:throw new Error("Major Version: Expected 3 or 4 saw "+r)}512!==d&&Mr(m=e.slice(0,d),28);var w=e.slice(0,d);!function(e,t){var r;switch(e.l+=2,r=e.read_shift(2)){case 9:if(3!=t)throw new Error("Sector Shift: Expected 9 saw "+r);break;case 12:if(4!=t)throw new Error("Sector Shift: Expected 12 saw "+r);break;default:throw new Error("Sector Shift: Expected 9 or 12 saw "+r)}e.chk("0600","Mini Sector Shift: "),e.chk("000000000000","Reserved: ")}(m,r);var y=m.read_shift(4,"i");if(3===r&&0!==y)throw new Error("# Directory Sectors: Expected 0 saw "+y);m.l+=4,s=m.read_shift(4,"i"),m.l+=4,m.chk("00100000","Mini Stream Cutoff Size: "),i=m.read_shift(4,"i"),n=m.read_shift(4,"i"),o=m.read_shift(4,"i"),a=m.read_shift(4,"i");for(var T=-1,S=0;S<109&&!((T=m.read_shift(4,"i"))<0);++S)p[S]=T;var E=function(e,t){for(var r=Math.ceil(e.length/t)-1,n=[],a=1;a<r;++a)n[a-1]=e.slice(a*t,(a+1)*t);return n[r-1]=e.slice(r*t),n}(e,d);c(o,a,E,d,p);var x=function(e,t,r,n){var a=e.length,s=[],i=[],o=[],l=[],c=n-1,f=0,u=0,h=0,d=0;for(f=0;f<a;++f)if(o=[],(h=f+t)>=a&&(h-=a),!i[h]){l=[];var p=[];for(u=h;u>=0;){p[u]=!0,i[u]=!0,o[o.length]=u,l.push(e[u]);var m=r[Math.floor(4*u/n)];if(n<4+(d=4*u&c))throw new Error("FAT boundary crossed: "+u+" 4 "+n);if(!e[m])break;if(p[u=Nr(e[m],d)])break}s[h]={nodes:o,data:ir([l])}}return s}(E,s,p,d);x[s].name="!Directory",n>0&&i!==v&&(x[i].name="!MiniFAT"),x[p[0]].name="!FAT",x.fat_addrs=p,x.ssz=d;var _=[],C=[],A=[];!function(e,t,r,n,a,s,i,o){for(var c,h=0,d=n.length?2:0,p=t[e].data,m=0,g=0;m<p.length;m+=128){var b=p.slice(m,m+128);Mr(b,64),g=b.read_shift(2),c=lr(b,0,g-d),n.push(c);var w={name:c,type:b.read_shift(1),color:b.read_shift(1),L:b.read_shift(4,"i"),R:b.read_shift(4,"i"),C:b.read_shift(4,"i"),clsid:b.read_shift(16),state:b.read_shift(4,"i"),start:0,size:0};0!==b.read_shift(2)+b.read_shift(2)+b.read_shift(2)+b.read_shift(2)&&(w.ct=u(b,b.l-8)),0!==b.read_shift(2)+b.read_shift(2)+b.read_shift(2)+b.read_shift(2)&&(w.mt=u(b,b.l-8)),w.start=b.read_shift(4,"i"),w.size=b.read_shift(4,"i"),w.size<0&&w.start<0&&(w.size=w.type=0,w.start=v,w.name=""),5===w.type?(h=w.start,a>0&&h!==v&&(t[h].name="!StreamData")):w.size>=4096?(w.storage="fat",void 0===t[w.start]&&(t[w.start]=f(r,w.start,t.fat_addrs,t.ssz)),t[w.start].name=w.name,w.content=t[w.start].data.slice(0,w.size)):(w.storage="minifat",w.size<0?w.size=0:h!==v&&w.start!==v&&t[h]&&(w.content=l(w,t[h].data,(t[o]||{}).data))),w.content&&Mr(w.content,0),s[c]=w,i.push(w)}}(s,x,E,_,n,{},C,i),function(e,t,r){for(var n=0,a=0,s=0,i=0,o=0,l=r.length,c=[],f=[];n<l;++n)c[n]=f[n]=n,t[n]=r[n];for(;o<f.length;++o)a=e[n=f[o]].L,s=e[n].R,i=e[n].C,c[n]===n&&(-1!==a&&c[a]!==a&&(c[n]=c[a]),-1!==s&&c[s]!==s&&(c[n]=c[s])),-1!==i&&(c[i]=n),-1!==a&&n!=c[n]&&(c[a]=c[n],f.lastIndexOf(a)<o&&f.push(a)),-1!==s&&n!=c[n]&&(c[s]=c[n],f.lastIndexOf(s)<o&&f.push(s));for(n=1;n<l;++n)c[n]===n&&(-1!==s&&c[s]!==s?c[n]=c[s]:-1!==a&&c[a]!==a&&(c[n]=c[a]));for(n=1;n<l;++n)if(0!==e[n].type){if((o=n)!=c[o])do{o=c[o],t[n]=t[o]+"/"+t[n]}while(0!==o&&-1!==c[o]&&o!=c[o]);c[n]=-1}for(t[0]+="/",n=1;n<l;++n)2!==e[n].type&&(t[n]+="/")}(C,A,_),_.shift();var O={FileIndex:C,FullPaths:A};return t&&t.raw&&(O.raw={header:w,sectors:E}),O}function l(e,t,r){for(var n=e.start,a=e.size,s=[],i=n;r&&a>0&&i>=0;)s.push(t.slice(i*g,i*g+g)),a-=g,i=Nr(r,4*i);return 0===s.length?Br(0):O(s).slice(0,e.size)}function c(e,t,r,n,a){var s=v;if(e===v){if(0!==t)throw new Error("DIFAT chain shorter than expected")}else if(-1!==e){var i=r[e],o=(n>>>2)-1;if(!i)return;for(var l=0;l<o&&(s=Nr(i,4*l))!==v;++l)a.push(s);c(Nr(i,n-4),t-1,r,n,a)}}function f(e,t,r,n,a){var s=[],i=[];a||(a=[]);var o=n-1,l=0,c=0;for(l=t;l>=0;){a[l]=!0,s[s.length]=l,i.push(e[l]);var f=r[Math.floor(4*l/n)];if(n<4+(c=4*l&o))throw new Error("FAT boundary crossed: "+l+" 4 "+n);if(!e[f])break;l=Nr(e[f],c)}return{nodes:s,data:ir([i])}}function u(e,t){return new Date(1e3*(Rr(e,t+4)/1e7*Math.pow(2,32)+Rr(e,t)/1e7-11644473600))}function h(e,t){var r=t||{},n=r.root||"Root Entry";if(e.FullPaths||(e.FullPaths=[]),e.FileIndex||(e.FileIndex=[]),e.FullPaths.length!==e.FileIndex.length)throw new Error("inconsistent CFB structure");0===e.FullPaths.length&&(e.FullPaths[0]=n+"/",e.FileIndex[0]={name:n,type:5}),r.CLSID&&(e.FileIndex[0].clsid=r.CLSID),function(e){var t="Sh33tJ5";if(!Ce.find(e,"/"+t)){var r=Br(4);r[0]=55,r[1]=r[3]=50,r[2]=54,e.FileIndex.push({name:t,type:2,content:r,size:4,L:69,R:69,C:69}),e.FullPaths.push(e.FullPaths[0]+t),d(e)}}(e)}function d(e,t){h(e);for(var a=!1,s=!1,i=e.FullPaths.length-1;i>=0;--i){var o=e.FileIndex[i];switch(o.type){case 0:s?a=!0:(e.FileIndex.pop(),e.FullPaths.pop());break;case 1:case 2:case 5:s=!0,isNaN(o.R*o.L*o.C)&&(a=!0),o.R>-1&&o.L>-1&&o.R==o.L&&(a=!0);break;default:a=!0}}if(a||t){var l=new Date(1987,1,19),c=0,f=Object.create?Object.create(null):{},u=[];for(i=0;i<e.FullPaths.length;++i)f[e.FullPaths[i]]=!0,0!==e.FileIndex[i].type&&u.push([e.FullPaths[i],e.FileIndex[i]]);for(i=0;i<u.length;++i){var d=r(u[i][0]);(s=f[d])||(u.push([d,{name:n(d).replace("/",""),type:1,clsid:C,ct:l,mt:l,content:null}]),f[d]=!0)}for(u.sort((function(e,t){return function(e,t){for(var r=e.split("/"),n=t.split("/"),a=0,s=0,i=Math.min(r.length,n.length);a<i;++a){if(s=r[a].length-n[a].length)return s;if(r[a]!=n[a])return r[a]<n[a]?-1:1}return r.length-n.length}(e[0],t[0])})),e.FullPaths=[],e.FileIndex=[],i=0;i<u.length;++i)e.FullPaths[i]=u[i][0],e.FileIndex[i]=u[i][1];for(i=0;i<u.length;++i){var p=e.FileIndex[i],m=e.FullPaths[i];if(p.name=n(m).replace("/",""),p.L=p.R=p.C=-(p.color=1),p.size=p.content?p.content.length:0,p.start=0,p.clsid=p.clsid||C,0===i)p.C=u.length>1?1:-1,p.size=0,p.type=5;else if("/"==m.slice(-1)){for(c=i+1;c<u.length&&r(e.FullPaths[c])!=m;++c);for(p.C=c>=u.length?-1:c,c=i+1;c<u.length&&r(e.FullPaths[c])!=r(m);++c);p.R=c>=u.length?-1:c,p.type=1}else r(e.FullPaths[i+1]||"")==r(m)&&(p.R=i+1),p.type=2}}}function p(e,t){var r=t||{};if("mad"==r.fileType)return function(e,t){for(var r=t||{},n=r.boundary||"SheetJS",a=["MIME-Version: 1.0",'Content-Type: multipart/related; boundary="'+(n="------="+n).slice(2)+'"',"","",""],s=e.FullPaths[0],i=s,o=e.FileIndex[0],l=1;l<e.FullPaths.length;++l)if(i=e.FullPaths[l].slice(s.length),(o=e.FileIndex[l]).size&&o.content&&"Sh33tJ5"!=i){i=i.replace(/[\x00-\x08\x0B\x0C\x0E-\x1F\x7E-\xFF]/g,(function(e){return"_x"+e.charCodeAt(0).toString(16)+"_"})).replace(/[\u0080-\uFFFF]/g,(function(e){return"_u"+e.charCodeAt(0).toString(16)+"_"}));for(var c=o.content,f=k&&Buffer.isBuffer(c)?c.toString("binary"):I(c),u=0,h=Math.min(1024,f.length),d=0,p=0;p<=h;++p)(d=f.charCodeAt(p))>=32&&d<128&&++u;var m=u>=4*h/5;a.push(n),a.push("Content-Location: "+(r.root||"file:///C:/SheetJS/")+i),a.push("Content-Transfer-Encoding: "+(m?"quoted-printable":"base64")),a.push("Content-Type: "+ge(o,i)),a.push(""),a.push(m?be(f):ve(f))}return a.push(n+"--\r\n"),a.join("\r\n")}(e,r);if(d(e),"zip"===r.fileType)return function(e,t){var r,n=t||{},s=[],i=[],o=Br(1),l=n.compression?8:0,c=0,f=0,u=0,h=0,d=e.FullPaths[0],p=d,g=e.FileIndex[0],v=[],b=0;for(c=1;c<e.FullPaths.length;++c)if(p=e.FullPaths[c].slice(d.length),(g=e.FileIndex[c]).size&&g.content&&"Sh33tJ5"!=p){var w=u,y=Br(p.length);for(f=0;f<p.length;++f)y.write_shift(1,127&p.charCodeAt(f));y=y.slice(0,y.l),v[h]=_e.buf(g.content,0);var k=g.content;8==l&&(r=k,k=m?m.deflateRawSync(r):ae(r)),(o=Br(30)).write_shift(4,67324752),o.write_shift(2,20),o.write_shift(2,0),o.write_shift(2,l),g.mt?a(o,g.mt):o.write_shift(4,0),o.write_shift(-4,v[h]),o.write_shift(4,k.length),o.write_shift(4,g.content.length),o.write_shift(2,y.length),o.write_shift(2,0),u+=o.length,s.push(o),u+=y.length,s.push(y),u+=k.length,s.push(k),(o=Br(46)).write_shift(4,33639248),o.write_shift(2,0),o.write_shift(2,20),o.write_shift(2,0),o.write_shift(2,l),o.write_shift(4,0),o.write_shift(-4,v[h]),o.write_shift(4,k.length),o.write_shift(4,g.content.length),o.write_shift(2,y.length),o.write_shift(2,0),o.write_shift(2,0),o.write_shift(2,0),o.write_shift(2,0),o.write_shift(4,0),o.write_shift(4,w),b+=o.l,i.push(o),b+=y.length,i.push(y),++h}return(o=Br(22)).write_shift(4,101010256),o.write_shift(2,0),o.write_shift(2,0),o.write_shift(2,h),o.write_shift(2,h),o.write_shift(4,b),o.write_shift(4,u),o.write_shift(2,0),O([O(s),O(i),o])}(e,r);var n=function(e){for(var t=0,r=0,n=0;n<e.FileIndex.length;++n){var a=e.FileIndex[n];if(a.content){var s=a.content.length;s>0&&(s<4096?t+=s+63>>6:r+=s+511>>9)}}for(var i=e.FullPaths.length+3>>2,o=t+127>>7,l=(t+7>>3)+r+i+o,c=l+127>>7,f=c<=109?0:Math.ceil((c-109)/127);l+c+f+127>>7>c;)f=++c<=109?0:Math.ceil((c-109)/127);var u=[1,f,c,o,i,r,t,0];return e.FileIndex[0].size=t<<6,u[7]=(e.FileIndex[0].start=u[0]+u[1]+u[2]+u[3]+u[4]+u[5])+(u[6]+7>>3),u}(e),s=Br(n[7]<<9),i=0,o=0;for(i=0;i<8;++i)s.write_shift(1,_[i]);for(i=0;i<8;++i)s.write_shift(2,0);for(s.write_shift(2,62),s.write_shift(2,3),s.write_shift(2,65534),s.write_shift(2,9),s.write_shift(2,6),i=0;i<3;++i)s.write_shift(2,0);for(s.write_shift(4,0),s.write_shift(4,n[2]),s.write_shift(4,n[0]+n[1]+n[2]+n[3]-1),s.write_shift(4,0),s.write_shift(4,4096),s.write_shift(4,n[3]?n[0]+n[1]+n[2]-1:v),s.write_shift(4,n[3]),s.write_shift(-4,n[1]?n[0]-1:v),s.write_shift(4,n[1]),i=0;i<109;++i)s.write_shift(-4,i<n[2]?n[1]+i:-1);if(n[1])for(o=0;o<n[1];++o){for(;i<236+127*o;++i)s.write_shift(-4,i<n[2]?n[1]+i:-1);s.write_shift(-4,o===n[1]-1?v:o+1)}var l=function(e){for(o+=e;i<o-1;++i)s.write_shift(-4,i+1);e&&(++i,s.write_shift(-4,v))};for(o=i=0,o+=n[1];i<o;++i)s.write_shift(-4,A.DIFSECT);for(o+=n[2];i<o;++i)s.write_shift(-4,A.FATSECT);l(n[3]),l(n[4]);for(var c=0,f=0,u=e.FileIndex[0];c<e.FileIndex.length;++c)(u=e.FileIndex[c]).content&&((f=u.content.length)<4096||(u.start=o,l(f+511>>9)));for(l(n[6]+7>>3);511&s.l;)s.write_shift(-4,A.ENDOFCHAIN);for(o=i=0,c=0;c<e.FileIndex.length;++c)(u=e.FileIndex[c]).content&&(!(f=u.content.length)||f>=4096||(u.start=o,l(f+63>>6)));for(;511&s.l;)s.write_shift(-4,A.ENDOFCHAIN);for(i=0;i<n[4]<<2;++i){var h=e.FullPaths[i];if(h&&0!==h.length){u=e.FileIndex[i],0===i&&(u.start=u.size?u.start-1:v);var p=0===i&&r.root||u.name;if(f=2*(p.length+1),s.write_shift(64,p,"utf16le"),s.write_shift(2,f),s.write_shift(1,u.type),s.write_shift(1,u.color),s.write_shift(-4,u.L),s.write_shift(-4,u.R),s.write_shift(-4,u.C),u.clsid)s.write_shift(16,u.clsid,"hex");else for(c=0;c<4;++c)s.write_shift(4,0);s.write_shift(4,u.state||0),s.write_shift(4,0),s.write_shift(4,0),s.write_shift(4,0),s.write_shift(4,0),s.write_shift(4,u.start),s.write_shift(4,u.size),s.write_shift(4,0)}else{for(c=0;c<17;++c)s.write_shift(4,0);for(c=0;c<3;++c)s.write_shift(4,-1);for(c=0;c<12;++c)s.write_shift(4,0)}}for(i=1;i<e.FileIndex.length;++i)if((u=e.FileIndex[i]).size>=4096)if(s.l=u.start+1<<9,k&&Buffer.isBuffer(u.content))u.content.copy(s,s.l,0,u.size),s.l+=u.size+511&-512;else{for(c=0;c<u.size;++c)s.write_shift(1,u.content[c]);for(;511&c;++c)s.write_shift(1,0)}for(i=1;i<e.FileIndex.length;++i)if((u=e.FileIndex[i]).size>0&&u.size<4096)if(k&&Buffer.isBuffer(u.content))u.content.copy(s,s.l,0,u.size),s.l+=u.size+63&-64;else{for(c=0;c<u.size;++c)s.write_shift(1,u.content[c]);for(;63&c;++c)s.write_shift(1,0)}if(k)s.l=s.length;else for(;s.l<s.length;)s.write_shift(1,0);return s}t.version="1.2.1";var m,g=64,v=-2,b="d0cf11e0a1b11ae1",_=[208,207,17,224,161,177,26,225],C="00000000000000000000000000000000",A={MAXREGSECT:-6,DIFSECT:-4,FATSECT:-3,ENDOFCHAIN:v,FREESECT:-1,HEADER_SIGNATURE:b,HEADER_MINOR_VERSION:"3e00",MAXREGSID:-6,NOSTREAM:-1,HEADER_CLSID:C,EntryTypes:["unknown","storage","stream","lockbytes","property","root"]};function I(e){for(var t=new Array(e.length),r=0;r<e.length;++r)t[r]=String.fromCharCode(e[r]);return t.join("")}for(var P,D,F=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],L=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258],M=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],U="undefined"!=typeof Uint8Array,B=U?new Uint8Array(256):[],z=0;z<256;++z)B[z]=(void 0,255&((D=139536&((P=z)<<1|P<<11)|558144&(P<<5|P<<15))>>16|D>>8|D));function W(e,t){var r=B[255&e];return t<=8?r>>>8-t:(r=r<<8|B[e>>8&255],t<=16?r>>>16-t:(r=r<<8|B[e>>16&255])>>>24-t)}function H(e,t){var r=7&t,n=t>>>3;return(e[n]|(r<=6?0:e[n+1]<<8))>>>r&3}function j(e,t){var r=7&t,n=t>>>3;return(e[n]|(r<=5?0:e[n+1]<<8))>>>r&7}function V(e,t){var r=7&t,n=t>>>3;return(e[n]|(r<=3?0:e[n+1]<<8))>>>r&31}function $(e,t){var r=7&t,n=t>>>3;return(e[n]|(r<=1?0:e[n+1]<<8))>>>r&127}function G(e,t,r){var n=7&t,a=t>>>3,s=(1<<r)-1,i=e[a]>>>n;return r<8-n?i&s:(i|=e[a+1]<<8-n,r<16-n?i&s:(i|=e[a+2]<<16-n,r<24-n?i&s:(i|=e[a+3]<<24-n)&s))}function X(e,t,r){var n=7&t,a=t>>>3;return n<=5?e[a]|=(7&r)<<n:(e[a]|=r<<n&255,e[a+1]=(7&r)>>8-n),t+3}function Y(e,t,r){return r=(1&r)<<(7&t),e[t>>>3]|=r,t+1}function K(e,t,r){var n=t>>>3;return r<<=7&t,e[n]|=255&r,r>>>=8,e[n+1]=r,t+8}function q(e,t,r){var n=t>>>3;return r<<=7&t,e[n]|=255&r,r>>>=8,e[n+1]=255&r,e[n+2]=r>>>8,t+16}function Q(e,t){var r=e.length,n=2*r>t?2*r:t+5,a=0;if(r>=t)return e;if(k){var s=E(n);if(e.copy)e.copy(s);else for(;a<e.length;++a)s[a]=e[a];return s}if(U){var i=new Uint8Array(n);if(i.set)i.set(e);else for(;a<r;++a)i[a]=e[a];return i}return e.length=n,e}function J(e){for(var t=new Array(e),r=0;r<e;++r)t[r]=0;return t}function Z(e,t,r){var n=1,a=0,s=0,i=0,o=0,l=e.length,c=U?new Uint16Array(32):J(32);for(s=0;s<32;++s)c[s]=0;for(s=l;s<r;++s)e[s]=0;l=e.length;var f=U?new Uint16Array(l):J(l);for(s=0;s<l;++s)c[a=e[s]]++,n<a&&(n=a),f[s]=0;for(c[0]=0,s=1;s<=n;++s)c[s+16]=o=o+c[s-1]<<1;for(s=0;s<l;++s)0!=(o=e[s])&&(f[s]=c[o+16]++);var u=0;for(s=0;s<l;++s)if(0!=(u=e[s]))for(o=W(f[s],n)>>n-u,i=(1<<n+4-u)-1;i>=0;--i)t[o|i<<u]=15&u|s<<4;return n}var ee=U?new Uint16Array(512):J(512),te=U?new Uint16Array(32):J(32);if(!U){for(var re=0;re<512;++re)ee[re]=0;for(re=0;re<32;++re)te[re]=0}!function(){for(var e=[],t=0;t<32;t++)e.push(5);Z(e,te,32);var r=[];for(t=0;t<=143;t++)r.push(8);for(;t<=255;t++)r.push(9);for(;t<=279;t++)r.push(7);for(;t<=287;t++)r.push(8);Z(r,ee,288)}();var ne=function(){for(var e=U?new Uint8Array(32768):[],t=0,r=0;t<M.length-1;++t)for(;r<M[t+1];++r)e[r]=t;for(;r<32768;++r)e[r]=29;var n=U?new Uint8Array(259):[];for(t=0,r=0;t<L.length-1;++t)for(;r<L[t+1];++r)n[r]=t;return function(t,r){return t.length<8?function(e,t){for(var r=0;r<e.length;){var n=Math.min(65535,e.length-r),a=r+n==e.length;for(t.write_shift(1,+a),t.write_shift(2,n),t.write_shift(2,65535&~n);n-- >0;)t[t.l++]=e[r++]}return t.l}(t,r):function(t,r){for(var a=0,s=0,i=U?new Uint16Array(32768):[];s<t.length;){var o=Math.min(65535,t.length-s);if(o<10){for(7&(a=X(r,a,+!(s+o!=t.length)))&&(a+=8-(7&a)),r.l=a/8|0,r.write_shift(2,o),r.write_shift(2,65535&~o);o-- >0;)r[r.l++]=t[s++];a=8*r.l}else{a=X(r,a,+!(s+o!=t.length)+2);for(var l=0;o-- >0;){var c=t[s],f=-1,u=0;if((f=i[l=32767&(l<<5^c)])&&((f|=-32768&s)>s&&(f-=32768),f<s))for(;t[f+u]==t[s+u]&&u<250;)++u;if(u>2){(c=n[u])<=22?a=K(r,a,B[c+1]>>1)-1:(K(r,a,3),K(r,a+=5,B[c-23]>>5),a+=3);var h=c<8?0:c-4>>2;h>0&&(q(r,a,u-L[c]),a+=h),c=e[s-f],a=K(r,a,B[c]>>3),a-=3;var d=c<4?0:c-2>>1;d>0&&(q(r,a,s-f-M[c]),a+=d);for(var p=0;p<u;++p)i[l]=32767&s,l=32767&(l<<5^t[s]),++s;o-=u-1}else c<=143?c+=48:a=Y(r,a,1),a=K(r,a,B[c]),i[l]=32767&s,++s}a=K(r,a,0)-1}}return r.l=(a+7)/8|0,r.l}(t,r)}}();function ae(e){var t=Br(50+Math.floor(1.1*e.length)),r=ne(e,t);return t.slice(0,r)}var se=U?new Uint16Array(32768):J(32768),ie=U?new Uint16Array(32768):J(32768),oe=U?new Uint16Array(128):J(128),le=1,ce=1;function fe(e,t){var r=V(e,t)+257,n=V(e,t+=5)+1,a=function(e,t){var r=7&t,n=t>>>3;return(e[n]|(r<=4?0:e[n+1]<<8))>>>r&15}(e,t+=5)+4;t+=4;for(var s=0,i=U?new Uint8Array(19):J(19),o=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],l=1,c=U?new Uint8Array(8):J(8),f=U?new Uint8Array(8):J(8),u=i.length,h=0;h<a;++h)i[F[h]]=s=j(e,t),l<s&&(l=s),c[s]++,t+=3;var d=0;for(c[0]=0,h=1;h<=l;++h)f[h]=d=d+c[h-1]<<1;for(h=0;h<u;++h)0!=(d=i[h])&&(o[h]=f[d]++);var p=0;for(h=0;h<u;++h)if(0!=(p=i[h])){d=B[o[h]]>>8-p;for(var m=(1<<7-p)-1;m>=0;--m)oe[d|m<<p]=7&p|h<<3}var g=[];for(l=1;g.length<r+n;)switch(t+=7&(d=oe[$(e,t)]),d>>>=3){case 16:for(s=3+H(e,t),t+=2,d=g[g.length-1];s-- >0;)g.push(d);break;case 17:for(s=3+j(e,t),t+=3;s-- >0;)g.push(0);break;case 18:for(s=11+$(e,t),t+=7;s-- >0;)g.push(0);break;default:g.push(d),l<d&&(l=d)}var v=g.slice(0,r),b=g.slice(r);for(h=r;h<286;++h)v[h]=0;for(h=n;h<30;++h)b[h]=0;return le=Z(v,se,286),ce=Z(b,ie,30),t}function ue(e,t){var r=function(e,t){if(3==e[0]&&!(3&e[1]))return[S(t),2];for(var r=0,n=0,a=E(t||1<<18),s=0,i=a.length>>>0,o=0,l=0;0==(1&n);)if(n=j(e,r),r+=3,n>>>1!=0)for(n>>1==1?(o=9,l=5):(r=fe(e,r),o=le,l=ce);;){!t&&i<s+32767&&(i=(a=Q(a,s+32767)).length);var c=G(e,r,o),f=n>>>1==1?ee[c]:se[c];if(r+=15&f,0==((f>>>=4)>>>8&255))a[s++]=f;else{if(256==f)break;var u=(f-=257)<8?0:f-4>>2;u>5&&(u=0);var h=s+L[f];u>0&&(h+=G(e,r,u),r+=u),c=G(e,r,l),r+=15&(f=n>>>1==1?te[c]:ie[c]);var d=(f>>>=4)<4?0:f-2>>1,p=M[f];for(d>0&&(p+=G(e,r,d),r+=d),!t&&i<h&&(i=(a=Q(a,h+100)).length);s<h;)a[s]=a[s-p],++s}}else{7&r&&(r+=8-(7&r));var m=e[r>>>3]|e[1+(r>>>3)]<<8;if(r+=32,m>0)for(!t&&i<s+m&&(i=(a=Q(a,s+m)).length);m-- >0;)a[s++]=e[r>>>3],r+=8}return t?[a,r+7>>>3]:[a.slice(0,s),r+7>>>3]}(e.slice(e.l||0),t);return e.l+=r[1],r[0]}function he(e,t){if(!e)throw new Error(t);"undefined"!=typeof console&&console.error(t)}function de(e,t){var r=e;Mr(r,0);var n={FileIndex:[],FullPaths:[]};h(n,{root:t.root});for(var a=r.length-4;(80!=r[a]||75!=r[a+1]||5!=r[a+2]||6!=r[a+3])&&a>=0;)--a;r.l=a+4,r.l+=4;var i=r.read_shift(2);r.l+=6;var o=r.read_shift(4);for(r.l=o,a=0;a<i;++a){r.l+=20;var l=r.read_shift(4),c=r.read_shift(4),f=r.read_shift(2),u=r.read_shift(2),d=r.read_shift(2);r.l+=8;var p=r.read_shift(4),m=s(r.slice(r.l+f,r.l+f+u));r.l+=f+u+d;var g=r.l;r.l=p+4,pe(r,l,c,n,m),r.l=g}return n}function pe(e,t,r,n,a){e.l+=2;var i=e.read_shift(2),o=e.read_shift(2),l=function(e){var t=65535&e.read_shift(2),r=65535&e.read_shift(2),n=new Date,a=31&r,s=15&(r>>>=5);r>>>=4,n.setMilliseconds(0),n.setFullYear(r+1980),n.setMonth(s-1),n.setDate(a);var i=31&t,o=63&(t>>>=5);return t>>>=6,n.setHours(t),n.setMinutes(o),n.setSeconds(i<<1),n}(e);if(8257&i)throw new Error("Unsupported ZIP encryption");e.read_shift(4);for(var c=e.read_shift(4),f=e.read_shift(4),u=e.read_shift(2),h=e.read_shift(2),d="",p=0;p<u;++p)d+=String.fromCharCode(e[e.l++]);if(h){var g=s(e.slice(e.l,e.l+h));(g[21589]||{}).mt&&(l=g[21589].mt),((a||{})[21589]||{}).mt&&(l=a[21589].mt)}e.l+=h;var v=e.slice(e.l,e.l+c);switch(o){case 8:v=function(e,t){if(!m)return ue(e,t);var r=new(0,m.InflateRaw),n=r._processChunk(e.slice(e.l),r._finishFlushFlag);return e.l+=r.bytesRead,n}(e,f);break;case 0:break;default:throw new Error("Unsupported ZIP Compression method "+o)}var b=!1;8&i&&(134695760==e.read_shift(4)&&(e.read_shift(4),b=!0),c=e.read_shift(4),f=e.read_shift(4)),c!=t&&he(b,"Bad compressed size: "+t+" != "+c),f!=r&&he(b,"Bad uncompressed size: "+r+" != "+f),ye(n,d,v,{unsafe:!0,mt:l})}var me={htm:"text/html",xml:"text/xml",gif:"image/gif",jpg:"image/jpeg",png:"image/png",mso:"application/x-mso",thmx:"application/vnd.ms-officetheme",sh33tj5:"application/octet-stream"};function ge(e,t){if(e.ctype)return e.ctype;var r=e.name||"",n=r.match(/\.([^\.]+)$/);return n&&me[n[1]]||t&&(n=(r=t).match(/[\.\\]([^\.\\])+$/))&&me[n[1]]?me[n[1]]:"application/octet-stream"}function ve(e){for(var t=w(e),r=[],n=0;n<t.length;n+=76)r.push(t.slice(n,n+76));return r.join("\r\n")+"\r\n"}function be(e){var t=e.replace(/[\x00-\x08\x0B\x0C\x0E-\x1F\x7E-\xFF=]/g,(function(e){var t=e.charCodeAt(0).toString(16).toUpperCase();return"="+(1==t.length?"0"+t:t)}));"\n"==(t=t.replace(/ $/gm,"=20").replace(/\t$/gm,"=09")).charAt(0)&&(t="=0D"+t.slice(1));for(var r=[],n=(t=t.replace(/\r(?!\n)/gm,"=0D").replace(/\n\n/gm,"\n=0A").replace(/([^\r\n])\n/gm,"$1=0A")).split("\r\n"),a=0;a<n.length;++a){var s=n[a];if(0!=s.length)for(var i=0;i<s.length;){var o=76,l=s.slice(i,i+o);"="==l.charAt(o-1)?o--:"="==l.charAt(o-2)?o-=2:"="==l.charAt(o-3)&&(o-=3),l=s.slice(i,i+o),(i+=o)<s.length&&(l+="="),r.push(l)}else r.push("")}return r.join("\r\n")}function we(e,t,r){for(var n,a="",s="",i="",o=0;o<10;++o){var l=t[o];if(!l||l.match(/^\s*$/))break;var c=l.match(/^(.*?):\s*([^\s].*)$/);if(c)switch(c[1].toLowerCase()){case"content-location":a=c[2].trim();break;case"content-type":i=c[2].trim();break;case"content-transfer-encoding":s=c[2].trim()}}switch(++o,s.toLowerCase()){case"base64":n=x(y(t.slice(o).join("")));break;case"quoted-printable":n=function(e){for(var t=[],r=0;r<e.length;++r){for(var n=e[r];r<=e.length&&"="==n.charAt(n.length-1);)n=n.slice(0,n.length-1)+e[++r];t.push(n)}for(var a=0;a<t.length;++a)t[a]=t[a].replace(/[=][0-9A-Fa-f]{2}/g,(function(e){return String.fromCharCode(parseInt(e.slice(1),16))}));return x(t.join("\r\n"))}(t.slice(o));break;default:throw new Error("Unsupported Content-Transfer-Encoding "+s)}var f=ye(e,a.slice(r.length),n,{unsafe:!0});i&&(f.ctype=i)}function ye(e,t,r,a){var s=a&&a.unsafe;s||h(e);var i=!s&&Ce.find(e,t);if(!i){var o=e.FullPaths[0];t.slice(0,o.length)==o?o=t:("/"!=o.slice(-1)&&(o+="/"),o=(o+t).replace("//","/")),i={name:n(t),type:2},e.FileIndex.push(i),e.FullPaths.push(o),s||Ce.utils.cfb_gc(e)}return i.content=r,i.size=r?r.length:0,a&&(a.CLSID&&(i.clsid=a.CLSID),a.mt&&(i.mt=a.mt),a.ct&&(i.ct=a.ct)),i}return t.find=function(e,t){var r=e.FullPaths.map((function(e){return e.toUpperCase()})),n=r.map((function(e){var t=e.split("/");return t[t.length-("/"==e.slice(-1)?2:1)]})),a=!1;47===t.charCodeAt(0)?(a=!0,t=r[0].slice(0,-1)+t):a=-1!==t.indexOf("/");var s=t.toUpperCase(),i=!0===a?r.indexOf(s):n.indexOf(s);if(-1!==i)return e.FileIndex[i];var o=!s.match(N);for(s=s.replace(R,""),o&&(s=s.replace(N,"!")),i=0;i<r.length;++i){if((o?r[i].replace(N,"!"):r[i]).replace(R,"")==s)return e.FileIndex[i];if((o?n[i].replace(N,"!"):n[i]).replace(R,"")==s)return e.FileIndex[i]}return null},t.read=function(t,r){var n=r&&r.type;switch(n||k&&Buffer.isBuffer(t)&&(n="buffer"),n||"base64"){case"file":return function(t,r){return i(),o(e.readFileSync(t),r)}(t,r);case"base64":return o(x(y(t)),r);case"binary":return o(x(t),r)}return o(t,r)},t.parse=o,t.write=function(t,r){var n=p(t,r);switch(r&&r.type||"buffer"){case"file":return i(),e.writeFileSync(r.filename,n),n;case"binary":return"string"==typeof n?n:I(n);case"base64":return w("string"==typeof n?n:I(n));case"buffer":if(k)return Buffer.isBuffer(n)?n:T(n);case"array":return"string"==typeof n?x(n):n}return n},t.writeFile=function(t,r,n){i();var a=p(t,n);e.writeFileSync(r,a)},t.utils={cfb_new:function(e){var t={};return h(t,e),t},cfb_add:ye,cfb_del:function(e,t){h(e);var r=Ce.find(e,t);if(r)for(var n=0;n<e.FileIndex.length;++n)if(e.FileIndex[n]==r)return e.FileIndex.splice(n,1),e.FullPaths.splice(n,1),!0;return!1},cfb_mov:function(e,t,r){h(e);var a=Ce.find(e,t);if(a)for(var s=0;s<e.FileIndex.length;++s)if(e.FileIndex[s]==a)return e.FileIndex[s].name=n(r),e.FullPaths[s]=r,!0;return!1},cfb_gc:function(e){d(e,!0)},ReadShift:Pr,CheckField:Lr,prep_blob:Mr,bconcat:O,use_zlib:function(e){try{var t=new(0,e.InflateRaw);if(t._processChunk(new Uint8Array([3,0]),t._finishFlushFlag),!t.bytesRead)throw new Error("zlib does not expose bytesRead");m=e}catch(e){console.error("cannot use native zlib: "+(e.message||e))}},_deflateRaw:ae,_inflateRaw:ue,consts:A},t}();let Ae;function Oe(e){Ae=e}function Re(e){return"string"==typeof e?_(e):Array.isArray(e)?function(e){if("undefined"==typeof Uint8Array)throw new Error("Unsupported");return new Uint8Array(e)}(e):e}function Ne(e,t,r){if(void 0!==Ae&&Ae.writeFileSync)return r?Ae.writeFileSync(e,t,r):Ae.writeFileSync(e,t);if("undefined"!=typeof Deno){if(r&&"string"==typeof t)switch(r){case"utf8":t=new TextEncoder(r).encode(t);break;case"binary":t=_(t);break;default:throw new Error("Unsupported encoding "+r)}return Deno.writeFileSync(e,t)}var n="utf8"==r?Lt(t):t;if("undefined"!=typeof IE_SaveFile)return IE_SaveFile(n,e);if("undefined"!=typeof Blob){var a=new Blob([Re(n)],{type:"application/octet-stream"});if("undefined"!=typeof navigator&&navigator.msSaveBlob)return navigator.msSaveBlob(a,e);if("undefined"!=typeof saveAs)return saveAs(a,e);if("undefined"!=typeof URL&&"undefined"!=typeof document&&document.createElement&&URL.createObjectURL){var s=URL.createObjectURL(a);if("object"==typeof chrome&&"function"==typeof(chrome.downloads||{}).download)return URL.revokeObjectURL&&"undefined"!=typeof setTimeout&&setTimeout((function(){URL.revokeObjectURL(s)}),6e4),chrome.downloads.download({url:s,filename:e,saveAs:!0});var i=document.createElement("a");if(null!=i.download)return i.download=e,i.href=s,document.body.appendChild(i),i.click(),document.body.removeChild(i),URL.revokeObjectURL&&"undefined"!=typeof setTimeout&&setTimeout((function(){URL.revokeObjectURL(s)}),6e4),s}}if("undefined"!=typeof $&&"undefined"!=typeof File&&"undefined"!=typeof Folder)try{var o=File(e);return o.open("w"),o.encoding="binary",Array.isArray(t)&&(t=C(t)),o.write(t),o.close(),t}catch(e){if(!e.message||!e.message.match(/onstruct/))throw e}throw new Error("cannot save file "+e)}function Ie(e){for(var t=Object.keys(e),r=[],n=0;n<t.length;++n)Object.prototype.hasOwnProperty.call(e,t[n])&&r.push(t[n]);return r}function Pe(e,t){for(var r=[],n=Ie(e),a=0;a!==n.length;++a)null==r[e[n[a]][t]]&&(r[e[n[a]][t]]=n[a]);return r}function De(e){for(var t=[],r=Ie(e),n=0;n!==r.length;++n)t[e[r[n]]]=r[n];return t}function Fe(e){for(var t=[],r=Ie(e),n=0;n!==r.length;++n)t[e[r[n]]]=parseInt(r[n],10);return t}var Le=new Date(1899,11,30,0,0,0);function Me(e,t){var r=e.getTime();return t&&(r-=1263168e5),(r-(Le.getTime()+6e4*(e.getTimezoneOffset()-Le.getTimezoneOffset())))/864e5}var Ue=new Date,Be=Le.getTime()+6e4*(Ue.getTimezoneOffset()-Le.getTimezoneOffset()),ze=Ue.getTimezoneOffset();function We(e){var t=new Date;return t.setTime(24*e*60*60*1e3+Be),t.getTimezoneOffset()!==ze&&t.setTime(t.getTime()+6e4*(t.getTimezoneOffset()-ze)),t}function He(e){var t=0,r=0,n=!1,a=e.match(/P([0-9\.]+Y)?([0-9\.]+M)?([0-9\.]+D)?T([0-9\.]+H)?([0-9\.]+M)?([0-9\.]+S)?/);if(!a)throw new Error("|"+e+"| is not an ISO8601 Duration");for(var s=1;s!=a.length;++s)if(a[s]){switch(r=1,s>3&&(n=!0),a[s].slice(a[s].length-1)){case"Y":throw new Error("Unsupported ISO Duration Field: "+a[s].slice(a[s].length-1));case"D":r*=24;case"H":r*=60;case"M":if(!n)throw new Error("Unsupported ISO Duration Field: M");r*=60}t+=r*parseInt(a[s],10)}return t}var je=new Date("2017-02-19T19:06:09.000Z"),Ve=isNaN(je.getFullYear())?new Date("2/19/17"):je,$e=2017==Ve.getFullYear();function Ge(e,t){var r=new Date(e);if($e)return t>0?r.setTime(r.getTime()+60*r.getTimezoneOffset()*1e3):t<0&&r.setTime(r.getTime()-60*r.getTimezoneOffset()*1e3),r;if(e instanceof Date)return e;if(1917==Ve.getFullYear()&&!isNaN(r.getFullYear())){var n=r.getFullYear();return e.indexOf(""+n)>-1||r.setFullYear(r.getFullYear()+100),r}var a=e.match(/\d+/g)||["2017","2","19","0","0","0"],s=new Date(+a[0],+a[1]-1,+a[2],+a[3]||0,+a[4]||0,+a[5]||0);return e.indexOf("Z")>-1&&(s=new Date(s.getTime()-60*s.getTimezoneOffset()*1e3)),s}function Xe(e,t){if(k&&Buffer.isBuffer(e)){if(t){if(255==e[0]&&254==e[1])return Lt(e.slice(2).toString("utf16le"));if(254==e[1]&&255==e[2])return Lt(h(e.slice(2).toString("binary")))}return e.toString("binary")}if("undefined"!=typeof TextDecoder)try{if(t){if(255==e[0]&&254==e[1])return Lt(new TextDecoder("utf-16le").decode(e.slice(2)));if(254==e[0]&&255==e[1])return Lt(new TextDecoder("utf-16be").decode(e.slice(2)))}var r={"€":"","‚":"",ƒ:"","„":"","…":"","†":"","‡":"",ˆ:"","‰":"",Š:"","‹":"",Œ:"",Ž:"","‘":"","’":"","“":"","”":"","•":"","–":"","—":"","˜":"","™":"",š:"","›":"",œ:"",ž:"",Ÿ:""};return Array.isArray(e)&&(e=new Uint8Array(e)),new TextDecoder("latin1").decode(e).replace(/[€‚ƒ„…†‡ˆ‰Š‹ŒŽ‘’“”•–—˜™š›œžŸ]/g,(function(e){return r[e]||e}))}catch(e){}for(var n=[],a=0;a!=e.length;++a)n.push(String.fromCharCode(e[a]));return n.join("")}function Ye(e){if("undefined"!=typeof JSON&&!Array.isArray(e))return JSON.parse(JSON.stringify(e));if("object"!=typeof e||null==e)return e;if(e instanceof Date)return new Date(e.getTime());var t={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=Ye(e[r]));return t}function Ke(e,t){for(var r="";r.length<t;)r+=e;return r}function qe(e){var t=Number(e);if(!isNaN(t))return isFinite(t)?t:NaN;if(!/\d/.test(e))return t;var r=1,n=e.replace(/([\d]),([\d])/g,"$1$2").replace(/[$]/g,"").replace(/[%]/g,(function(){return r*=100,""}));return isNaN(t=Number(n))?(n=n.replace(/[(](.*)[)]/,(function(e,t){return r=-r,t})),isNaN(t=Number(n))?t:t/r):t/r}var Qe=["january","february","march","april","may","june","july","august","september","october","november","december"];function Je(e){var t=new Date(e),r=new Date(NaN),n=t.getYear(),a=t.getMonth(),s=t.getDate();if(isNaN(s))return r;var i=e.toLowerCase();if(i.match(/jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec/)){if((i=i.replace(/[^a-z]/g,"").replace(/([^a-z]|^)[ap]m?([^a-z]|$)/,"")).length>3&&-1==Qe.indexOf(i))return r}else if(i.match(/[a-z]/))return r;return n<0||n>8099?r:(a>0||s>1)&&101!=n?t:e.match(/[^-0-9:,\/\\]/)?r:t}var Ze=function(){var e=5=="abacaba".split(/(:?b)/i).length;return function(t,r,n){if(e||"string"==typeof r)return t.split(r);for(var a=t.split(r),s=[a[0]],i=1;i<a.length;++i)s.push(n),s.push(a[i]);return s}}();function et(e){return e?e.content&&e.type?Xe(e.content,!0):e.data?p(e.data):e.asNodeBuffer&&k?p(e.asNodeBuffer().toString("binary")):e.asBinary?p(e.asBinary()):e._data&&e._data.getContent?p(Xe(Array.prototype.slice.call(e._data.getContent(),0))):null:null}function tt(e){if(!e)return null;if(e.data)return u(e.data);if(e.asNodeBuffer&&k)return e.asNodeBuffer();if(e._data&&e._data.getContent){var t=e._data.getContent();return"string"==typeof t?u(t):Array.prototype.slice.call(t)}return e.content&&e.type?e.content:null}function rt(e,t){for(var r=e.FullPaths||Ie(e.files),n=t.toLowerCase().replace(/[\/]/g,"\\"),a=n.replace(/\\/g,"/"),s=0;s<r.length;++s){var i=r[s].replace(/^Root Entry[\/]/,"").toLowerCase();if(n==i||a==i)return e.files?e.files[r[s]]:e.FileIndex[s]}return null}function nt(e,t){var r=rt(e,t);if(null==r)throw new Error("Cannot find file "+t+" in zip");return r}function at(e,t,r){if(!r)return(n=nt(e,t))&&".bin"===n.name.slice(-4)?tt(n):et(n);var n;if(!t)return null;try{return at(e,t)}catch(e){return null}}function st(e,t,r){if(!r)return et(nt(e,t));if(!t)return null;try{return st(e,t)}catch(e){return null}}function it(e,t,r){if(!r)return tt(nt(e,t));if(!t)return null;try{return it(e,t)}catch(e){return null}}function ot(e){for(var t=e.FullPaths||Ie(e.files),r=[],n=0;n<t.length;++n)"/"!=t[n].slice(-1)&&r.push(t[n].replace(/^Root Entry[\/]/,""));return r.sort()}function lt(e,t,r){if(e.FullPaths){var n;if("string"==typeof r)return n=k?T(r):function(e){for(var t=[],r=0,n=e.length+250,a=S(e.length+255),s=0;s<e.length;++s){var i=e.charCodeAt(s);if(i<128)a[r++]=i;else if(i<2048)a[r++]=192|i>>6&31,a[r++]=128|63&i;else if(i>=55296&&i<57344){i=64+(1023&i);var o=1023&e.charCodeAt(++s);a[r++]=240|i>>8&7,a[r++]=128|i>>2&63,a[r++]=128|o>>6&15|(3&i)<<4,a[r++]=128|63&o}else a[r++]=224|i>>12&15,a[r++]=128|i>>6&63,a[r++]=128|63&i;r>n&&(t.push(a.slice(0,r)),r=0,a=S(65535),n=65530)}return t.push(a.slice(0,r)),O(t)}(r),Ce.utils.cfb_add(e,t,n);Ce.utils.cfb_add(e,t,r)}else e.file(t,r)}function ct(){return Ce.utils.cfb_new()}function ft(e,t){switch(t.type){case"base64":return Ce.read(e,{type:"base64"});case"binary":return Ce.read(e,{type:"binary"});case"buffer":case"array":return Ce.read(e,{type:"buffer"})}throw new Error("Unrecognized type "+t.type)}function ut(e,t){if("/"==e.charAt(0))return e.slice(1);var r=t.split("/");"/"!=t.slice(-1)&&r.pop();for(var n=e.split("/");0!==n.length;){var a=n.shift();".."===a?r.pop():"."!==a&&r.push(a)}return r.join("/")}var ht='<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\r\n',dt=/([^"\s?>\/]+)\s*=\s*((?:")([^"]*)(?:")|(?:')([^']*)(?:')|([^'">\s]+))/g,pt=/<[\/\?]?[a-zA-Z0-9:_-]+(?:\s+[^"\s?>\/]+\s*=\s*(?:"[^"]*"|'[^']*'|[^'">\s=]+))*\s*[\/\?]?>/gm,mt=ht.match(pt)?pt:/<[^>]*>/g,gt=/<\w*:/,vt=/<(\/?)\w+:/;function bt(e,t,r){for(var n={},a=0,s=0;a!==e.length&&32!==(s=e.charCodeAt(a))&&10!==s&&13!==s;++a);if(t||(n[0]=e.slice(0,a)),a===e.length)return n;var i=e.match(dt),o=0,l="",c=0,f="",u="",h=1;if(i)for(c=0;c!=i.length;++c){for(u=i[c],s=0;s!=u.length&&61!==u.charCodeAt(s);++s);for(f=u.slice(0,s).trim();32==u.charCodeAt(s+1);)++s;for(h=34==(a=u.charCodeAt(s+1))||39==a?1:0,l=u.slice(s+1+h,u.length-h),o=0;o!=f.length&&58!==f.charCodeAt(o);++o);if(o===f.length)f.indexOf("_")>0&&(f=f.slice(0,f.indexOf("_"))),n[f]=l,r||(n[f.toLowerCase()]=l);else{var d=(5===o&&"xmlns"===f.slice(0,5)?"xmlns":"")+f.slice(o+1);if(n[d]&&"ext"==f.slice(o-3,o))continue;n[d]=l,r||(n[d.toLowerCase()]=l)}}return n}function wt(e){return e.replace(vt,"<$1")}var yt={"&quot;":'"',"&apos;":"'","&gt;":">","&lt;":"<","&amp;":"&"},kt=De(yt),Tt=function(){var e=/&(?:quot|apos|gt|lt|amp|#x?([\da-fA-F]+));/gi,t=/_x([\da-fA-F]{4})_/gi;return function r(n){var a=n+"",s=a.indexOf("<![CDATA[");if(-1==s)return a.replace(e,(function(e,t){return yt[e]||String.fromCharCode(parseInt(t,e.indexOf("x")>-1?16:10))||e})).replace(t,(function(e,t){return String.fromCharCode(parseInt(t,16))}));var i=a.indexOf("]]>");return r(a.slice(0,s))+a.slice(s+9,i)+r(a.slice(i+3))}}(),St=/[&<>'"]/g,Et=/[\u0000-\u0008\u000b-\u001f]/g;function xt(e){return(e+"").replace(St,(function(e){return kt[e]})).replace(Et,(function(e){return"_x"+("000"+e.charCodeAt(0).toString(16)).slice(-4)+"_"}))}function _t(e){return xt(e).replace(/ /g,"_x0020_")}var Ct=/[\u0000-\u001f]/g;function At(e){return(e+"").replace(St,(function(e){return kt[e]})).replace(/\n/g,"<br/>").replace(Ct,(function(e){return"&#x"+("000"+e.charCodeAt(0).toString(16)).slice(-4)+";"}))}var Ot=function(){var e=/&#(\d+);/g;function t(e,t){return String.fromCharCode(parseInt(t,10))}return function(r){return r.replace(e,t)}}();function Rt(e){switch(e){case 1:case!0:case"1":case"true":case"TRUE":return!0;default:return!1}}function Nt(e){for(var t="",r=0,n=0,a=0,s=0,i=0,o=0;r<e.length;)(n=e.charCodeAt(r++))<128?t+=String.fromCharCode(n):(a=e.charCodeAt(r++),n>191&&n<224?(i=(31&n)<<6,i|=63&a,t+=String.fromCharCode(i)):(s=e.charCodeAt(r++),n<240?t+=String.fromCharCode((15&n)<<12|(63&a)<<6|63&s):(o=((7&n)<<18|(63&a)<<12|(63&s)<<6|63&(i=e.charCodeAt(r++)))-65536,t+=String.fromCharCode(55296+(o>>>10&1023)),t+=String.fromCharCode(56320+(1023&o)))));return t}function It(e){var t,r,n,a=S(2*e.length),s=1,i=0,o=0;for(r=0;r<e.length;r+=s)s=1,(n=e.charCodeAt(r))<128?t=n:n<224?(t=64*(31&n)+(63&e.charCodeAt(r+1)),s=2):n<240?(t=4096*(15&n)+64*(63&e.charCodeAt(r+1))+(63&e.charCodeAt(r+2)),s=3):(s=4,t=262144*(7&n)+4096*(63&e.charCodeAt(r+1))+64*(63&e.charCodeAt(r+2))+(63&e.charCodeAt(r+3)),o=55296+((t-=65536)>>>10&1023),t=56320+(1023&t)),0!==o&&(a[i++]=255&o,a[i++]=o>>>8,o=0),a[i++]=t%256,a[i++]=t>>>8;return a.slice(0,i).toString("ucs2")}function Pt(e){return T(e,"binary").toString("utf8")}var Dt="foo bar bazâð£",Ft=k&&(Pt(Dt)==Nt(Dt)&&Pt||It(Dt)==Nt(Dt)&&It)||Nt,Lt=k?function(e){return T(e,"utf8").toString("binary")}:function(e){for(var t=[],r=0,n=0,a=0;r<e.length;)switch(n=e.charCodeAt(r++),!0){case n<128:t.push(String.fromCharCode(n));break;case n<2048:t.push(String.fromCharCode(192+(n>>6))),t.push(String.fromCharCode(128+(63&n)));break;case n>=55296&&n<57344:n-=55296,a=e.charCodeAt(r++)-56320+(n<<10),t.push(String.fromCharCode(240+(a>>18&7))),t.push(String.fromCharCode(144+(a>>12&63))),t.push(String.fromCharCode(128+(a>>6&63))),t.push(String.fromCharCode(128+(63&a)));break;default:t.push(String.fromCharCode(224+(n>>12))),t.push(String.fromCharCode(128+(n>>6&63))),t.push(String.fromCharCode(128+(63&n)))}return t.join("")},Mt=function(){var e={};return function(t,r){var n=t+"|"+(r||"");return e[n]?e[n]:e[n]=new RegExp("<(?:\\w+:)?"+t+'(?: xml:space="preserve")?(?:[^>]*)>([\\s\\S]*?)</(?:\\w+:)?'+t+">",r||"")}}(),Ut=function(){var e=[["nbsp"," "],["middot","·"],["quot",'"'],["apos","'"],["gt",">"],["lt","<"],["amp","&"]].map((function(e){return[new RegExp("&"+e[0]+";","ig"),e[1]]}));return function(t){for(var r=t.replace(/^[\t\n\r ]+/,"").replace(/[\t\n\r ]+$/,"").replace(/>\s+/g,">").replace(/\s+</g,"<").replace(/[\t\n\r ]+/g," ").replace(/<\s*[bB][rR]\s*\/?>/g,"\n").replace(/<[^>]*>/g,""),n=0;n<e.length;++n)r=r.replace(e[n][0],e[n][1]);return r}}(),Bt=function(){var e={};return function(t){return void 0!==e[t]?e[t]:e[t]=new RegExp("<(?:vt:)?"+t+">([\\s\\S]*?)</(?:vt:)?"+t+">","g")}}(),zt=/<\/?(?:vt:)?variant>/g,Wt=/<(?:vt:)([^>]*)>([\s\S]*)</;function Ht(e,t){var r=bt(e),n=e.match(Bt(r.baseType))||[],a=[];if(n.length!=r.size){if(t.WTF)throw new Error("unexpected vector length "+n.length+" != "+r.size);return a}return n.forEach((function(e){var t=e.replace(zt,"").match(Wt);t&&a.push({v:Ft(t[2]),t:t[1]})})),a}var jt=/(^\s|\s$|\n)/;function Vt(e,t){return"<"+e+(t.match(jt)?' xml:space="preserve"':"")+">"+t+"</"+e+">"}function $t(e){return Ie(e).map((function(t){return" "+t+'="'+e[t]+'"'})).join("")}function Gt(e,t,r){return"<"+e+(null!=r?$t(r):"")+(null!=t?(t.match(jt)?' xml:space="preserve"':"")+">"+t+"</"+e:"/")+">"}function Xt(e,t){try{return e.toISOString().replace(/\.\d*/,"")}catch(e){if(t)throw e}return""}function Yt(e){if(k&&Buffer.isBuffer(e))return e.toString("utf8");if("string"==typeof e)return e;if("undefined"!=typeof Uint8Array&&e instanceof Uint8Array)return Ft(C(A(e)));throw new Error("Bad input format: expected Buffer or string")}var Kt=/<(\/?)([^\s?><!\/:]*:|)([^\s?<>:\/]+)(?:[\s?:\/][^>]*)?>/gm,qt="http://schemas.openxmlformats.org/package/2006/content-types",Qt="http://schemas.microsoft.com/office/spreadsheetml/2018/threadedcomments",Jt="http://schemas.openxmlformats.org/officeDocument/2006/relationships",Zt="http://schemas.openxmlformats.org/officeDocument/2006/docPropsVTypes",er="http://www.w3.org/2001/XMLSchema-instance",tr=["http://schemas.openxmlformats.org/spreadsheetml/2006/main","http://purl.oclc.org/ooxml/spreadsheetml/main","http://schemas.microsoft.com/office/excel/2006/main","http://schemas.microsoft.com/office/excel/2006/2"],rr="urn:schemas-microsoft-com:office:office",nr="urn:schemas-microsoft-com:office:excel",ar="urn:schemas-microsoft-com:office:spreadsheet",sr=function(e){for(var t=[],r=0;r<e[0].length;++r)if(e[0][r])for(var n=0,a=e[0][r].length;n<a;n+=10240)t.push.apply(t,e[0][r].slice(n,n+10240));return t},ir=k?function(e){return e[0].length>0&&Buffer.isBuffer(e[0][0])?Buffer.concat(e[0].map((function(e){return Buffer.isBuffer(e)?e:T(e)}))):sr(e)}:sr,or=function(e,t,r){for(var n=[],a=t;a<r;a+=2)n.push(String.fromCharCode(Ar(e,a)));return n.join("").replace(R,"")},lr=k?function(e,t,r){return Buffer.isBuffer(e)?e.toString("utf16le",t,r).replace(R,""):or(e,t,r)}:or,cr=function(e,t,r){for(var n=[],a=t;a<t+r;++a)n.push(("0"+e[a].toString(16)).slice(-2));return n.join("")},fr=k?function(e,t,r){return Buffer.isBuffer(e)?e.toString("hex",t,t+r):cr(e,t,r)}:cr,ur=function(e,t,r){for(var n=[],a=t;a<r;a++)n.push(String.fromCharCode(Cr(e,a)));return n.join("")},hr=k?function(e,t,r){return Buffer.isBuffer(e)?e.toString("utf8",t,r):ur(e,t,r)}:ur,dr=function(e,t){var r=Rr(e,t);return r>0?hr(e,t+4,t+4+r-1):""},pr=dr,mr=function(e,t){var r=Rr(e,t);return r>0?hr(e,t+4,t+4+r-1):""},gr=mr,vr=function(e,t){var r=2*Rr(e,t);return r>0?hr(e,t+4,t+4+r-1):""},br=vr,wr=function(e,t){var r=Rr(e,t);return r>0?lr(e,t+4,t+4+r):""},yr=wr,kr=function(e,t){var r=Rr(e,t);return r>0?hr(e,t+4,t+4+r):""},Tr=kr,Sr=function(e,t){return function(e,t){for(var r=1-2*(e[t+7]>>>7),n=((127&e[t+7])<<4)+(e[t+6]>>>4&15),a=15&e[t+6],s=5;s>=0;--s)a=256*a+e[t+s];return 2047==n?0==a?r*(1/0):NaN:(0==n?n=-1022:(n-=1023,a+=Math.pow(2,52)),r*Math.pow(2,n-52)*a)}(e,t)},Er=Sr,xr=function(e){return Array.isArray(e)||"undefined"!=typeof Uint8Array&&e instanceof Uint8Array};function _r(){lr=function(e,t,r){return d.utils.decode(1200,e.slice(t,r)).replace(R,"")},hr=function(e,t,r){return d.utils.decode(65001,e.slice(t,r))},pr=function(e,t){var r=Rr(e,t);return r>0?d.utils.decode(s,e.slice(t+4,t+4+r-1)):""},gr=function(e,t){var r=Rr(e,t);return r>0?d.utils.decode(a,e.slice(t+4,t+4+r-1)):""},br=function(e,t){var r=2*Rr(e,t);return r>0?d.utils.decode(1200,e.slice(t+4,t+4+r-1)):""},yr=function(e,t){var r=Rr(e,t);return r>0?d.utils.decode(1200,e.slice(t+4,t+4+r)):""},Tr=function(e,t){var r=Rr(e,t);return r>0?d.utils.decode(65001,e.slice(t+4,t+4+r)):""}}k&&(pr=function(e,t){if(!Buffer.isBuffer(e))return dr(e,t);var r=e.readUInt32LE(t);return r>0?e.toString("utf8",t+4,t+4+r-1):""},gr=function(e,t){if(!Buffer.isBuffer(e))return mr(e,t);var r=e.readUInt32LE(t);return r>0?e.toString("utf8",t+4,t+4+r-1):""},br=function(e,t){if(!Buffer.isBuffer(e))return vr(e,t);var r=2*e.readUInt32LE(t);return e.toString("utf16le",t+4,t+4+r-1)},yr=function(e,t){if(!Buffer.isBuffer(e))return wr(e,t);var r=e.readUInt32LE(t);return e.toString("utf16le",t+4,t+4+r)},Tr=function(e,t){if(!Buffer.isBuffer(e))return kr(e,t);var r=e.readUInt32LE(t);return e.toString("utf8",t+4,t+4+r)},Er=function(e,t){return Buffer.isBuffer(e)?e.readDoubleLE(t):Sr(e,t)},xr=function(e){return Buffer.isBuffer(e)||Array.isArray(e)||"undefined"!=typeof Uint8Array&&e instanceof Uint8Array}),void 0!==d&&_r();var Cr=function(e,t){return e[t]},Ar=function(e,t){return 256*e[t+1]+e[t]},Or=function(e,t){var r=256*e[t+1]+e[t];return r<32768?r:-1*(65535-r+1)},Rr=function(e,t){return e[t+3]*(1<<24)+(e[t+2]<<16)+(e[t+1]<<8)+e[t]},Nr=function(e,t){return e[t+3]<<24|e[t+2]<<16|e[t+1]<<8|e[t]},Ir=function(e,t){return e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3]};function Pr(e,t){var r,n,s,i,o,l,c="",f=[];switch(t){case"dbcs":if(l=this.l,k&&Buffer.isBuffer(this))c=this.slice(this.l,this.l+2*e).toString("utf16le");else for(o=0;o<e;++o)c+=String.fromCharCode(Ar(this,l)),l+=2;e*=2;break;case"utf8":c=hr(this,this.l,this.l+e);break;case"utf16le":e*=2,c=lr(this,this.l,this.l+e);break;case"wstr":if(void 0===d)return Pr.call(this,e,"dbcs");c=d.utils.decode(a,this.slice(this.l,this.l+2*e)),e*=2;break;case"lpstr-ansi":c=pr(this,this.l),e=4+Rr(this,this.l);break;case"lpstr-cp":c=gr(this,this.l),e=4+Rr(this,this.l);break;case"lpwstr":c=br(this,this.l),e=4+2*Rr(this,this.l);break;case"lpp4":e=4+Rr(this,this.l),c=yr(this,this.l),2&e&&(e+=2);break;case"8lpp4":e=4+Rr(this,this.l),c=Tr(this,this.l),3&e&&(e+=4-(3&e));break;case"cstr":for(e=0,c="";0!==(s=Cr(this,this.l+e++));)f.push(m(s));c=f.join("");break;case"_wstr":for(e=0,c="";0!==(s=Ar(this,this.l+e));)f.push(m(s)),e+=2;e+=2,c=f.join("");break;case"dbcs-cont":for(c="",l=this.l,o=0;o<e;++o){if(this.lens&&-1!==this.lens.indexOf(l))return s=Cr(this,l),this.l=l+1,i=Pr.call(this,e-o,s?"dbcs-cont":"sbcs-cont"),f.join("")+i;f.push(m(Ar(this,l))),l+=2}c=f.join(""),e*=2;break;case"cpstr":if(void 0!==d){c=d.utils.decode(a,this.slice(this.l,this.l+e));break}case"sbcs-cont":for(c="",l=this.l,o=0;o!=e;++o){if(this.lens&&-1!==this.lens.indexOf(l))return s=Cr(this,l),this.l=l+1,i=Pr.call(this,e-o,s?"dbcs-cont":"sbcs-cont"),f.join("")+i;f.push(m(Cr(this,l))),l+=1}c=f.join("");break;default:switch(e){case 1:return r=Cr(this,this.l),this.l++,r;case 2:return r=("i"===t?Or:Ar)(this,this.l),this.l+=2,r;case 4:case-4:return"i"===t||0==(128&this[this.l+3])?(r=(e>0?Nr:Ir)(this,this.l),this.l+=4,r):(n=Rr(this,this.l),this.l+=4,n);case 8:case-8:if("f"===t)return n=8==e?Er(this,this.l):Er([this[this.l+7],this[this.l+6],this[this.l+5],this[this.l+4],this[this.l+3],this[this.l+2],this[this.l+1],this[this.l+0]],0),this.l+=8,n;e=8;case 16:c=fr(this,this.l,e)}}return this.l+=e,c}var Dr=function(e,t,r){e[r]=255&t,e[r+1]=t>>>8&255};function Fr(e,t,r){var n=0,a=0;if("dbcs"===r){for(a=0;a!=t.length;++a)Dr(this,t.charCodeAt(a),this.l+2*a);n=2*t.length}else if("sbcs"===r){if(void 0!==d&&874==s)for(a=0;a!=t.length;++a){var i=d.utils.encode(s,t.charAt(a));this[this.l+a]=i[0]}else for(t=t.replace(/[^\x00-\x7F]/g,"_"),a=0;a!=t.length;++a)this[this.l+a]=255&t.charCodeAt(a);n=t.length}else{if("hex"===r){for(;a<e;++a)this[this.l++]=parseInt(t.slice(2*a,2*a+2),16)||0;return this}if("utf16le"===r){var o=Math.min(this.l+e,this.length);for(a=0;a<Math.min(t.length,e);++a){var l=t.charCodeAt(a);this[this.l++]=255&l,this[this.l++]=l>>8}for(;this.l<o;)this[this.l++]=0;return this}switch(e){case 1:n=1,this[this.l]=255&t;break;case 2:n=2,this[this.l]=255&t,t>>>=8,this[this.l+1]=255&t;break;case 3:n=3,this[this.l]=255&t,t>>>=8,this[this.l+1]=255&t,t>>>=8,this[this.l+2]=255&t;break;case 4:n=4,function(e,t,r){e[r]=255&t,e[r+1]=t>>>8&255,e[r+2]=t>>>16&255,e[r+3]=t>>>24&255}(this,t,this.l);break;case 8:if(n=8,"f"===r){!function(e,t,r){var n=(t<0||1/t==-1/0?1:0)<<7,a=0,s=0,i=n?-t:t;isFinite(i)?0==i?a=s=0:(a=Math.floor(Math.log(i)/Math.LN2),s=i*Math.pow(2,52-a),a<=-1023&&(!isFinite(s)||s<Math.pow(2,52))?a=-1022:(s-=Math.pow(2,52),a+=1023)):(a=2047,s=isNaN(t)?26985:0);for(var o=0;o<=5;++o,s/=256)e[r+o]=255&s;e[r+6]=(15&a)<<4|15&s,e[r+7]=a>>4|n}(this,t,this.l);break}case 16:break;case-4:n=4,function(e,t,r){e[r]=255&t,e[r+1]=t>>8&255,e[r+2]=t>>16&255,e[r+3]=t>>24&255}(this,t,this.l)}}return this.l+=n,this}function Lr(e,t){var r=fr(this,this.l,e.length>>1);if(r!==e)throw new Error(t+"Expected "+e+" saw "+r);this.l+=e.length>>1}function Mr(e,t){e.l=t,e.read_shift=Pr,e.chk=Lr,e.write_shift=Fr}function Ur(e,t){e.l+=t}function Br(e){var t=S(e);return Mr(t,0),t}function zr(e,t,r){if(e){var n,a,s;Mr(e,e.l||0);for(var i=e.length,o=0,l=0;e.l<i;){128&(o=e.read_shift(1))&&(o=(127&o)+((127&e.read_shift(1))<<7));var c=lc[o]||lc[65535];for(s=127&(n=e.read_shift(1)),a=1;a<4&&128&n;++a)s+=(127&(n=e.read_shift(1)))<<7*a;l=e.l+s;var f=c.f&&c.f(e,s,r);if(e.l=l,t(f,c,o))return}}}function Wr(){var e=[],t=k?256:2048,r=function(e){var t=Br(e);return Mr(t,0),t},n=r(t),a=function(){n&&(n.length>n.l&&((n=n.slice(0,n.l)).l=n.length),n.length>0&&e.push(n),n=null)},s=function(e){return n&&e<n.length-n.l?n:(a(),n=r(Math.max(e+1,t)))};return{next:s,push:function(e){a(),null==(n=e).l&&(n.l=n.length),s(t)},end:function(){return a(),O(e)},_bufs:e}}function Hr(e,t,r,n){var a,s=+t;if(!isNaN(s)){n||(n=lc[s].p||(r||[]).length||0),a=1+(s>=128?1:0)+1,n>=128&&++a,n>=16384&&++a,n>=2097152&&++a;var i=e.next(a);s<=127?i.write_shift(1,s):(i.write_shift(1,128+(127&s)),i.write_shift(1,s>>7));for(var o=0;4!=o;++o){if(!(n>=128)){i.write_shift(1,n);break}i.write_shift(1,128+(127&n)),n>>=7}n>0&&xr(r)&&e.push(r)}}function jr(e,t,r){var n=Ye(e);if(t.s?(n.cRel&&(n.c+=t.s.c),n.rRel&&(n.r+=t.s.r)):(n.cRel&&(n.c+=t.c),n.rRel&&(n.r+=t.r)),!r||r.biff<12){for(;n.c>=256;)n.c-=256;for(;n.r>=65536;)n.r-=65536}return n}function Vr(e,t,r){var n=Ye(e);return n.s=jr(n.s,t.s,r),n.e=jr(n.e,t.s,r),n}function $r(e,t){if(e.cRel&&e.c<0)for(e=Ye(e);e.c<0;)e.c+=t>8?16384:256;if(e.rRel&&e.r<0)for(e=Ye(e);e.r<0;)e.r+=t>8?1048576:t>5?65536:16384;var r=Jr(e);return e.cRel||null==e.cRel||(r=r.replace(/^([A-Z])/,"$$$1")),e.rRel||null==e.rRel||(r=r.replace(/([A-Z]|^)(\d+)$/,"$1$$$2")),r}function Gr(e,t){return 0!=e.s.r||e.s.rRel||e.e.r!=(t.biff>=12?1048575:t.biff>=8?65536:16384)||e.e.rRel?0!=e.s.c||e.s.cRel||e.e.c!=(t.biff>=12?16383:255)||e.e.cRel?$r(e.s,t.biff)+":"+$r(e.e,t.biff):(e.s.rRel?"":"$")+Yr(e.s.r)+":"+(e.e.rRel?"":"$")+Yr(e.e.r):(e.s.cRel?"":"$")+qr(e.s.c)+":"+(e.e.cRel?"":"$")+qr(e.e.c)}function Xr(e){return parseInt(e.replace(/\$(\d+)$/,"$1"),10)-1}function Yr(e){return""+(e+1)}function Kr(e){for(var t=e.replace(/^\$([A-Z])/,"$1"),r=0,n=0;n!==t.length;++n)r=26*r+t.charCodeAt(n)-64;return r-1}function qr(e){if(e<0)throw new Error("invalid column "+e);var t="";for(++e;e;e=Math.floor((e-1)/26))t=String.fromCharCode((e-1)%26+65)+t;return t}function Qr(e){for(var t=0,r=0,n=0;n<e.length;++n){var a=e.charCodeAt(n);a>=48&&a<=57?t=10*t+(a-48):a>=65&&a<=90&&(r=26*r+(a-64))}return{c:r-1,r:t-1}}function Jr(e){for(var t=e.c+1,r="";t;t=(t-1)/26|0)r=String.fromCharCode((t-1)%26+65)+r;return r+(e.r+1)}function Zr(e){var t=e.indexOf(":");return-1==t?{s:Qr(e),e:Qr(e)}:{s:Qr(e.slice(0,t)),e:Qr(e.slice(t+1))}}function en(e,t){return void 0===t||"number"==typeof t?en(e.s,e.e):("string"!=typeof e&&(e=Jr(e)),"string"!=typeof t&&(t=Jr(t)),e==t?e:e+":"+t)}function tn(e){var t={s:{c:0,r:0},e:{c:0,r:0}},r=0,n=0,a=0,s=e.length;for(r=0;n<s&&!((a=e.charCodeAt(n)-64)<1||a>26);++n)r=26*r+a;for(t.s.c=--r,r=0;n<s&&!((a=e.charCodeAt(n)-48)<0||a>9);++n)r=10*r+a;if(t.s.r=--r,n===s||10!=a)return t.e.c=t.s.c,t.e.r=t.s.r,t;for(++n,r=0;n!=s&&!((a=e.charCodeAt(n)-64)<1||a>26);++n)r=26*r+a;for(t.e.c=--r,r=0;n!=s&&!((a=e.charCodeAt(n)-48)<0||a>9);++n)r=10*r+a;return t.e.r=--r,t}function rn(e,t,r){return null==e||null==e.t||"z"==e.t?"":void 0!==e.w?e.w:("d"==e.t&&!e.z&&r&&r.dateNF&&(e.z=r.dateNF),"e"==e.t?Wn[e.v]||e.v:function(e,t){var r="d"==e.t&&t instanceof Date;if(null!=e.z)try{return e.w=we(e.z,r?Me(t):t)}catch(e){}try{return e.w=we((e.XF||{}).numFmtId||(r?14:0),r?Me(t):t)}catch(e){return""+t}}(e,null==t?e.v:t))}function nn(e,t){var r=t&&t.sheet?t.sheet:"Sheet1",n={};return n[r]=e,{SheetNames:[r],Sheets:n}}function an(e,t,r){var n=r||{},a=e?Array.isArray(e):n.dense,s=e||(a?[]:{}),i=0,o=0;if(s&&null!=n.origin){if("number"==typeof n.origin)i=n.origin;else{var l="string"==typeof n.origin?Qr(n.origin):n.origin;i=l.r,o=l.c}s["!ref"]||(s["!ref"]="A1:A1")}var c={s:{c:1e7,r:1e7},e:{c:0,r:0}};if(s["!ref"]){var f=tn(s["!ref"]);c.s.c=f.s.c,c.s.r=f.s.r,c.e.c=Math.max(c.e.c,f.e.c),c.e.r=Math.max(c.e.r,f.e.r),-1==i&&(c.e.r=i=f.e.r+1)}for(var u=0;u!=t.length;++u)if(t[u]){if(!Array.isArray(t[u]))throw new Error("aoa_to_sheet expects an array of arrays");for(var h=0;h!=t[u].length;++h)if(void 0!==t[u][h]){var d={v:t[u][h]},p=i+u,m=o+h;if(c.s.r>p&&(c.s.r=p),c.s.c>m&&(c.s.c=m),c.e.r<p&&(c.e.r=p),c.e.c<m&&(c.e.c=m),!t[u][h]||"object"!=typeof t[u][h]||Array.isArray(t[u][h])||t[u][h]instanceof Date)if(Array.isArray(d.v)&&(d.f=t[u][h][1],d.v=d.v[0]),null===d.v)if(d.f)d.t="n";else if(n.nullError)d.t="e",d.v=0;else{if(!n.sheetStubs)continue;d.t="z"}else"number"==typeof d.v?d.t="n":"boolean"==typeof d.v?d.t="b":d.v instanceof Date?(d.z=n.dateNF||W[14],n.cellDates?(d.t="d",d.w=we(d.z,Me(d.v))):(d.t="n",d.v=Me(d.v),d.w=we(d.z,d.v))):d.t="s";else d=t[u][h];if(a)s[p]||(s[p]=[]),s[p][m]&&s[p][m].z&&(d.z=s[p][m].z),s[p][m]=d;else{var g=Jr({c:m,r:p});s[g]&&s[g].z&&(d.z=s[g].z),s[g]=d}}}return c.s.c<1e7&&(s["!ref"]=en(c)),s}function sn(e,t){return an(null,e,t)}function on(e,t){return t||(t=Br(4)),t.write_shift(4,e),t}function ln(e){var t=e.read_shift(4);return 0===t?"":e.read_shift(t,"dbcs")}function cn(e,t){var r=!1;return null==t&&(r=!0,t=Br(4+2*e.length)),t.write_shift(4,e.length),e.length>0&&t.write_shift(0,e,"dbcs"),r?t.slice(0,t.l):t}function fn(e){return{ich:e.read_shift(2),ifnt:e.read_shift(2)}}function un(e,t){var r=e.l,n=e.read_shift(1),a=ln(e),s=[],i={t:a,h:a};if(0!=(1&n)){for(var o=e.read_shift(4),l=0;l!=o;++l)s.push(fn(e));i.r=s}else i.r=[{ich:0,ifnt:0}];return e.l=r+t,i}var hn=un;function dn(e){var t=e.read_shift(4),r=e.read_shift(2);return r+=e.read_shift(1)<<16,e.l++,{c:t,iStyleRef:r}}function pn(e,t){return null==t&&(t=Br(8)),t.write_shift(-4,e.c),t.write_shift(3,e.iStyleRef||e.s),t.write_shift(1,0),t}function mn(e){var t=e.read_shift(2);return t+=e.read_shift(1)<<16,e.l++,{c:-1,iStyleRef:t}}function gn(e,t){return null==t&&(t=Br(4)),t.write_shift(3,e.iStyleRef||e.s),t.write_shift(1,0),t}var vn=ln,bn=cn;function wn(e){var t=e.read_shift(4);return 0===t||4294967295===t?"":e.read_shift(t,"dbcs")}function yn(e,t){var r=!1;return null==t&&(r=!0,t=Br(127)),t.write_shift(4,e.length>0?e.length:4294967295),e.length>0&&t.write_shift(0,e,"dbcs"),r?t.slice(0,t.l):t}var kn=ln,Tn=wn,Sn=yn;function En(e){var t=e.slice(e.l,e.l+4),r=1&t[0],n=2&t[0];e.l+=4;var a=0===n?Er([0,0,0,0,252&t[0],t[1],t[2],t[3]],0):Nr(t,0)>>2;return r?a/100:a}function xn(e,t){null==t&&(t=Br(4));var r=0,n=0,a=100*e;if(e==(0|e)&&e>=-(1<<29)&&e<1<<29?n=1:a==(0|a)&&a>=-(1<<29)&&a<1<<29&&(n=1,r=1),!n)throw new Error("unsupported RkNumber "+e);t.write_shift(-4,((r?a:e)<<2)+(r+2))}function _n(e){var t={s:{},e:{}};return t.s.r=e.read_shift(4),t.e.r=e.read_shift(4),t.s.c=e.read_shift(4),t.e.c=e.read_shift(4),t}var Cn=_n,An=function(e,t){return t||(t=Br(16)),t.write_shift(4,e.s.r),t.write_shift(4,e.e.r),t.write_shift(4,e.s.c),t.write_shift(4,e.e.c),t};function On(e){if(e.length-e.l<8)throw"XLS Xnum Buffer underflow";return e.read_shift(8,"f")}function Rn(e,t){return(t||Br(8)).write_shift(8,e,"f")}function Nn(e,t){if(t||(t=Br(8)),!e||e.auto)return t.write_shift(4,0),t.write_shift(4,0),t;null!=e.index?(t.write_shift(1,2),t.write_shift(1,e.index)):null!=e.theme?(t.write_shift(1,6),t.write_shift(1,e.theme)):(t.write_shift(1,5),t.write_shift(1,0));var r=e.tint||0;if(r>0?r*=32767:r<0&&(r*=32768),t.write_shift(2,r),e.rgb&&null==e.theme){var n=e.rgb||"FFFFFF";"number"==typeof n&&(n=("000000"+n.toString(16)).slice(-6)),t.write_shift(1,parseInt(n.slice(0,2),16)),t.write_shift(1,parseInt(n.slice(2,4),16)),t.write_shift(1,parseInt(n.slice(4,6),16)),t.write_shift(1,255)}else t.write_shift(2,0),t.write_shift(1,0),t.write_shift(1,0);return t}function In(e,t){var r=e.read_shift(4);switch(r){case 0:return"";case 4294967295:case 4294967294:return{2:"BITMAP",3:"METAFILEPICT",8:"DIB",14:"ENHMETAFILE"}[e.read_shift(4)]||""}if(r>400)throw new Error("Unsupported Clipboard: "+r.toString(16));return e.l-=4,e.read_shift(0,1==t?"lpstr":"lpwstr")}var Pn=80,Dn=[Pn,81],Fn={1:{n:"CodePage",t:2},2:{n:"Category",t:Pn},3:{n:"PresentationFormat",t:Pn},4:{n:"ByteCount",t:3},5:{n:"LineCount",t:3},6:{n:"ParagraphCount",t:3},7:{n:"SlideCount",t:3},8:{n:"NoteCount",t:3},9:{n:"HiddenCount",t:3},10:{n:"MultimediaClipCount",t:3},11:{n:"ScaleCrop",t:11},12:{n:"HeadingPairs",t:4108},13:{n:"TitlesOfParts",t:4126},14:{n:"Manager",t:Pn},15:{n:"Company",t:Pn},16:{n:"LinksUpToDate",t:11},17:{n:"CharacterCount",t:3},19:{n:"SharedDoc",t:11},22:{n:"HyperlinksChanged",t:11},23:{n:"AppVersion",t:3,p:"version"},24:{n:"DigSig",t:65},26:{n:"ContentType",t:Pn},27:{n:"ContentStatus",t:Pn},28:{n:"Language",t:Pn},29:{n:"Version",t:Pn},255:{},2147483648:{n:"Locale",t:19},2147483651:{n:"Behavior",t:19},1919054434:{}},Ln={1:{n:"CodePage",t:2},2:{n:"Title",t:Pn},3:{n:"Subject",t:Pn},4:{n:"Author",t:Pn},5:{n:"Keywords",t:Pn},6:{n:"Comments",t:Pn},7:{n:"Template",t:Pn},8:{n:"LastAuthor",t:Pn},9:{n:"RevNumber",t:Pn},10:{n:"EditTime",t:64},11:{n:"LastPrinted",t:64},12:{n:"CreatedDate",t:64},13:{n:"ModifiedDate",t:64},14:{n:"PageCount",t:3},15:{n:"WordCount",t:3},16:{n:"CharCount",t:3},17:{n:"Thumbnail",t:71},18:{n:"Application",t:Pn},19:{n:"DocSecurity",t:3},255:{},2147483648:{n:"Locale",t:19},2147483651:{n:"Behavior",t:19},1919054434:{}},Mn={1:"US",2:"CA",3:"",7:"RU",20:"EG",30:"GR",31:"NL",32:"BE",33:"FR",34:"ES",36:"HU",39:"IT",41:"CH",43:"AT",44:"GB",45:"DK",46:"SE",47:"NO",48:"PL",49:"DE",52:"MX",55:"BR",61:"AU",64:"NZ",66:"TH",81:"JP",82:"KR",84:"VN",86:"CN",90:"TR",105:"JS",213:"DZ",216:"MA",218:"LY",351:"PT",354:"IS",358:"FI",420:"CZ",886:"TW",961:"LB",962:"JO",963:"SY",964:"IQ",965:"KW",966:"SA",971:"AE",972:"IL",974:"QA",981:"IR",65535:"US"},Un=[null,"solid","mediumGray","darkGray","lightGray","darkHorizontal","darkVertical","darkDown","darkUp","darkGrid","darkTrellis","lightHorizontal","lightVertical","lightDown","lightUp","lightGrid","lightTrellis","gray125","gray0625"];function Bn(e){return e.map((function(e){return[e>>16&255,e>>8&255,255&e]}))}var zn=Ye(Bn([0,16777215,16711680,65280,255,16776960,16711935,65535,0,16777215,16711680,65280,255,16776960,16711935,65535,8388608,32768,128,8421376,8388736,32896,12632256,8421504,10066431,10040166,16777164,13434879,6684774,16744576,26316,13421823,128,16711935,16776960,65535,8388736,8388608,32896,255,52479,13434879,13434828,16777113,10079487,16751052,13408767,16764057,3368703,3394764,10079232,16763904,16750848,16737792,6710937,9868950,13158,3381606,13056,3355392,10040064,10040166,3355545,3355443,16777215,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])),Wn={0:"#NULL!",7:"#DIV/0!",15:"#VALUE!",23:"#REF!",29:"#NAME?",36:"#NUM!",42:"#N/A",43:"#GETTING_DATA",255:"#WTF?"},Hn={"#NULL!":0,"#DIV/0!":7,"#VALUE!":15,"#REF!":23,"#NAME?":29,"#NUM!":36,"#N/A":42,"#GETTING_DATA":43,"#WTF?":255},jn={"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml":"workbooks","application/vnd.ms-excel.sheet.macroEnabled.main+xml":"workbooks","application/vnd.ms-excel.sheet.binary.macroEnabled.main":"workbooks","application/vnd.ms-excel.addin.macroEnabled.main+xml":"workbooks","application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml":"workbooks","application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml":"sheets","application/vnd.ms-excel.worksheet":"sheets","application/vnd.ms-excel.binIndexWs":"TODO","application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml":"charts","application/vnd.ms-excel.chartsheet":"charts","application/vnd.ms-excel.macrosheet+xml":"macros","application/vnd.ms-excel.macrosheet":"macros","application/vnd.ms-excel.intlmacrosheet":"TODO","application/vnd.ms-excel.binIndexMs":"TODO","application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml":"dialogs","application/vnd.ms-excel.dialogsheet":"dialogs","application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml":"strs","application/vnd.ms-excel.sharedStrings":"strs","application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml":"styles","application/vnd.ms-excel.styles":"styles","application/vnd.openxmlformats-package.core-properties+xml":"coreprops","application/vnd.openxmlformats-officedocument.custom-properties+xml":"custprops","application/vnd.openxmlformats-officedocument.extended-properties+xml":"extprops","application/vnd.openxmlformats-officedocument.customXmlProperties+xml":"TODO","application/vnd.openxmlformats-officedocument.spreadsheetml.customProperty":"TODO","application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml":"comments","application/vnd.ms-excel.comments":"comments","application/vnd.ms-excel.threadedcomments+xml":"threadedcomments","application/vnd.ms-excel.person+xml":"people","application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml":"metadata","application/vnd.ms-excel.sheetMetadata":"metadata","application/vnd.ms-excel.pivotTable":"TODO","application/vnd.openxmlformats-officedocument.spreadsheetml.pivotTable+xml":"TODO","application/vnd.openxmlformats-officedocument.drawingml.chart+xml":"TODO","application/vnd.ms-office.chartcolorstyle+xml":"TODO","application/vnd.ms-office.chartstyle+xml":"TODO","application/vnd.ms-office.chartex+xml":"TODO","application/vnd.ms-excel.calcChain":"calcchains","application/vnd.openxmlformats-officedocument.spreadsheetml.calcChain+xml":"calcchains","application/vnd.openxmlformats-officedocument.spreadsheetml.printerSettings":"TODO","application/vnd.ms-office.activeX":"TODO","application/vnd.ms-office.activeX+xml":"TODO","application/vnd.ms-excel.attachedToolbars":"TODO","application/vnd.ms-excel.connections":"TODO","application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml":"TODO","application/vnd.ms-excel.externalLink":"links","application/vnd.openxmlformats-officedocument.spreadsheetml.externalLink+xml":"links","application/vnd.ms-excel.pivotCacheDefinition":"TODO","application/vnd.ms-excel.pivotCacheRecords":"TODO","application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheDefinition+xml":"TODO","application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheRecords+xml":"TODO","application/vnd.ms-excel.queryTable":"TODO","application/vnd.openxmlformats-officedocument.spreadsheetml.queryTable+xml":"TODO","application/vnd.ms-excel.userNames":"TODO","application/vnd.ms-excel.revisionHeaders":"TODO","application/vnd.ms-excel.revisionLog":"TODO","application/vnd.openxmlformats-officedocument.spreadsheetml.revisionHeaders+xml":"TODO","application/vnd.openxmlformats-officedocument.spreadsheetml.revisionLog+xml":"TODO","application/vnd.openxmlformats-officedocument.spreadsheetml.userNames+xml":"TODO","application/vnd.ms-excel.tableSingleCells":"TODO","application/vnd.openxmlformats-officedocument.spreadsheetml.tableSingleCells+xml":"TODO","application/vnd.ms-excel.slicer":"TODO","application/vnd.ms-excel.slicerCache":"TODO","application/vnd.ms-excel.slicer+xml":"TODO","application/vnd.ms-excel.slicerCache+xml":"TODO","application/vnd.ms-excel.wsSortMap":"TODO","application/vnd.ms-excel.table":"TODO","application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml":"TODO","application/vnd.openxmlformats-officedocument.theme+xml":"themes","application/vnd.openxmlformats-officedocument.themeOverride+xml":"TODO","application/vnd.ms-excel.Timeline+xml":"TODO","application/vnd.ms-excel.TimelineCache+xml":"TODO","application/vnd.ms-office.vbaProject":"vba","application/vnd.ms-office.vbaProjectSignature":"TODO","application/vnd.ms-office.volatileDependencies":"TODO","application/vnd.openxmlformats-officedocument.spreadsheetml.volatileDependencies+xml":"TODO","application/vnd.ms-excel.controlproperties+xml":"TODO","application/vnd.openxmlformats-officedocument.model+data":"TODO","application/vnd.ms-excel.Survey+xml":"TODO","application/vnd.openxmlformats-officedocument.drawing+xml":"drawings","application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml":"TODO","application/vnd.openxmlformats-officedocument.drawingml.diagramColors+xml":"TODO","application/vnd.openxmlformats-officedocument.drawingml.diagramData+xml":"TODO","application/vnd.openxmlformats-officedocument.drawingml.diagramLayout+xml":"TODO","application/vnd.openxmlformats-officedocument.drawingml.diagramStyle+xml":"TODO","application/vnd.openxmlformats-officedocument.vmlDrawing":"TODO","application/vnd.openxmlformats-package.relationships+xml":"rels","application/vnd.openxmlformats-officedocument.oleObject":"TODO","image/png":"TODO",sheet:"js"},Vn={workbooks:{xlsx:"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml",xlsm:"application/vnd.ms-excel.sheet.macroEnabled.main+xml",xlsb:"application/vnd.ms-excel.sheet.binary.macroEnabled.main",xlam:"application/vnd.ms-excel.addin.macroEnabled.main+xml",xltx:"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml"},strs:{xlsx:"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml",xlsb:"application/vnd.ms-excel.sharedStrings"},comments:{xlsx:"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml",xlsb:"application/vnd.ms-excel.comments"},sheets:{xlsx:"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml",xlsb:"application/vnd.ms-excel.worksheet"},charts:{xlsx:"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml",xlsb:"application/vnd.ms-excel.chartsheet"},dialogs:{xlsx:"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml",xlsb:"application/vnd.ms-excel.dialogsheet"},macros:{xlsx:"application/vnd.ms-excel.macrosheet+xml",xlsb:"application/vnd.ms-excel.macrosheet"},metadata:{xlsx:"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml",xlsb:"application/vnd.ms-excel.sheetMetadata"},styles:{xlsx:"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml",xlsb:"application/vnd.ms-excel.styles"}};function $n(e,t){var r,n=function(e){for(var t=[],r=Ie(e),n=0;n!==r.length;++n)null==t[e[r[n]]]&&(t[e[r[n]]]=[]),t[e[r[n]]].push(r[n]);return t}(jn),a=[];a[a.length]=ht,a[a.length]=Gt("Types",null,{xmlns:qt,"xmlns:xsd":"http://www.w3.org/2001/XMLSchema","xmlns:xsi":er}),a=a.concat([["xml","application/xml"],["bin","application/vnd.ms-excel.sheet.binary.macroEnabled.main"],["vml","application/vnd.openxmlformats-officedocument.vmlDrawing"],["data","application/vnd.openxmlformats-officedocument.model+data"],["bmp","image/bmp"],["png","image/png"],["gif","image/gif"],["emf","image/x-emf"],["wmf","image/x-wmf"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["tif","image/tiff"],["tiff","image/tiff"],["pdf","application/pdf"],["rels","application/vnd.openxmlformats-package.relationships+xml"]].map((function(e){return Gt("Default",null,{Extension:e[0],ContentType:e[1]})})));var s=function(n){e[n]&&e[n].length>0&&(r=e[n][0],a[a.length]=Gt("Override",null,{PartName:("/"==r[0]?"":"/")+r,ContentType:Vn[n][t.bookType]||Vn[n].xlsx}))},i=function(r){(e[r]||[]).forEach((function(e){a[a.length]=Gt("Override",null,{PartName:("/"==e[0]?"":"/")+e,ContentType:Vn[r][t.bookType]||Vn[r].xlsx})}))},o=function(t){(e[t]||[]).forEach((function(e){a[a.length]=Gt("Override",null,{PartName:("/"==e[0]?"":"/")+e,ContentType:n[t][0]})}))};return s("workbooks"),i("sheets"),i("charts"),o("themes"),["strs","styles"].forEach(s),["coreprops","extprops","custprops"].forEach(o),o("vba"),o("comments"),o("threadedcomments"),o("drawings"),i("metadata"),o("people"),a.length>2&&(a[a.length]="</Types>",a[1]=a[1].replace("/>",">")),a.join("")}var Gn={WB:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument",SHEET:"http://sheetjs.openxmlformats.org/officeDocument/2006/relationships/officeDocument",HLINK:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink",VML:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/vmlDrawing",XPATH:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/externalLinkPath",XMISS:"http://schemas.microsoft.com/office/2006/relationships/xlExternalLinkPath/xlPathMissing",XLINK:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/externalLink",CXML:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/customXml",CXMLP:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/customXmlProps",CMNT:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/comments",CORE_PROPS:"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties",EXT_PROPS:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties",CUST_PROPS:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/custom-properties",SST:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings",STY:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles",THEME:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme",CHART:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/chart",CHARTEX:"http://schemas.microsoft.com/office/2014/relationships/chartEx",CS:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/chartsheet",WS:["http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet","http://purl.oclc.org/ooxml/officeDocument/relationships/worksheet"],DS:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/dialogsheet",MS:"http://schemas.microsoft.com/office/2006/relationships/xlMacrosheet",IMG:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image",DRAW:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing",XLMETA:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sheetMetadata",TCMNT:"http://schemas.microsoft.com/office/2017/10/relationships/threadedComment",PEOPLE:"http://schemas.microsoft.com/office/2017/10/relationships/person",VBA:"http://schemas.microsoft.com/office/2006/relationships/vbaProject"};function Xn(e){var t=e.lastIndexOf("/");return e.slice(0,t+1)+"_rels/"+e.slice(t+1)+".rels"}function Yn(e,t){var r={"!id":{}};if(!e)return r;"/"!==t.charAt(0)&&(t="/"+t);var n={};return(e.match(mt)||[]).forEach((function(e){var a=bt(e);if("<Relationship"===a[0]){var s={};s.Type=a.Type,s.Target=a.Target,s.Id=a.Id,a.TargetMode&&(s.TargetMode=a.TargetMode);var i="External"===a.TargetMode?a.Target:ut(a.Target,t);r[i]=s,n[a.Id]=s}})),r["!id"]=n,r}function Kn(e){var t=[ht,Gt("Relationships",null,{xmlns:"http://schemas.openxmlformats.org/package/2006/relationships"})];return Ie(e["!id"]).forEach((function(r){t[t.length]=Gt("Relationship",null,e["!id"][r])})),t.length>2&&(t[t.length]="</Relationships>",t[1]=t[1].replace("/>",">")),t.join("")}function qn(e,t,r,n,a,s){if(a||(a={}),e["!id"]||(e["!id"]={}),e["!idx"]||(e["!idx"]=1),t<0)for(t=e["!idx"];e["!id"]["rId"+t];++t);if(e["!idx"]=t+1,a.Id="rId"+t,a.Type=n,a.Target=r,s?a.TargetMode=s:[Gn.HLINK,Gn.XPATH,Gn.XMISS].indexOf(a.Type)>-1&&(a.TargetMode="External"),e["!id"][a.Id])throw new Error("Cannot rewrite rId "+t);return e["!id"][a.Id]=a,e[("/"+a.Target).replace("//","/")]=a,t}function Qn(e,t,r){return['  <rdf:Description rdf:about="'+e+'">\n','    <rdf:type rdf:resource="http://docs.oasis-open.org/ns/office/1.2/meta/'+(r||"odf")+"#"+t+'"/>\n',"  </rdf:Description>\n"].join("")}function Jn(){return'<office:document-meta xmlns:office="urn:oasis:names:tc:opendocument:xmlns:office:1.0" xmlns:meta="urn:oasis:names:tc:opendocument:xmlns:meta:1.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xlink="http://www.w3.org/1999/xlink" office:version="1.2"><office:meta><meta:generator>SheetJS '+n+"</meta:generator></office:meta></office:document-meta>"}var Zn=[["cp:category","Category"],["cp:contentStatus","ContentStatus"],["cp:keywords","Keywords"],["cp:lastModifiedBy","LastAuthor"],["cp:lastPrinted","LastPrinted"],["cp:revision","RevNumber"],["cp:version","Version"],["dc:creator","Author"],["dc:description","Comments"],["dc:identifier","Identifier"],["dc:language","Language"],["dc:subject","Subject"],["dc:title","Title"],["dcterms:created","CreatedDate","date"],["dcterms:modified","ModifiedDate","date"]],ea=function(){for(var e=new Array(Zn.length),t=0;t<Zn.length;++t){var r=Zn[t],n="(?:"+r[0].slice(0,r[0].indexOf(":"))+":)"+r[0].slice(r[0].indexOf(":")+1);e[t]=new RegExp("<"+n+"[^>]*>([\\s\\S]*?)</"+n+">")}return e}();function ta(e){var t={};e=Ft(e);for(var r=0;r<Zn.length;++r){var n=Zn[r],a=e.match(ea[r]);null!=a&&a.length>0&&(t[n[1]]=Tt(a[1])),"date"===n[2]&&t[n[1]]&&(t[n[1]]=Ge(t[n[1]]))}return t}function ra(e,t,r,n,a){null==a[e]&&null!=t&&""!==t&&(a[e]=t,t=xt(t),n[n.length]=r?Gt(e,t,r):Vt(e,t))}function na(e,t){var r=t||{},n=[ht,Gt("cp:coreProperties",null,{"xmlns:cp":"http://schemas.openxmlformats.org/package/2006/metadata/core-properties","xmlns:dc":"http://purl.org/dc/elements/1.1/","xmlns:dcterms":"http://purl.org/dc/terms/","xmlns:dcmitype":"http://purl.org/dc/dcmitype/","xmlns:xsi":er})],a={};if(!e&&!r.Props)return n.join("");e&&(null!=e.CreatedDate&&ra("dcterms:created","string"==typeof e.CreatedDate?e.CreatedDate:Xt(e.CreatedDate,r.WTF),{"xsi:type":"dcterms:W3CDTF"},n,a),null!=e.ModifiedDate&&ra("dcterms:modified","string"==typeof e.ModifiedDate?e.ModifiedDate:Xt(e.ModifiedDate,r.WTF),{"xsi:type":"dcterms:W3CDTF"},n,a));for(var s=0;s!=Zn.length;++s){var i=Zn[s],o=r.Props&&null!=r.Props[i[1]]?r.Props[i[1]]:e?e[i[1]]:null;!0===o?o="1":!1===o?o="0":"number"==typeof o&&(o=String(o)),null!=o&&ra(i[0],o,null,n,a)}return n.length>2&&(n[n.length]="</cp:coreProperties>",n[1]=n[1].replace("/>",">")),n.join("")}var aa=[["Application","Application","string"],["AppVersion","AppVersion","string"],["Company","Company","string"],["DocSecurity","DocSecurity","string"],["Manager","Manager","string"],["HyperlinksChanged","HyperlinksChanged","bool"],["SharedDoc","SharedDoc","bool"],["LinksUpToDate","LinksUpToDate","bool"],["ScaleCrop","ScaleCrop","bool"],["HeadingPairs","HeadingPairs","raw"],["TitlesOfParts","TitlesOfParts","raw"]],sa=["Worksheets","SheetNames","NamedRanges","DefinedNames","Chartsheets","ChartNames"];function ia(e,t,r,n){var a=[];if("string"==typeof e)a=Ht(e,n);else for(var s=0;s<e.length;++s)a=a.concat(e[s].map((function(e){return{v:e}})));var i="string"==typeof t?Ht(t,n).map((function(e){return e.v})):t,o=0,l=0;if(i.length>0)for(var c=0;c!==a.length;c+=2){switch(l=+a[c+1].v,a[c].v){case"Worksheets":case"工作表":case"Листы":case"أوراق العمل":case"ワークシート":case"גליונות עבודה":case"Arbeitsblätter":case"Çalışma Sayfaları":case"Feuilles de calcul":case"Fogli di lavoro":case"Folhas de cálculo":case"Planilhas":case"Regneark":case"Hojas de cálculo":case"Werkbladen":r.Worksheets=l,r.SheetNames=i.slice(o,o+l);break;case"Named Ranges":case"Rangos con nombre":case"名前付き一覧":case"Benannte Bereiche":case"Navngivne områder":r.NamedRanges=l,r.DefinedNames=i.slice(o,o+l);break;case"Charts":case"Diagramme":r.Chartsheets=l,r.ChartNames=i.slice(o,o+l)}o+=l}}function oa(e){var t=[],r=Gt;return e||(e={}),e.Application="SheetJS",t[t.length]=ht,t[t.length]=Gt("Properties",null,{xmlns:"http://schemas.openxmlformats.org/officeDocument/2006/extended-properties","xmlns:vt":Zt}),aa.forEach((function(n){if(void 0!==e[n[1]]){var a;switch(n[2]){case"string":a=xt(String(e[n[1]]));break;case"bool":a=e[n[1]]?"true":"false"}void 0!==a&&(t[t.length]=r(n[0],a))}})),t[t.length]=r("HeadingPairs",r("vt:vector",r("vt:variant","<vt:lpstr>Worksheets</vt:lpstr>")+r("vt:variant",r("vt:i4",String(e.Worksheets))),{size:2,baseType:"variant"})),t[t.length]=r("TitlesOfParts",r("vt:vector",e.SheetNames.map((function(e){return"<vt:lpstr>"+xt(e)+"</vt:lpstr>"})).join(""),{size:e.Worksheets,baseType:"lpstr"})),t.length>2&&(t[t.length]="</Properties>",t[1]=t[1].replace("/>",">")),t.join("")}var la=/<[^>]+>[^<]*/g;function ca(e){var t=[ht,Gt("Properties",null,{xmlns:"http://schemas.openxmlformats.org/officeDocument/2006/custom-properties","xmlns:vt":Zt})];if(!e)return t.join("");var r=1;return Ie(e).forEach((function(n){++r,t[t.length]=Gt("property",function(e,t){switch(typeof e){case"string":var r=Gt("vt:lpwstr",xt(e));return r=r.replace(/&quot;/g,"_x0022_");case"number":return Gt((0|e)==e?"vt:i4":"vt:r8",xt(String(e)));case"boolean":return Gt("vt:bool",e?"true":"false")}if(e instanceof Date)return Gt("vt:filetime",Xt(e));throw new Error("Unable to serialize "+e)}(e[n]),{fmtid:"{D5CDD505-2E9C-101B-9397-08002B2CF9AE}",pid:r,name:xt(n)})})),t.length>2&&(t[t.length]="</Properties>",t[1]=t[1].replace("/>",">")),t.join("")}var fa,ua={Title:"Title",Subject:"Subject",Author:"Author",Keywords:"Keywords",Comments:"Description",LastAuthor:"LastAuthor",RevNumber:"Revision",Application:"AppName",LastPrinted:"LastPrinted",CreatedDate:"Created",ModifiedDate:"LastSaved",Category:"Category",Manager:"Manager",Company:"Company",AppVersion:"Version",ContentStatus:"ContentStatus",Identifier:"Identifier",Language:"Language"};function ha(e,t,r){fa||(fa=De(ua)),e[t=fa[t]||t]=r}function da(e){var t=e.read_shift(4),r=e.read_shift(4);return new Date(1e3*(r/1e7*Math.pow(2,32)+t/1e7-11644473600)).toISOString().replace(/\.000/,"")}function pa(e,t,r){var n=e.l,a=e.read_shift(0,"lpstr-cp");if(r)for(;e.l-n&3;)++e.l;return a}function ma(e,t,r){var n=e.read_shift(0,"lpwstr");return r&&(e.l+=4-(n.length+1&3)&3),n}function ga(e,t,r){return 31===t?ma(e):pa(e,0,r)}function va(e,t,r){return ga(e,t,!1===r?0:4)}function ba(e){var t=e.l,r=ka(e,81);return 0==e[e.l]&&0==e[e.l+1]&&e.l-t&2&&(e.l+=2),[r,ka(e,3)]}function wa(e,t){for(var r=e.read_shift(4),n={},a=0;a!=r;++a){var s=e.read_shift(4),i=e.read_shift(4);n[s]=e.read_shift(i,1200===t?"utf16le":"utf8").replace(R,"").replace(N,"!"),1200===t&&i%2&&(e.l+=2)}return 3&e.l&&(e.l=e.l>>3<<2),n}function ya(e){var t=e.read_shift(4),r=e.slice(e.l,e.l+t);return e.l+=t,(3&t)>0&&(e.l+=4-(3&t)&3),r}function ka(e,t,r){var n,a=e.read_shift(2),s=r||{};if(e.l+=2,12!==t&&a!==t&&-1===Dn.indexOf(t)&&(4126!=(65534&t)||4126!=(65534&a)))throw new Error("Expected type "+t+" saw "+a);switch(12===t?a:t){case 2:return n=e.read_shift(2,"i"),s.raw||(e.l+=2),n;case 3:return e.read_shift(4,"i");case 11:return 0!==e.read_shift(4);case 19:return e.read_shift(4);case 30:return pa(e,0,4).replace(R,"");case 31:return ma(e);case 64:return da(e);case 65:return ya(e);case 71:return function(e){var t={};return t.Size=e.read_shift(4),e.l+=t.Size+3-(t.Size-1)%4,t}(e);case 80:return va(e,a,!s.raw).replace(R,"");case 81:return function(e,t){if(!t)throw new Error("VtUnalignedString must have positive length");return ga(e,t,0)}(e,a).replace(R,"");case 4108:return function(e){for(var t=e.read_shift(4),r=[],n=0;n<t/2;++n)r.push(ba(e));return r}(e);case 4126:case 4127:return 4127==a?function(e){for(var t=e.read_shift(4),r=[],n=0;n!=t;++n){var a=e.l;r[n]=e.read_shift(0,"lpwstr").replace(R,""),e.l-a&2&&(e.l+=2)}return r}(e):function(e){for(var t=e.read_shift(4),r=[],n=0;n!=t;++n)r[n]=e.read_shift(0,"lpstr-cp").replace(R,"");return r}(e);default:throw new Error("TypedPropertyValue unrecognized type "+t+" "+a)}}function Ta(e,t){var r=Br(4),n=Br(4);switch(r.write_shift(4,80==e?31:e),e){case 3:n.write_shift(-4,t);break;case 5:(n=Br(8)).write_shift(8,t,"f");break;case 11:n.write_shift(4,t?1:0);break;case 64:n=function(e){var t=("string"==typeof e?new Date(Date.parse(e)):e).getTime()/1e3+11644473600,r=t%Math.pow(2,32),n=(t-r)/Math.pow(2,32);n*=1e7;var a=(r*=1e7)/Math.pow(2,32)|0;a>0&&(r%=Math.pow(2,32),n+=a);var s=Br(8);return s.write_shift(4,r),s.write_shift(4,n),s}(t);break;case 31:case 80:for((n=Br(4+2*(t.length+1)+(t.length%2?0:2))).write_shift(4,t.length+1),n.write_shift(0,t,"dbcs");n.l!=n.length;)n.write_shift(1,0);break;default:throw new Error("TypedPropertyValue unrecognized type "+e+" "+t)}return O([r,n])}function Sa(e,t){var r=e.l,n=e.read_shift(4),a=e.read_shift(4),s=[],i=0,o=0,l=-1,f={};for(i=0;i!=a;++i){var u=e.read_shift(4),h=e.read_shift(4);s[i]=[u,h+r]}s.sort((function(e,t){return e[1]-t[1]}));var d={};for(i=0;i!=a;++i){if(e.l!==s[i][1]){var p=!0;if(i>0&&t)switch(t[s[i-1][0]].t){case 2:e.l+2===s[i][1]&&(e.l+=2,p=!1);break;case 80:case 4108:e.l<=s[i][1]&&(e.l=s[i][1],p=!1)}if((!t||0==i)&&e.l<=s[i][1]&&(p=!1,e.l=s[i][1]),p)throw new Error("Read Error: Expected address "+s[i][1]+" at "+e.l+" :"+i)}if(t){var m=t[s[i][0]];if(d[m.n]=ka(e,m.t,{raw:!0}),"version"===m.p&&(d[m.n]=String(d[m.n]>>16)+"."+("0000"+String(65535&d[m.n])).slice(-4)),"CodePage"==m.n)switch(d[m.n]){case 0:d[m.n]=1252;case 874:case 932:case 936:case 949:case 950:case 1250:case 1251:case 1253:case 1254:case 1255:case 1256:case 1257:case 1258:case 1e4:case 1200:case 1201:case 1252:case 65e3:case-536:case 65001:case-535:c(o=d[m.n]>>>0&65535);break;default:throw new Error("Unsupported CodePage: "+d[m.n])}}else if(1===s[i][0]){if(o=d.CodePage=ka(e,2),c(o),-1!==l){var g=e.l;e.l=s[l][1],f=wa(e,o),e.l=g}}else if(0===s[i][0]){if(0===o){l=i,e.l=s[i+1][1];continue}f=wa(e,o)}else{var v,b=f[s[i][0]];switch(e[e.l]){case 65:e.l+=4,v=ya(e);break;case 30:case 31:e.l+=4,v=va(e,e[e.l-4]).replace(/\u0000+$/,"");break;case 3:e.l+=4,v=e.read_shift(4,"i");break;case 19:e.l+=4,v=e.read_shift(4);break;case 5:e.l+=4,v=e.read_shift(8,"f");break;case 11:e.l+=4,v=Ra(e,4);break;case 64:e.l+=4,v=Ge(da(e));break;default:throw new Error("unparsed value: "+e[e.l])}d[b]=v}}return e.l=r+n,d}var Ea=["CodePage","Thumbnail","_PID_LINKBASE","_PID_HLINKS","SystemIdentifier","FMTID"];function xa(e){switch(typeof e){case"boolean":return 11;case"number":return(0|e)==e?3:5;case"string":return 31;case"object":if(e instanceof Date)return 64}return-1}function _a(e,t,r){var n=Br(8),a=[],s=[],i=8,o=0,l=Br(8),c=Br(8);if(l.write_shift(4,2),l.write_shift(4,1200),c.write_shift(4,1),s.push(l),a.push(c),i+=8+l.length,!t){(c=Br(8)).write_shift(4,0),a.unshift(c);var f=[Br(4)];for(f[0].write_shift(4,e.length),o=0;o<e.length;++o){var u=e[o][0];for((l=Br(8+2*(u.length+1)+(u.length%2?0:2))).write_shift(4,o+2),l.write_shift(4,u.length+1),l.write_shift(0,u,"dbcs");l.l!=l.length;)l.write_shift(1,0);f.push(l)}l=O(f),s.unshift(l),i+=8+l.length}for(o=0;o<e.length;++o)if((!t||t[e[o][0]])&&!(Ea.indexOf(e[o][0])>-1||sa.indexOf(e[o][0])>-1)&&null!=e[o][1]){var h=e[o][1],d=0;if(t){var p=r[d=+t[e[o][0]]];if("version"==p.p&&"string"==typeof h){var m=h.split(".");h=(+m[0]<<16)+(+m[1]||0)}l=Ta(p.t,h)}else{var g=xa(h);-1==g&&(g=31,h=String(h)),l=Ta(g,h)}s.push(l),(c=Br(8)).write_shift(4,t?d:2+o),a.push(c),i+=8+l.length}var v=8*(s.length+1);for(o=0;o<s.length;++o)a[o].write_shift(4,v),v+=s[o].length;return n.write_shift(4,i),n.write_shift(4,s.length),O([n].concat(a).concat(s))}function Ca(e,t,r){var n=e.content;if(!n)return{};Mr(n,0);var a,s,i,o,l=0;n.chk("feff","Byte Order: "),n.read_shift(2);var c=n.read_shift(4),f=n.read_shift(16);if(f!==Ce.utils.consts.HEADER_CLSID&&f!==r)throw new Error("Bad PropertySet CLSID "+f);if(1!==(a=n.read_shift(4))&&2!==a)throw new Error("Unrecognized #Sets: "+a);if(s=n.read_shift(16),o=n.read_shift(4),1===a&&o!==n.l)throw new Error("Length mismatch: "+o+" !== "+n.l);2===a&&(i=n.read_shift(16),l=n.read_shift(4));var u,h=Sa(n,t),d={SystemIdentifier:c};for(var p in h)d[p]=h[p];if(d.FMTID=s,1===a)return d;if(l-n.l==2&&(n.l+=2),n.l!==l)throw new Error("Length mismatch 2: "+n.l+" !== "+l);try{u=Sa(n,null)}catch(e){}for(p in u)d[p]=u[p];return d.FMTID=[s,i],d}function Aa(e,t,r,n,a,s){var i=Br(a?68:48),o=[i];i.write_shift(2,65534),i.write_shift(2,0),i.write_shift(4,842412599),i.write_shift(16,Ce.utils.consts.HEADER_CLSID,"hex"),i.write_shift(4,a?2:1),i.write_shift(16,t,"hex"),i.write_shift(4,a?68:48);var l=_a(e,r,n);if(o.push(l),a){var c=_a(a,null,null);i.write_shift(16,s,"hex"),i.write_shift(4,68+l.length),o.push(c)}return O(o)}function Oa(e,t){return e.read_shift(t),null}function Ra(e,t){return 1===e.read_shift(t)}function Na(e,t){return t||(t=Br(2)),t.write_shift(2,+!!e),t}function Ia(e){return e.read_shift(2,"u")}function Pa(e,t){return t||(t=Br(2)),t.write_shift(2,e),t}function Da(e,t){return function(e,t,r){for(var n=[],a=e.l+t;e.l<a;)n.push(r(e,a-e.l));if(a!==e.l)throw new Error("Slurp error");return n}(e,t,Ia)}function Fa(e,t,r){return r||(r=Br(2)),r.write_shift(1,"e"==t?+e:+!!e),r.write_shift(1,"e"==t?1:0),r}function La(e,t,r){var n=e.read_shift(r&&r.biff>=12?2:1),s="sbcs-cont",i=a;r&&r.biff>=8&&(a=1200),r&&8!=r.biff?12==r.biff&&(s="wstr"):e.read_shift(1)&&(s="dbcs-cont"),r.biff>=2&&r.biff<=5&&(s="cpstr");var o=n?e.read_shift(n,s):"";return a=i,o}function Ma(e){var t=a;a=1200;var r,n=e.read_shift(2),s=e.read_shift(1),i=4&s,o=8&s,l=1+(1&s),c=0,f={};o&&(c=e.read_shift(2)),i&&(r=e.read_shift(4));var u=2==l?"dbcs-cont":"sbcs-cont",h=0===n?"":e.read_shift(n,u);return o&&(e.l+=4*c),i&&(e.l+=r),f.t=h,o||(f.raw="<t>"+f.t+"</t>",f.r=f.t),a=t,f}function Ua(e){var t=e.t||"",r=Br(3);r.write_shift(2,t.length),r.write_shift(1,1);var n=Br(2*t.length);return n.write_shift(2*t.length,t,"utf16le"),O([r,n])}function Ba(e,t,r){if(r){if(r.biff>=2&&r.biff<=5)return e.read_shift(t,"cpstr");if(r.biff>=12)return e.read_shift(t,"dbcs-cont")}return 0===e.read_shift(1)?e.read_shift(t,"sbcs-cont"):e.read_shift(t,"dbcs-cont")}function za(e,t,r){var n=e.read_shift(r&&2==r.biff?1:2);return 0===n?(e.l++,""):Ba(e,n,r)}function Wa(e,t,r){if(r.biff>5)return za(e,0,r);var n=e.read_shift(1);return 0===n?(e.l++,""):e.read_shift(n,r.biff<=4||!e.lens?"cpstr":"sbcs-cont")}function Ha(e,t,r){return r||(r=Br(3+2*e.length)),r.write_shift(2,e.length),r.write_shift(1,1),r.write_shift(31,e,"utf16le"),r}function ja(e){var t=e.read_shift(4);return t>0?e.read_shift(t,"utf16le").replace(R,""):""}function Va(e,t){t||(t=Br(6+2*e.length)),t.write_shift(4,1+e.length);for(var r=0;r<e.length;++r)t.write_shift(2,e.charCodeAt(r));return t.write_shift(2,0),t}function $a(e){var t=Br(512),r=0,n=e.Target;"file://"==n.slice(0,7)&&(n=n.slice(7));var a=n.indexOf("#"),s=a>-1?31:23;switch(n.charAt(0)){case"#":s=28;break;case".":s&=-3}t.write_shift(4,2),t.write_shift(4,s);var i=[8,6815827,6619237,4849780,83];for(r=0;r<i.length;++r)t.write_shift(4,i[r]);if(28==s)Va(n=n.slice(1),t);else if(2&s){for(i="e0 c9 ea 79 f9 ba ce 11 8c 82 00 aa 00 4b a9 0b".split(" "),r=0;r<i.length;++r)t.write_shift(1,parseInt(i[r],16));var o=a>-1?n.slice(0,a):n;for(t.write_shift(4,2*(o.length+1)),r=0;r<o.length;++r)t.write_shift(2,o.charCodeAt(r));t.write_shift(2,0),8&s&&Va(a>-1?n.slice(a+1):"",t)}else{for(i="03 03 00 00 00 00 00 00 c0 00 00 00 00 00 00 46".split(" "),r=0;r<i.length;++r)t.write_shift(1,parseInt(i[r],16));for(var l=0;"../"==n.slice(3*l,3*l+3)||"..\\"==n.slice(3*l,3*l+3);)++l;for(t.write_shift(2,l),t.write_shift(4,n.length-3*l+1),r=0;r<n.length-3*l;++r)t.write_shift(1,255&n.charCodeAt(r+3*l));for(t.write_shift(1,0),t.write_shift(2,65535),t.write_shift(2,57005),r=0;r<6;++r)t.write_shift(4,0)}return t.slice(0,t.l)}function Ga(e){return[e.read_shift(1),e.read_shift(1),e.read_shift(1),e.read_shift(1)]}function Xa(e,t){var r=Ga(e);return r[3]=0,r}function Ya(e){return{r:e.read_shift(2),c:e.read_shift(2),ixfe:e.read_shift(2)}}function Ka(e,t,r,n){return n||(n=Br(6)),n.write_shift(2,e),n.write_shift(2,t),n.write_shift(2,r||0),n}function qa(e,t,r){var n=r.biff>8?4:2;return[e.read_shift(n),e.read_shift(n,"i"),e.read_shift(n,"i")]}function Qa(e){return[e.read_shift(2),En(e)]}function Ja(e){var t=e.read_shift(2),r=e.read_shift(2);return{s:{c:e.read_shift(2),r:t},e:{c:e.read_shift(2),r}}}function Za(e,t){return t||(t=Br(8)),t.write_shift(2,e.s.r),t.write_shift(2,e.e.r),t.write_shift(2,e.s.c),t.write_shift(2,e.e.c),t}function es(e){var t=e.read_shift(2),r=e.read_shift(2);return{s:{c:e.read_shift(1),r:t},e:{c:e.read_shift(1),r}}}var ts=es;function rs(e){e.l+=4;var t=e.read_shift(2),r=e.read_shift(2),n=e.read_shift(2);return e.l+=12,[r,t,n]}function ns(e){e.l+=2,e.l+=e.read_shift(2)}var as={0:ns,4:ns,5:ns,6:ns,7:function(e){return e.l+=4,e.cf=e.read_shift(2),{}},8:ns,9:ns,10:ns,11:ns,12:ns,13:function(e){var t={};return e.l+=4,e.l+=16,t.fSharedNote=e.read_shift(2),e.l+=4,t},14:ns,15:ns,16:ns,17:ns,18:ns,19:ns,20:ns,21:rs};function ss(e,t){var r={BIFFVer:0,dt:0};switch(r.BIFFVer=e.read_shift(2),(t-=2)>=2&&(r.dt=e.read_shift(2),e.l-=2),r.BIFFVer){case 1536:case 1280:case 1024:case 768:case 512:case 2:case 7:break;default:if(t>6)throw new Error("Unexpected BIFF Ver "+r.BIFFVer)}return e.read_shift(t),r}function is(e,t,r){var n=1536,a=16;switch(r.bookType){case"biff8":case"xla":break;case"biff5":n=1280,a=8;break;case"biff4":n=4,a=6;break;case"biff3":n=3,a=6;break;case"biff2":n=2,a=4;break;default:throw new Error("unsupported BIFF version")}var s=Br(a);return s.write_shift(2,n),s.write_shift(2,t),a>4&&s.write_shift(2,29282),a>6&&s.write_shift(2,1997),a>8&&(s.write_shift(2,49161),s.write_shift(2,1),s.write_shift(2,1798),s.write_shift(2,0)),s}function os(e,t){var r=!t||t.biff>=8?2:1,n=Br(8+r*e.name.length);n.write_shift(4,e.pos),n.write_shift(1,e.hs||0),n.write_shift(1,e.dt),n.write_shift(1,e.name.length),t.biff>=8&&n.write_shift(1,1),n.write_shift(r*e.name.length,e.name,t.biff<8?"sbcs":"utf16le");var a=n.slice(0,n.l);return a.l=n.l,a}function ls(e,t,r){var n=0;r&&2==r.biff||(n=e.read_shift(2));var a=e.read_shift(2);return r&&2==r.biff&&(n=1-(a>>15),a&=32767),[{Unsynced:1&n,DyZero:(2&n)>>1,ExAsc:(4&n)>>2,ExDsc:(8&n)>>3},a]}function cs(e,t,r,n){var a=r&&5==r.biff;n||(n=Br(a?3+t.length:5+2*t.length)),n.write_shift(2,e),n.write_shift(a?1:2,t.length),a||n.write_shift(1,1),n.write_shift((a?1:2)*t.length,t,a?"sbcs":"utf16le");var s=n.length>n.l?n.slice(0,n.l):n;return null==s.l&&(s.l=s.length),s}var fs=Wa;function us(e,t,r){var n=e.l+t,a=8!=r.biff&&r.biff?2:4,s=e.read_shift(a),i=e.read_shift(a),o=e.read_shift(2),l=e.read_shift(2);return e.l=n,{s:{r:s,c:o},e:{r:i,c:l}}}function hs(e,t,r,n){var a=r&&5==r.biff;n||(n=Br(a?16:20)),n.write_shift(2,0),e.style?(n.write_shift(2,e.numFmtId||0),n.write_shift(2,65524)):(n.write_shift(2,e.numFmtId||0),n.write_shift(2,t<<4));var s=0;return e.numFmtId>0&&a&&(s|=1024),n.write_shift(4,s),n.write_shift(4,0),a||n.write_shift(4,0),n.write_shift(2,0),n}function ds(e,t,r){var n=Ya(e);2!=r.biff&&9!=t||++e.l;var a=function(e){var t=e.read_shift(1);return 1===e.read_shift(1)?t:1===t}(e);return n.val=a,n.t=!0===a||!1===a?"b":"e",n}var ps=function(e,t,r){return 0===t?"":Wa(e,0,r)};function ms(e,t,r){var n,a=e.read_shift(2),s={fBuiltIn:1&a,fWantAdvise:a>>>1&1,fWantPict:a>>>2&1,fOle:a>>>3&1,fOleLink:a>>>4&1,cf:a>>>5&1023,fIcon:a>>>15&1};return 14849===r.sbcch&&(n=function(e,t,r){e.l+=4,t-=4;var n=e.l+t,a=La(e,0,r),s=e.read_shift(2);if(s!==(n-=e.l))throw new Error("Malformed AddinUdf: padding = "+n+" != "+s);return e.l+=s,a}(e,t-2,r)),s.body=n||e.read_shift(t-2),"string"==typeof n&&(s.Name=n),s}var gs=["_xlnm.Consolidate_Area","_xlnm.Auto_Open","_xlnm.Auto_Close","_xlnm.Extract","_xlnm.Database","_xlnm.Criteria","_xlnm.Print_Area","_xlnm.Print_Titles","_xlnm.Recorder","_xlnm.Data_Form","_xlnm.Auto_Activate","_xlnm.Auto_Deactivate","_xlnm.Sheet_Title","_xlnm._FilterDatabase"];function vs(e,t,r){var n=e.l+t,a=e.read_shift(2),s=e.read_shift(1),i=e.read_shift(1),o=e.read_shift(r&&2==r.biff?1:2),l=0;(!r||r.biff>=5)&&(5!=r.biff&&(e.l+=2),l=e.read_shift(2),5==r.biff&&(e.l+=2),e.l+=4);var c=Ba(e,i,r);32&a&&(c=gs[c.charCodeAt(0)]);var f=n-e.l;r&&2==r.biff&&--f;var u=n!=e.l&&0!==o&&f>0?function(e,t,r,n){var a,s=e.l+t,i=To(e,n,r);return s!==e.l&&(a=ko(e,s-e.l,i,r)),[i,a]}(e,f,r,o):[];return{chKey:s,Name:c,itab:l,rgce:u}}function bs(e,t,r){if(r.biff<8)return function(e,t,r){3==e[e.l+1]&&e[e.l]++;var n=La(e,0,r);return 3==n.charCodeAt(0)?n.slice(1):n}(e,0,r);for(var n=[],a=e.l+t,s=e.read_shift(r.biff>8?4:2);0!=s--;)n.push(qa(e,r.biff,r));if(e.l!=a)throw new Error("Bad ExternSheet: "+e.l+" != "+a);return n}function ws(e,t,r){var n=ts(e,6);switch(r.biff){case 2:e.l++,t-=7;break;case 3:case 4:e.l+=2,t-=8;break;default:e.l+=6,t-=12}return[n,Ao(e,t,r)]}var ys={8:function(e,t){var r=e.l+t;e.l+=10;var n=e.read_shift(2);e.l+=4,e.l+=2,e.l+=2,e.l+=2,e.l+=4;var a=e.read_shift(1);return e.l+=a,e.l=r,{fmt:n}}};function ks(e){var t=Br(24),r=Qr(e[0]);t.write_shift(2,r.r),t.write_shift(2,r.r),t.write_shift(2,r.c),t.write_shift(2,r.c);for(var n="d0 c9 ea 79 f9 ba ce 11 8c 82 00 aa 00 4b a9 0b".split(" "),a=0;a<16;++a)t.write_shift(1,parseInt(n[a],16));return O([t,$a(e[1])])}function Ts(e){var t=e[1].Tooltip,r=Br(10+2*(t.length+1));r.write_shift(2,2048);var n=Qr(e[0]);r.write_shift(2,n.r),r.write_shift(2,n.r),r.write_shift(2,n.c),r.write_shift(2,n.c);for(var a=0;a<t.length;++a)r.write_shift(2,t.charCodeAt(a));return r.write_shift(2,0),r}function Ss(e,t,r){if(!r.cellStyles)return Ur(e,t);var n=r&&r.biff>=12?4:2,a=e.read_shift(n),s=e.read_shift(n),i=e.read_shift(n),o=e.read_shift(n),l=e.read_shift(2);2==n&&(e.l+=2);var c={s:a,e:s,w:i,ixfe:o,flags:l};return(r.biff>=5||!r.biff)&&(c.level=l>>8&7),c}var Es=Ya,xs=Da,_s=za,Cs=[2,3,48,49,131,139,140,245],As=function(){var e={1:437,2:850,3:1252,4:1e4,100:852,101:866,102:865,103:861,104:895,105:620,106:737,107:857,120:950,121:949,122:936,123:932,124:874,125:1255,126:1256,150:10007,151:10029,152:10006,200:1250,201:1251,202:1254,203:1253,0:20127,8:865,9:437,10:850,11:437,13:437,14:850,15:437,16:850,17:437,18:850,19:932,20:850,21:437,22:850,23:865,24:437,25:437,26:850,27:437,28:863,29:850,31:852,34:852,35:852,36:860,37:850,38:866,55:850,64:852,77:936,78:949,79:950,80:874,87:1252,88:1252,89:1252,108:863,134:737,135:852,136:857,204:1257,255:16969},t=De({1:437,2:850,3:1252,4:1e4,100:852,101:866,102:865,103:861,104:895,105:620,106:737,107:857,120:950,121:949,122:936,123:932,124:874,125:1255,126:1256,150:10007,151:10029,152:10006,200:1250,201:1251,202:1254,203:1253,0:20127});function r(t,r){var n=r||{};n.dateNF||(n.dateNF="yyyymmdd");var a=sn(function(t,r){var n=[],a=S(1);switch(r.type){case"base64":a=x(y(t));break;case"binary":a=x(t);break;case"buffer":case"array":a=t}Mr(a,0);var s=a.read_shift(1),i=!!(136&s),o=!1,l=!1;switch(s){case 2:case 3:case 131:case 139:case 245:break;case 48:case 49:o=!0,i=!0;break;case 140:l=!0;break;default:throw new Error("DBF Unsupported Version: "+s.toString(16))}var c=0,f=521;2==s&&(c=a.read_shift(2)),a.l+=3,2!=s&&(c=a.read_shift(4)),c>1048576&&(c=1e6),2!=s&&(f=a.read_shift(2));var u=a.read_shift(2),h=r.codepage||1252;2!=s&&(a.l+=16,a.read_shift(1),0!==a[a.l]&&(h=e[a[a.l]]),a.l+=1,a.l+=2),l&&(a.l+=36);for(var p=[],m={},g=Math.min(a.length,2==s?521:f-10-(o?264:0)),v=l?32:11;a.l<g&&13!=a[a.l];)switch((m={}).name=d.utils.decode(h,a.slice(a.l,a.l+v)).replace(/[\u0000\r\n].*$/g,""),a.l+=v,m.type=String.fromCharCode(a.read_shift(1)),2==s||l||(m.offset=a.read_shift(4)),m.len=a.read_shift(1),2==s&&(m.offset=a.read_shift(2)),m.dec=a.read_shift(1),m.name.length&&p.push(m),2!=s&&(a.l+=l?13:14),m.type){case"B":o&&8==m.len||!r.WTF||console.log("Skipping "+m.name+":"+m.type);break;case"G":case"P":r.WTF&&console.log("Skipping "+m.name+":"+m.type);break;case"+":case"0":case"@":case"C":case"D":case"F":case"I":case"L":case"M":case"N":case"O":case"T":case"Y":break;default:throw new Error("Unknown Field Type: "+m.type)}if(13!==a[a.l]&&(a.l=f-1),13!==a.read_shift(1))throw new Error("DBF Terminator not found "+a.l+" "+a[a.l]);a.l=f;var b=0,w=0;for(n[0]=[],w=0;w!=p.length;++w)n[0][w]=p[w].name;for(;c-- >0;)if(42!==a[a.l])for(++a.l,n[++b]=[],w=0,w=0;w!=p.length;++w){var k=a.slice(a.l,a.l+p[w].len);a.l+=p[w].len,Mr(k,0);var T=d.utils.decode(h,k);switch(p[w].type){case"C":T.trim().length&&(n[b][w]=T.replace(/\s+$/,""));break;case"D":8===T.length?n[b][w]=new Date(+T.slice(0,4),+T.slice(4,6)-1,+T.slice(6,8)):n[b][w]=T;break;case"F":n[b][w]=parseFloat(T.trim());break;case"+":case"I":n[b][w]=l?2147483648^k.read_shift(-4,"i"):k.read_shift(4,"i");break;case"L":switch(T.trim().toUpperCase()){case"Y":case"T":n[b][w]=!0;break;case"N":case"F":n[b][w]=!1;break;case"":case"?":break;default:throw new Error("DBF Unrecognized L:|"+T+"|")}break;case"M":if(!i)throw new Error("DBF Unexpected MEMO for type "+s.toString(16));n[b][w]="##MEMO##"+(l?parseInt(T.trim(),10):k.read_shift(4));break;case"N":(T=T.replace(/\u0000/g,"").trim())&&"."!=T&&(n[b][w]=+T||0);break;case"@":n[b][w]=new Date(k.read_shift(-8,"f")-621356832e5);break;case"T":n[b][w]=new Date(864e5*(k.read_shift(4)-2440588)+k.read_shift(4));break;case"Y":n[b][w]=k.read_shift(4,"i")/1e4+k.read_shift(4,"i")/1e4*Math.pow(2,32);break;case"O":n[b][w]=-k.read_shift(-8,"f");break;case"B":if(o&&8==p[w].len){n[b][w]=k.read_shift(8,"f");break}case"G":case"P":k.l+=p[w].len;break;case"0":if("_NullFlags"===p[w].name)break;default:throw new Error("DBF Unsupported data type "+p[w].type)}}else a.l+=u;if(2!=s&&a.l<a.length&&26!=a[a.l++])throw new Error("DBF EOF Marker missing "+(a.l-1)+" of "+a.length+" "+a[a.l-1].toString(16));return r&&r.sheetRows&&(n=n.slice(0,r.sheetRows)),r.DBF=p,n}(t,n),n);return a["!cols"]=n.DBF.map((function(e){return{wch:e.len,DBF:e}})),delete n.DBF,a}var n={B:8,C:250,L:1,D:8,"?":0,"":0};return{to_workbook:function(e,t){try{return nn(r(e,t),t)}catch(e){if(t&&t.WTF)throw e}return{SheetNames:[],Sheets:{}}},to_sheet:r,from_sheet:function(e,r){var a=r||{};if(+a.codepage>=0&&c(+a.codepage),"string"==a.type)throw new Error("Cannot write DBF to JS string");var i=Wr(),o=Of(e,{header:1,raw:!0,cellDates:!0}),l=o[0],f=o.slice(1),u=e["!cols"]||[],h=0,d=0,p=0,m=1;for(h=0;h<l.length;++h)if(((u[h]||{}).DBF||{}).name)l[h]=u[h].DBF.name,++p;else if(null!=l[h]){if(++p,"number"==typeof l[h]&&(l[h]=l[h].toString(10)),"string"!=typeof l[h])throw new Error("DBF Invalid column name "+l[h]+" |"+typeof l[h]+"|");if(l.indexOf(l[h])!==h)for(d=0;d<1024;++d)if(-1==l.indexOf(l[h]+"_"+d)){l[h]+="_"+d;break}}var g=tn(e["!ref"]),v=[],b=[],w=[];for(h=0;h<=g.e.c-g.s.c;++h){var y="",k="",T=0,S=[];for(d=0;d<f.length;++d)null!=f[d][h]&&S.push(f[d][h]);if(0!=S.length&&null!=l[h]){for(d=0;d<S.length;++d){switch(typeof S[d]){case"number":k="B";break;case"string":default:k="C";break;case"boolean":k="L";break;case"object":k=S[d]instanceof Date?"D":"C"}T=Math.max(T,String(S[d]).length),y=y&&y!=k?"C":k}T>250&&(T=250),"C"==(k=((u[h]||{}).DBF||{}).type)&&u[h].DBF.len>T&&(T=u[h].DBF.len),"B"==y&&"N"==k&&(y="N",w[h]=u[h].DBF.dec,T=u[h].DBF.len),b[h]="C"==y||"N"==k?T:n[y]||0,m+=b[h],v[h]=y}else v[h]="?"}var E=i.next(32);for(E.write_shift(4,318902576),E.write_shift(4,f.length),E.write_shift(2,296+32*p),E.write_shift(2,m),h=0;h<4;++h)E.write_shift(4,0);for(E.write_shift(4,0|(+t[s]||3)<<8),h=0,d=0;h<l.length;++h)if(null!=l[h]){var x=i.next(32),_=(l[h].slice(-10)+"\0\0\0\0\0\0\0\0\0\0\0").slice(0,11);x.write_shift(1,_,"sbcs"),x.write_shift(1,"?"==v[h]?"C":v[h],"sbcs"),x.write_shift(4,d),x.write_shift(1,b[h]||n[v[h]]||0),x.write_shift(1,w[h]||0),x.write_shift(1,2),x.write_shift(4,0),x.write_shift(1,0),x.write_shift(4,0),x.write_shift(4,0),d+=b[h]||n[v[h]]||0}var C=i.next(264);for(C.write_shift(4,13),h=0;h<65;++h)C.write_shift(4,0);for(h=0;h<f.length;++h){var A=i.next(m);for(A.write_shift(1,0),d=0;d<l.length;++d)if(null!=l[d])switch(v[d]){case"L":A.write_shift(1,null==f[h][d]?63:f[h][d]?84:70);break;case"B":A.write_shift(8,f[h][d]||0,"f");break;case"N":var O="0";for("number"==typeof f[h][d]&&(O=f[h][d].toFixed(w[d]||0)),p=0;p<b[d]-O.length;++p)A.write_shift(1,32);A.write_shift(1,O,"sbcs");break;case"D":f[h][d]?(A.write_shift(4,("0000"+f[h][d].getFullYear()).slice(-4),"sbcs"),A.write_shift(2,("00"+(f[h][d].getMonth()+1)).slice(-2),"sbcs"),A.write_shift(2,("00"+f[h][d].getDate()).slice(-2),"sbcs")):A.write_shift(8,"00000000","sbcs");break;case"C":var R=String(null!=f[h][d]?f[h][d]:"").slice(0,b[d]);for(A.write_shift(1,R,"sbcs"),p=0;p<b[d]-R.length;++p)A.write_shift(1,32)}}return i.next(1).write_shift(1,26),i.end()}}}(),Os=function(){var e={AA:"À",BA:"Á",CA:"Â",DA:195,HA:"Ä",JA:197,AE:"È",BE:"É",CE:"Ê",HE:"Ë",AI:"Ì",BI:"Í",CI:"Î",HI:"Ï",AO:"Ò",BO:"Ó",CO:"Ô",DO:213,HO:"Ö",AU:"Ù",BU:"Ú",CU:"Û",HU:"Ü",Aa:"à",Ba:"á",Ca:"â",Da:227,Ha:"ä",Ja:229,Ae:"è",Be:"é",Ce:"ê",He:"ë",Ai:"ì",Bi:"í",Ci:"î",Hi:"ï",Ao:"ò",Bo:"ó",Co:"ô",Do:245,Ho:"ö",Au:"ù",Bu:"ú",Cu:"û",Hu:"ü",KC:"Ç",Kc:"ç",q:"æ",z:"œ",a:"Æ",j:"Œ",DN:209,Dn:241,Hy:255,S:169,c:170,R:174,"B ":180,0:176,1:177,2:178,3:179,5:181,6:182,7:183,Q:185,k:186,b:208,i:216,l:222,s:240,y:248,"!":161,'"':162,"#":163,"(":164,"%":165,"'":167,"H ":168,"+":171,";":187,"<":188,"=":189,">":190,"?":191,"{":223},t=new RegExp("N("+Ie(e).join("|").replace(/\|\|\|/,"|\\||").replace(/([?()+])/g,"\\$1")+"|\\|)","gm"),r=function(t,r){var n=e[r];return"number"==typeof n?g(n):n},n=function(e,t,r){var n=t.charCodeAt(0)-32<<4|r.charCodeAt(0)-48;return 59==n?e:g(n)};function a(e,a){var s,i=e.split(/[\n\r]+/),o=-1,l=-1,f=0,u=0,h=[],p=[],m=null,g={},v=[],b=[],w=[],y=0;for(+a.codepage>=0&&c(+a.codepage);f!==i.length;++f){y=0;var k,T=i[f].trim().replace(/\x1B([\x20-\x2F])([\x30-\x3F])/g,n).replace(t,r),S=T.replace(/;;/g,"\0").split(";").map((function(e){return e.replace(/\u0000/g,";")})),E=S[0];if(T.length>0)switch(E){case"ID":case"E":case"B":case"O":case"W":break;case"P":"P"==S[1].charAt(0)&&p.push(T.slice(3).replace(/;;/g,";"));break;case"C":var x=!1,_=!1,C=!1,A=!1,O=-1,R=-1;for(u=1;u<S.length;++u)switch(S[u].charAt(0)){case"A":case"G":break;case"X":l=parseInt(S[u].slice(1))-1,_=!0;break;case"Y":for(o=parseInt(S[u].slice(1))-1,_||(l=0),s=h.length;s<=o;++s)h[s]=[];break;case"K":'"'===(k=S[u].slice(1)).charAt(0)?k=k.slice(1,k.length-1):"TRUE"===k?k=!0:"FALSE"===k?k=!1:isNaN(qe(k))?isNaN(Je(k).getDate())||(k=Ge(k)):(k=qe(k),null!==m&&ge(m)&&(k=We(k))),void 0!==d&&"string"==typeof k&&"string"!=(a||{}).type&&(a||{}).codepage&&(k=d.utils.decode(a.codepage,k)),x=!0;break;case"E":A=!0;var N=Ki(S[u].slice(1),{r:o,c:l});h[o][l]=[h[o][l],N];break;case"S":C=!0,h[o][l]=[h[o][l],"S5S"];break;case"R":O=parseInt(S[u].slice(1))-1;break;case"C":R=parseInt(S[u].slice(1))-1;break;default:if(a&&a.WTF)throw new Error("SYLK bad record "+T)}if(x&&(h[o][l]&&2==h[o][l].length?h[o][l][0]=k:h[o][l]=k,m=null),C){if(A)throw new Error("SYLK shared formula cannot have own formula");var I=O>-1&&h[O][R];if(!I||!I[1])throw new Error("SYLK shared formula cannot find base");h[o][l][1]=Ji(I[1],{r:o-O,c:l-R})}break;case"F":var P=0;for(u=1;u<S.length;++u)switch(S[u].charAt(0)){case"X":l=parseInt(S[u].slice(1))-1,++P;break;case"Y":for(o=parseInt(S[u].slice(1))-1,s=h.length;s<=o;++s)h[s]=[];break;case"M":y=parseInt(S[u].slice(1))/20;break;case"F":case"G":case"S":case"D":case"N":break;case"P":m=p[parseInt(S[u].slice(1))];break;case"W":for(w=S[u].slice(1).split(" "),s=parseInt(w[0],10);s<=parseInt(w[1],10);++s)y=parseInt(w[2],10),b[s-1]=0===y?{hidden:!0}:{wch:y},ui(b[s-1]);break;case"C":b[l=parseInt(S[u].slice(1))-1]||(b[l]={});break;case"R":v[o=parseInt(S[u].slice(1))-1]||(v[o]={}),y>0?(v[o].hpt=y,v[o].hpx=di(y)):0===y&&(v[o].hidden=!0);break;default:if(a&&a.WTF)throw new Error("SYLK bad record "+T)}P<1&&(m=null);break;default:if(a&&a.WTF)throw new Error("SYLK bad record "+T)}}return v.length>0&&(g["!rows"]=v),b.length>0&&(g["!cols"]=b),a&&a.sheetRows&&(h=h.slice(0,a.sheetRows)),[h,g]}function s(e,t){var r=function(e,t){switch(t.type){case"base64":return a(y(e),t);case"binary":return a(e,t);case"buffer":return a(k&&Buffer.isBuffer(e)?e.toString("binary"):C(e),t);case"array":return a(Xe(e),t)}throw new Error("Unrecognized type "+t.type)}(e,t),n=r[0],s=r[1],i=sn(n,t);return Ie(s).forEach((function(e){i[e]=s[e]})),i}function i(e,t,r,n){var a="C;Y"+(r+1)+";X"+(n+1)+";K";switch(e.t){case"n":a+=e.v||0,e.f&&!e.F&&(a+=";E"+Qi(e.f,{r,c:n}));break;case"b":a+=e.v?"TRUE":"FALSE";break;case"e":a+=e.w||e.v;break;case"d":a+='"'+(e.w||e.v)+'"';break;case"s":a+='"'+e.v.replace(/"/g,"").replace(/;/g,";;")+'"'}return a}return e["|"]=254,{to_workbook:function(e,t){return nn(s(e,t),t)},to_sheet:s,from_sheet:function(e,t){var r,n,a=["ID;PWXL;N;E"],s=[],o=tn(e["!ref"]),l=Array.isArray(e),c="\r\n";a.push("P;PGeneral"),a.push("F;P0;DG0G8;M255"),e["!cols"]&&(n=a,e["!cols"].forEach((function(e,t){var r="F;W"+(t+1)+" "+(t+1)+" ";e.hidden?r+="0":("number"!=typeof e.width||e.wpx||(e.wpx=ii(e.width)),"number"!=typeof e.wpx||e.wch||(e.wch=oi(e.wpx)),"number"==typeof e.wch&&(r+=Math.round(e.wch)))," "!=r.charAt(r.length-1)&&n.push(r)}))),e["!rows"]&&function(e,t){t.forEach((function(t,r){var n="F;";t.hidden?n+="M0;":t.hpt?n+="M"+20*t.hpt+";":t.hpx&&(n+="M"+20*hi(t.hpx)+";"),n.length>2&&e.push(n+"R"+(r+1))}))}(a,e["!rows"]),a.push("B;Y"+(o.e.r-o.s.r+1)+";X"+(o.e.c-o.s.c+1)+";D"+[o.s.c,o.s.r,o.e.c,o.e.r].join(" "));for(var f=o.s.r;f<=o.e.r;++f)for(var u=o.s.c;u<=o.e.c;++u){var h=Jr({r:f,c:u});(r=l?(e[f]||[])[u]:e[h])&&(null!=r.v||r.f&&!r.F)&&s.push(i(r,0,f,u))}return a.join(c)+c+s.join(c)+c+"E"+c}}}(),Rs=function(){function e(e,t){for(var r=e.split("\n"),n=-1,a=-1,s=0,i=[];s!==r.length;++s)if("BOT"!==r[s].trim()){if(!(n<0)){for(var o=r[s].trim().split(","),l=o[0],c=o[1],f=r[++s]||"";1&(f.match(/["]/g)||[]).length&&s<r.length-1;)f+="\n"+r[++s];switch(f=f.trim(),+l){case-1:if("BOT"===f){i[++n]=[],a=0;continue}if("EOD"!==f)throw new Error("Unrecognized DIF special command "+f);break;case 0:"TRUE"===f?i[n][a]=!0:"FALSE"===f?i[n][a]=!1:isNaN(qe(c))?isNaN(Je(c).getDate())?i[n][a]=c:i[n][a]=Ge(c):i[n][a]=qe(c),++a;break;case 1:(f=(f=f.slice(1,f.length-1)).replace(/""/g,'"'))&&f.match(/^=".*"$/)&&(f=f.slice(2,-1)),i[n][a++]=""!==f?f:null}if("EOD"===f)break}}else i[++n]=[],a=0;return t&&t.sheetRows&&(i=i.slice(0,t.sheetRows)),i}function t(t,r){return sn(function(t,r){switch(r.type){case"base64":return e(y(t),r);case"binary":return e(t,r);case"buffer":return e(k&&Buffer.isBuffer(t)?t.toString("binary"):C(t),r);case"array":return e(Xe(t),r)}throw new Error("Unrecognized type "+r.type)}(t,r),r)}return{to_workbook:function(e,r){return nn(t(e,r),r)},to_sheet:t,from_sheet:function(){var e=function(e,t,r,n,a){e.push(t),e.push(r+","+n),e.push('"'+a.replace(/"/g,'""')+'"')},t=function(e,t,r,n){e.push(t+","+r),e.push(1==t?'"'+n.replace(/"/g,'""')+'"':n)};return function(r){var n,a=[],s=tn(r["!ref"]),i=Array.isArray(r);e(a,"TABLE",0,1,"sheetjs"),e(a,"VECTORS",0,s.e.r-s.s.r+1,""),e(a,"TUPLES",0,s.e.c-s.s.c+1,""),e(a,"DATA",0,0,"");for(var o=s.s.r;o<=s.e.r;++o){t(a,-1,0,"BOT");for(var l=s.s.c;l<=s.e.c;++l){var c=Jr({r:o,c:l});if(n=i?(r[o]||[])[l]:r[c])switch(n.t){case"n":var f=n.w;f||null==n.v||(f=n.v),null==f?n.f&&!n.F?t(a,1,0,"="+n.f):t(a,1,0,""):t(a,0,f,"V");break;case"b":t(a,0,n.v?1:0,n.v?"TRUE":"FALSE");break;case"s":t(a,1,0,isNaN(n.v)?n.v:'="'+n.v+'"');break;case"d":n.w||(n.w=we(n.z||W[14],Me(Ge(n.v)))),t(a,0,n.w,"V");break;default:t(a,1,0,"")}else t(a,1,0,"")}}return t(a,-1,0,"EOD"),a.join("\r\n")}}()}}(),Ns=function(){function e(e){return e.replace(/\\/g,"\\b").replace(/:/g,"\\c").replace(/\n/g,"\\n")}function t(e,t){return sn(function(e,t){for(var r=e.split("\n"),n=-1,a=-1,s=0,i=[];s!==r.length;++s){var o=r[s].trim().split(":");if("cell"===o[0]){var l=Qr(o[1]);if(i.length<=l.r)for(n=i.length;n<=l.r;++n)i[n]||(i[n]=[]);switch(n=l.r,a=l.c,o[2]){case"t":i[n][a]=o[3].replace(/\\b/g,"\\").replace(/\\c/g,":").replace(/\\n/g,"\n");break;case"v":i[n][a]=+o[3];break;case"vtf":var c=o[o.length-1];case"vtc":"nl"===o[3]?i[n][a]=!!+o[4]:i[n][a]=+o[4],"vtf"==o[2]&&(i[n][a]=[i[n][a],c])}}}return t&&t.sheetRows&&(i=i.slice(0,t.sheetRows)),i}(e,t),t)}var r=["socialcalc:version:1.5","MIME-Version: 1.0","Content-Type: multipart/mixed; boundary=SocialCalcSpreadsheetControlSave"].join("\n"),n=["--SocialCalcSpreadsheetControlSave","Content-type: text/plain; charset=UTF-8"].join("\n")+"\n",a=["# SocialCalc Spreadsheet Control Save","part:sheet"].join("\n"),s="--SocialCalcSpreadsheetControlSave--";function i(t){if(!t||!t["!ref"])return"";for(var r,n=[],a=[],s="",i=Zr(t["!ref"]),o=Array.isArray(t),l=i.s.r;l<=i.e.r;++l)for(var c=i.s.c;c<=i.e.c;++c)if(s=Jr({r:l,c}),(r=o?(t[l]||[])[c]:t[s])&&null!=r.v&&"z"!==r.t){switch(a=["cell",s,"t"],r.t){case"s":case"str":a.push(e(r.v));break;case"n":r.f?(a[2]="vtf",a[3]="n",a[4]=r.v,a[5]=e(r.f)):(a[2]="v",a[3]=r.v);break;case"b":a[2]="vt"+(r.f?"f":"c"),a[3]="nl",a[4]=r.v?"1":"0",a[5]=e(r.f||(r.v?"TRUE":"FALSE"));break;case"d":var f=Me(Ge(r.v));a[2]="vtc",a[3]="nd",a[4]=""+f,a[5]=r.w||we(r.z||W[14],f);break;case"e":continue}n.push(a.join(":"))}return n.push("sheet:c:"+(i.e.c-i.s.c+1)+":r:"+(i.e.r-i.s.r+1)+":tvf:1"),n.push("valueformat:1:text-wiki"),n.join("\n")}return{to_workbook:function(e,r){return nn(t(e,r),r)},to_sheet:t,from_sheet:function(e){return[r,n,a,n,i(e),s].join("\n")}}}(),Is=function(){function e(e,t,r,n,a){a.raw?t[r][n]=e:""===e||("TRUE"===e?t[r][n]=!0:"FALSE"===e?t[r][n]=!1:isNaN(qe(e))?isNaN(Je(e).getDate())?t[r][n]=e:t[r][n]=Ge(e):t[r][n]=qe(e))}var t={44:",",9:"\t",59:";",124:"|"},r={44:3,9:2,59:1,124:0};function n(e){for(var n={},a=!1,s=0,i=0;s<e.length;++s)34==(i=e.charCodeAt(s))?a=!a:!a&&i in t&&(n[i]=(n[i]||0)+1);for(s in i=[],n)Object.prototype.hasOwnProperty.call(n,s)&&i.push([n[s],s]);if(!i.length)for(s in n=r)Object.prototype.hasOwnProperty.call(n,s)&&i.push([n[s],s]);return i.sort((function(e,t){return e[0]-t[0]||r[e[1]]-r[t[1]]})),t[i.pop()[1]]||44}function a(e,t){var r=t||{},a="",s=r.dense?[]:{},i={s:{c:0,r:0},e:{c:0,r:0}};"sep="==e.slice(0,4)?13==e.charCodeAt(5)&&10==e.charCodeAt(6)?(a=e.charAt(4),e=e.slice(7)):13==e.charCodeAt(5)||10==e.charCodeAt(5)?(a=e.charAt(4),e=e.slice(6)):a=n(e.slice(0,1024)):a=r&&r.FS?r.FS:n(e.slice(0,1024));var o=0,l=0,c=0,f=0,u=0,h=a.charCodeAt(0),d=!1,p=0,m=e.charCodeAt(0);e=e.replace(/\r\n/gm,"\n");var g,v,b=null!=r.dateNF?(v=(v="number"==typeof(g=r.dateNF)?W[g]:g).replace(xe,"(\\d+)"),new RegExp("^"+v+"$")):null;function w(){var t=e.slice(f,u),n={};if('"'==t.charAt(0)&&'"'==t.charAt(t.length-1)&&(t=t.slice(1,-1).replace(/""/g,'"')),0===t.length)n.t="z";else if(r.raw)n.t="s",n.v=t;else if(0===t.trim().length)n.t="s",n.v=t;else if(61==t.charCodeAt(0))34==t.charCodeAt(1)&&34==t.charCodeAt(t.length-1)?(n.t="s",n.v=t.slice(2,-1).replace(/""/g,'"')):1!=t.length?(n.t="n",n.f=t.slice(1)):(n.t="s",n.v=t);else if("TRUE"==t)n.t="b",n.v=!0;else if("FALSE"==t)n.t="b",n.v=!1;else if(isNaN(c=qe(t)))if(!isNaN(Je(t).getDate())||b&&t.match(b)){n.z=r.dateNF||W[14];var a=0;b&&t.match(b)&&(t=function(e,t,r){var n=-1,a=-1,s=-1,i=-1,o=-1,l=-1;(t.match(xe)||[]).forEach((function(e,t){var c=parseInt(r[t+1],10);switch(e.toLowerCase().charAt(0)){case"y":n=c;break;case"d":s=c;break;case"h":i=c;break;case"s":l=c;break;case"m":i>=0?o=c:a=c}})),l>=0&&-1==o&&a>=0&&(o=a,a=-1);var c=(""+(n>=0?n:(new Date).getFullYear())).slice(-4)+"-"+("00"+(a>=1?a:1)).slice(-2)+"-"+("00"+(s>=1?s:1)).slice(-2);7==c.length&&(c="0"+c),8==c.length&&(c="20"+c);var f=("00"+(i>=0?i:0)).slice(-2)+":"+("00"+(o>=0?o:0)).slice(-2)+":"+("00"+(l>=0?l:0)).slice(-2);return-1==i&&-1==o&&-1==l?c:-1==n&&-1==a&&-1==s?f:c+"T"+f}(0,r.dateNF,t.match(b)||[]),a=1),r.cellDates?(n.t="d",n.v=Ge(t,a)):(n.t="n",n.v=Me(Ge(t,a))),!1!==r.cellText&&(n.w=we(n.z,n.v instanceof Date?Me(n.v):n.v)),r.cellNF||delete n.z}else n.t="s",n.v=t;else n.t="n",!1!==r.cellText&&(n.w=t),n.v=c;if("z"==n.t||(r.dense?(s[o]||(s[o]=[]),s[o][l]=n):s[Jr({c:l,r:o})]=n),f=u+1,m=e.charCodeAt(f),i.e.c<l&&(i.e.c=l),i.e.r<o&&(i.e.r=o),p==h)++l;else if(l=0,++o,r.sheetRows&&r.sheetRows<=o)return!0}e:for(;u<e.length;++u)switch(p=e.charCodeAt(u)){case 34:34===m&&(d=!d);break;case h:case 10:case 13:if(!d&&w())break e}return u-f>0&&w(),s["!ref"]=en(i),s}function s(t,r){var n="",s="string"==r.type?[0,0,0,0]:df(t,r);switch(r.type){case"base64":n=y(t);break;case"binary":case"string":n=t;break;case"buffer":n=65001==r.codepage?t.toString("utf8"):r.codepage&&void 0!==d?d.utils.decode(r.codepage,t):k&&Buffer.isBuffer(t)?t.toString("binary"):C(t);break;case"array":n=Xe(t);break;default:throw new Error("Unrecognized type "+r.type)}return 239==s[0]&&187==s[1]&&191==s[2]?n=Ft(n.slice(3)):"string"!=r.type&&"buffer"!=r.type&&65001==r.codepage?n=Ft(n):"binary"==r.type&&void 0!==d&&r.codepage&&(n=d.utils.decode(r.codepage,d.utils.encode(28591,n))),"socialcalc:version:"==n.slice(0,19)?Ns.to_sheet("string"==r.type?n:Ft(n),r):function(t,r){return r&&r.PRN?r.FS||"sep="==t.slice(0,4)||t.indexOf("\t")>=0||t.indexOf(",")>=0||t.indexOf(";")>=0?a(t,r):sn(function(t,r){var n=r||{},a=[];if(!t||0===t.length)return a;for(var s=t.split(/[\r\n]/),i=s.length-1;i>=0&&0===s[i].length;)--i;for(var o=10,l=0,c=0;c<=i;++c)-1==(l=s[c].indexOf(" "))?l=s[c].length:l++,o=Math.max(o,l);for(c=0;c<=i;++c){a[c]=[];var f=0;for(e(s[c].slice(0,o).trim(),a,c,f,n),f=1;f<=(s[c].length-o)/10+1;++f)e(s[c].slice(o+10*(f-1),o+10*f).trim(),a,c,f,n)}return n.sheetRows&&(a=a.slice(0,n.sheetRows)),a}(t,r),r):a(t,r)}(n,r)}return{to_workbook:function(e,t){return nn(s(e,t),t)},to_sheet:s,from_sheet:function(e){for(var t,r=[],n=tn(e["!ref"]),a=Array.isArray(e),s=n.s.r;s<=n.e.r;++s){for(var i=[],o=n.s.c;o<=n.e.c;++o){var l=Jr({r:s,c:o});if((t=a?(e[s]||[])[o]:e[l])&&null!=t.v){for(var c=(t.w||(rn(t),t.w)||"").slice(0,10);c.length<10;)c+=" ";i.push(c+(0===o?" ":""))}else i.push("          ")}r.push(i.join(""))}return r.join("\n")}}}(),Ps=function(){function e(e,t,r){if(e){Mr(e,e.l||0);for(var n=r.Enum||b;e.l<e.length;){var a=e.read_shift(2),s=n[a]||n[65535],i=e.read_shift(2),o=e.l+i,l=s.f&&s.f(e,i,r);if(e.l=o,t(l,s,a))return}}}function t(t,r){if(!t)return t;var n=r||{},a=n.dense?[]:{},s="Sheet1",i="",o=0,l={},c=[],f=[],u={s:{r:0,c:0},e:{r:0,c:0}},h=n.sheetRows||0;if(0==t[2]&&(8==t[3]||9==t[3])&&t.length>=16&&5==t[14]&&108===t[15])throw new Error("Unsupported Works 3 for Mac file");if(2==t[2])n.Enum=b,e(t,(function(e,t,r){switch(r){case 0:n.vers=e,e>=4096&&(n.qpro=!0);break;case 6:u=e;break;case 204:e&&(i=e);break;case 222:i=e;break;case 15:case 51:n.qpro||(e[1].v=e[1].v.slice(1));case 13:case 14:case 16:14==r&&112==(112&e[2])&&(15&e[2])>1&&(15&e[2])<15&&(e[1].z=n.dateNF||W[14],n.cellDates&&(e[1].t="d",e[1].v=We(e[1].v))),n.qpro&&e[3]>o&&(a["!ref"]=en(u),l[s]=a,c.push(s),a=n.dense?[]:{},u={s:{r:0,c:0},e:{r:0,c:0}},o=e[3],s=i||"Sheet"+(o+1),i="");var f=n.dense?(a[e[0].r]||[])[e[0].c]:a[Jr(e[0])];if(f){f.t=e[1].t,f.v=e[1].v,null!=e[1].z&&(f.z=e[1].z),null!=e[1].f&&(f.f=e[1].f);break}n.dense?(a[e[0].r]||(a[e[0].r]=[]),a[e[0].r][e[0].c]=e[1]):a[Jr(e[0])]=e[1]}}),n);else{if(26!=t[2]&&14!=t[2])throw new Error("Unrecognized LOTUS BOF "+t[2]);n.Enum=w,14==t[2]&&(n.qpro=!0,t.l=0),e(t,(function(e,t,r){switch(r){case 204:s=e;break;case 22:e[1].v=e[1].v.slice(1);case 23:case 24:case 25:case 37:case 39:case 40:if(e[3]>o&&(a["!ref"]=en(u),l[s]=a,c.push(s),a=n.dense?[]:{},u={s:{r:0,c:0},e:{r:0,c:0}},o=e[3],s="Sheet"+(o+1)),h>0&&e[0].r>=h)break;n.dense?(a[e[0].r]||(a[e[0].r]=[]),a[e[0].r][e[0].c]=e[1]):a[Jr(e[0])]=e[1],u.e.c<e[0].c&&(u.e.c=e[0].c),u.e.r<e[0].r&&(u.e.r=e[0].r);break;case 27:e[14e3]&&(f[e[14e3][0]]=e[14e3][1]);break;case 1537:f[e[0]]=e[1],e[0]==o&&(s=e[1])}}),n)}if(a["!ref"]=en(u),l[i||s]=a,c.push(i||s),!f.length)return{SheetNames:c,Sheets:l};for(var d={},p=[],m=0;m<f.length;++m)l[c[m]]?(p.push(f[m]||c[m]),d[f[m]]=l[f[m]]||l[c[m]]):(p.push(f[m]),d[f[m]]={"!ref":"A1"});return{SheetNames:p,Sheets:d}}function r(e,t,r){var n=[{c:0,r:0},{t:"n",v:0},0,0];return r.qpro&&20768!=r.vers?(n[0].c=e.read_shift(1),n[3]=e.read_shift(1),n[0].r=e.read_shift(2),e.l+=2):(n[2]=e.read_shift(1),n[0].c=e.read_shift(2),n[0].r=e.read_shift(2)),n}function n(e,t,n){var a=e.l+t,s=r(e,0,n);if(s[1].t="s",20768==n.vers){e.l++;var i=e.read_shift(1);return s[1].v=e.read_shift(i,"utf8"),s}return n.qpro&&e.l++,s[1].v=e.read_shift(a-e.l,"cstr"),s}function a(e,t,r){var n=Br(7+r.length);n.write_shift(1,255),n.write_shift(2,t),n.write_shift(2,e),n.write_shift(1,39);for(var a=0;a<n.length;++a){var s=r.charCodeAt(a);n.write_shift(1,s>=128?95:s)}return n.write_shift(1,0),n}function s(e,t,r){var n=Br(7);return n.write_shift(1,255),n.write_shift(2,t),n.write_shift(2,e),n.write_shift(2,r,"i"),n}function i(e,t,r){var n=Br(13);return n.write_shift(1,255),n.write_shift(2,t),n.write_shift(2,e),n.write_shift(8,r,"f"),n}function o(e,t,r){var n=32768&t;return t=(n?e:0)+((t&=-32769)>=8192?t-16384:t),(n?"":"$")+(r?qr(t):Yr(t))}var l={51:["FALSE",0],52:["TRUE",0],70:["LEN",1],80:["SUM",69],81:["AVERAGEA",69],82:["COUNTA",69],83:["MINA",69],84:["MAXA",69],111:["T",1]},f=["","","","","","","","","","+","-","*","/","^","=","<>","<=",">=","<",">","","","","","&","","","","","","",""];function u(e){var t=[{c:0,r:0},{t:"n",v:0},0];return t[0].r=e.read_shift(2),t[3]=e[e.l++],t[0].c=e[e.l++],t}function h(e,t,r,n){var a=Br(6+n.length);a.write_shift(2,e),a.write_shift(1,r),a.write_shift(1,t),a.write_shift(1,39);for(var s=0;s<n.length;++s){var i=n.charCodeAt(s);a.write_shift(1,i>=128?95:i)}return a.write_shift(1,0),a}function d(e,t){var r=u(e),n=e.read_shift(4),a=e.read_shift(4),s=e.read_shift(2);if(65535==s)return 0===n&&3221225472===a?(r[1].t="e",r[1].v=15):0===n&&3489660928===a?(r[1].t="e",r[1].v=42):r[1].v=0,r;var i=32768&s;return s=(32767&s)-16446,r[1].v=(1-2*i)*(a*Math.pow(2,s+32)+n*Math.pow(2,s)),r}function p(e,t,r,n){var a=Br(14);if(a.write_shift(2,e),a.write_shift(1,r),a.write_shift(1,t),0==n)return a.write_shift(4,0),a.write_shift(4,0),a.write_shift(2,65535),a;var s,i=0,o=0,l=0;return n<0&&(i=1,n=-n),o=0|Math.log2(n),0==(2147483648&(l=(n/=Math.pow(2,o-31))>>>0))&&(++o,l=(n/=2)>>>0),n-=l,l|=2147483648,l>>>=0,s=(n*=Math.pow(2,32))>>>0,a.write_shift(4,s),a.write_shift(4,l),o+=16383+(i?32768:0),a.write_shift(2,o),a}function m(e,t){var r=u(e),n=e.read_shift(8,"f");return r[1].v=n,r}function g(e,t){return 0==e[e.l+t-1]?e.read_shift(t,"cstr"):""}function v(e,t){var r=Br(5+e.length);r.write_shift(2,14e3),r.write_shift(2,t);for(var n=0;n<e.length;++n){var a=e.charCodeAt(n);r[r.l++]=a>127?95:a}return r[r.l++]=0,r}var b={0:{n:"BOF",f:Ia},1:{n:"EOF"},2:{n:"CALCMODE"},3:{n:"CALCORDER"},4:{n:"SPLIT"},5:{n:"SYNC"},6:{n:"RANGE",f:function(e,t,r){var n={s:{c:0,r:0},e:{c:0,r:0}};return 8==t&&r.qpro?(n.s.c=e.read_shift(1),e.l++,n.s.r=e.read_shift(2),n.e.c=e.read_shift(1),e.l++,n.e.r=e.read_shift(2),n):(n.s.c=e.read_shift(2),n.s.r=e.read_shift(2),12==t&&r.qpro&&(e.l+=2),n.e.c=e.read_shift(2),n.e.r=e.read_shift(2),12==t&&r.qpro&&(e.l+=2),65535==n.s.c&&(n.s.c=n.e.c=n.s.r=n.e.r=0),n)}},7:{n:"WINDOW1"},8:{n:"COLW1"},9:{n:"WINTWO"},10:{n:"COLW2"},11:{n:"NAME"},12:{n:"BLANK"},13:{n:"INTEGER",f:function(e,t,n){var a=r(e,0,n);return a[1].v=e.read_shift(2,"i"),a}},14:{n:"NUMBER",f:function(e,t,n){var a=r(e,0,n);return a[1].v=e.read_shift(8,"f"),a}},15:{n:"LABEL",f:n},16:{n:"FORMULA",f:function(e,t,n){var a=e.l+t,s=r(e,0,n);if(s[1].v=e.read_shift(8,"f"),n.qpro)e.l=a;else{var i=e.read_shift(2);!function(e,t){Mr(e,0);for(var r=[],n=0,a="",s="",i="",c="";e.l<e.length;){var u=e[e.l++];switch(u){case 0:r.push(e.read_shift(8,"f"));break;case 1:s=o(t[0].c,e.read_shift(2),!0),a=o(t[0].r,e.read_shift(2),!1),r.push(s+a);break;case 2:var h=o(t[0].c,e.read_shift(2),!0),d=o(t[0].r,e.read_shift(2),!1);s=o(t[0].c,e.read_shift(2),!0),a=o(t[0].r,e.read_shift(2),!1),r.push(h+d+":"+s+a);break;case 3:if(e.l<e.length)return void console.error("WK1 premature formula end");break;case 4:r.push("("+r.pop()+")");break;case 5:r.push(e.read_shift(2));break;case 6:for(var p="";u=e[e.l++];)p+=String.fromCharCode(u);r.push('"'+p.replace(/"/g,'""')+'"');break;case 8:r.push("-"+r.pop());break;case 23:r.push("+"+r.pop());break;case 22:r.push("NOT("+r.pop()+")");break;case 20:case 21:c=r.pop(),i=r.pop(),r.push(["AND","OR"][u-20]+"("+i+","+c+")");break;default:if(u<32&&f[u])c=r.pop(),i=r.pop(),r.push(i+f[u]+c);else{if(!l[u])return u<=7?console.error("WK1 invalid opcode "+u.toString(16)):u<=24?console.error("WK1 unsupported op "+u.toString(16)):u<=30?console.error("WK1 invalid opcode "+u.toString(16)):u<=115?console.error("WK1 unsupported function opcode "+u.toString(16)):console.error("WK1 unrecognized opcode "+u.toString(16));if(69==(n=l[u][1])&&(n=e[e.l++]),n>r.length)return void console.error("WK1 bad formula parse 0x"+u.toString(16)+":|"+r.join("|")+"|");var m=r.slice(-n);r.length-=n,r.push(l[u][0]+"("+m.join(",")+")")}}}1==r.length?t[1].f=""+r[0]:console.error("WK1 bad formula parse |"+r.join("|")+"|")}(e.slice(e.l,e.l+i),s),e.l+=i}return s}},24:{n:"TABLE"},25:{n:"ORANGE"},26:{n:"PRANGE"},27:{n:"SRANGE"},28:{n:"FRANGE"},29:{n:"KRANGE1"},32:{n:"HRANGE"},35:{n:"KRANGE2"},36:{n:"PROTEC"},37:{n:"FOOTER"},38:{n:"HEADER"},39:{n:"SETUP"},40:{n:"MARGINS"},41:{n:"LABELFMT"},42:{n:"TITLES"},43:{n:"SHEETJS"},45:{n:"GRAPH"},46:{n:"NGRAPH"},47:{n:"CALCCOUNT"},48:{n:"UNFORMATTED"},49:{n:"CURSORW12"},50:{n:"WINDOW"},51:{n:"STRING",f:n},55:{n:"PASSWORD"},56:{n:"LOCKED"},60:{n:"QUERY"},61:{n:"QUERYNAME"},62:{n:"PRINT"},63:{n:"PRINTNAME"},64:{n:"GRAPH2"},65:{n:"GRAPHNAME"},66:{n:"ZOOM"},67:{n:"SYMSPLIT"},68:{n:"NSROWS"},69:{n:"NSCOLS"},70:{n:"RULER"},71:{n:"NNAME"},72:{n:"ACOMM"},73:{n:"AMACRO"},74:{n:"PARSE"},102:{n:"PRANGES??"},103:{n:"RRANGES??"},104:{n:"FNAME??"},105:{n:"MRANGES??"},204:{n:"SHEETNAMECS",f:g},222:{n:"SHEETNAMELP",f:function(e,t){var r=e[e.l++];r>t-1&&(r=t-1);for(var n="";n.length<r;)n+=String.fromCharCode(e[e.l++]);return n}},65535:{n:""}},w={0:{n:"BOF"},1:{n:"EOF"},2:{n:"PASSWORD"},3:{n:"CALCSET"},4:{n:"WINDOWSET"},5:{n:"SHEETCELLPTR"},6:{n:"SHEETLAYOUT"},7:{n:"COLUMNWIDTH"},8:{n:"HIDDENCOLUMN"},9:{n:"USERRANGE"},10:{n:"SYSTEMRANGE"},11:{n:"ZEROFORCE"},12:{n:"SORTKEYDIR"},13:{n:"FILESEAL"},14:{n:"DATAFILLNUMS"},15:{n:"PRINTMAIN"},16:{n:"PRINTSTRING"},17:{n:"GRAPHMAIN"},18:{n:"GRAPHSTRING"},19:{n:"??"},20:{n:"ERRCELL"},21:{n:"NACELL"},22:{n:"LABEL16",f:function(e,t){var r=u(e);return r[1].t="s",r[1].v=e.read_shift(t-4,"cstr"),r}},23:{n:"NUMBER17",f:d},24:{n:"NUMBER18",f:function(e,t){var r=u(e);r[1].v=e.read_shift(2);var n=r[1].v>>1;if(1&r[1].v)switch(7&n){case 0:n=5e3*(n>>3);break;case 1:n=500*(n>>3);break;case 2:n=(n>>3)/20;break;case 3:n=(n>>3)/200;break;case 4:n=(n>>3)/2e3;break;case 5:n=(n>>3)/2e4;break;case 6:n=(n>>3)/16;break;case 7:n=(n>>3)/64}return r[1].v=n,r}},25:{n:"FORMULA19",f:function(e,t){var r=d(e);return e.l+=t-14,r}},26:{n:"FORMULA1A"},27:{n:"XFORMAT",f:function(e,t){for(var r={},n=e.l+t;e.l<n;){var a=e.read_shift(2);if(14e3==a){for(r[a]=[0,""],r[a][0]=e.read_shift(2);e[e.l];)r[a][1]+=String.fromCharCode(e[e.l]),e.l++;e.l++}}return r}},28:{n:"DTLABELMISC"},29:{n:"DTLABELCELL"},30:{n:"GRAPHWINDOW"},31:{n:"CPA"},32:{n:"LPLAUTO"},33:{n:"QUERY"},34:{n:"HIDDENSHEET"},35:{n:"??"},37:{n:"NUMBER25",f:function(e,t){var r=u(e),n=e.read_shift(4);return r[1].v=n>>6,r}},38:{n:"??"},39:{n:"NUMBER27",f:m},40:{n:"FORMULA28",f:function(e,t){var r=m(e);return e.l+=t-10,r}},142:{n:"??"},147:{n:"??"},150:{n:"??"},151:{n:"??"},152:{n:"??"},153:{n:"??"},154:{n:"??"},155:{n:"??"},156:{n:"??"},163:{n:"??"},174:{n:"??"},175:{n:"??"},176:{n:"??"},177:{n:"??"},184:{n:"??"},185:{n:"??"},186:{n:"??"},187:{n:"??"},188:{n:"??"},195:{n:"??"},201:{n:"??"},204:{n:"SHEETNAMECS",f:g},205:{n:"??"},206:{n:"??"},207:{n:"??"},208:{n:"??"},256:{n:"??"},259:{n:"??"},260:{n:"??"},261:{n:"??"},262:{n:"??"},263:{n:"??"},265:{n:"??"},266:{n:"??"},267:{n:"??"},268:{n:"??"},270:{n:"??"},271:{n:"??"},384:{n:"??"},389:{n:"??"},390:{n:"??"},393:{n:"??"},396:{n:"??"},512:{n:"??"},514:{n:"??"},513:{n:"??"},516:{n:"??"},517:{n:"??"},640:{n:"??"},641:{n:"??"},642:{n:"??"},643:{n:"??"},644:{n:"??"},645:{n:"??"},646:{n:"??"},647:{n:"??"},648:{n:"??"},658:{n:"??"},659:{n:"??"},660:{n:"??"},661:{n:"??"},662:{n:"??"},665:{n:"??"},666:{n:"??"},768:{n:"??"},772:{n:"??"},1537:{n:"SHEETINFOQP",f:function(e,t,r){if(r.qpro&&!(t<21)){var n=e.read_shift(1);return e.l+=17,e.l+=1,e.l+=2,[n,e.read_shift(t-21,"cstr")]}}},1600:{n:"??"},1602:{n:"??"},1793:{n:"??"},1794:{n:"??"},1795:{n:"??"},1796:{n:"??"},1920:{n:"??"},2048:{n:"??"},2049:{n:"??"},2052:{n:"??"},2688:{n:"??"},10998:{n:"??"},12849:{n:"??"},28233:{n:"??"},28484:{n:"??"},65535:{n:""}};return{sheet_to_wk1:function(e,t){var r=t||{};if(+r.codepage>=0&&c(+r.codepage),"string"==r.type)throw new Error("Cannot write WK1 to JS string");var n,o=Wr(),l=tn(e["!ref"]),f=Array.isArray(e),u=[];fc(o,0,(1030,(n=Br(2)).write_shift(2,1030),n)),fc(o,6,function(e){var t=Br(8);return t.write_shift(2,e.s.c),t.write_shift(2,e.s.r),t.write_shift(2,e.e.c),t.write_shift(2,e.e.r),t}(l));for(var h=Math.min(l.e.r,8191),d=l.s.r;d<=h;++d)for(var p=Yr(d),m=l.s.c;m<=l.e.c;++m){d===l.s.r&&(u[m]=qr(m));var g=u[m]+p,v=f?(e[d]||[])[m]:e[g];v&&"z"!=v.t&&("n"==v.t?(0|v.v)==v.v&&v.v>=-32768&&v.v<=32767?fc(o,13,s(d,m,v.v)):fc(o,14,i(d,m,v.v)):fc(o,15,a(d,m,rn(v).slice(0,239))))}return fc(o,1),o.end()},book_to_wk3:function(e,t){var r=t||{};if(+r.codepage>=0&&c(+r.codepage),"string"==r.type)throw new Error("Cannot write WK3 to JS string");var n=Wr();fc(n,0,function(e){var t=Br(26);t.write_shift(2,4096),t.write_shift(2,4),t.write_shift(4,0);for(var r=0,n=0,a=0,s=0;s<e.SheetNames.length;++s){var i=e.SheetNames[s],o=e.Sheets[i];if(o&&o["!ref"]){++a;var l=Zr(o["!ref"]);r<l.e.r&&(r=l.e.r),n<l.e.c&&(n=l.e.c)}}return r>8191&&(r=8191),t.write_shift(2,r),t.write_shift(1,a),t.write_shift(1,n),t.write_shift(2,0),t.write_shift(2,0),t.write_shift(1,1),t.write_shift(1,2),t.write_shift(4,0),t.write_shift(4,0),t}(e));for(var a=0,s=0;a<e.SheetNames.length;++a)(e.Sheets[e.SheetNames[a]]||{})["!ref"]&&fc(n,27,v(e.SheetNames[a],s++));var i=0;for(a=0;a<e.SheetNames.length;++a){var o=e.Sheets[e.SheetNames[a]];if(o&&o["!ref"]){for(var l=tn(o["!ref"]),f=Array.isArray(o),u=[],d=Math.min(l.e.r,8191),m=l.s.r;m<=d;++m)for(var g=Yr(m),b=l.s.c;b<=l.e.c;++b){m===l.s.r&&(u[b]=qr(b));var w=u[b]+g,y=f?(o[m]||[])[b]:o[w];y&&"z"!=y.t&&("n"==y.t?fc(n,23,p(m,b,i,y.v)):fc(n,22,h(m,b,i,rn(y).slice(0,239))))}++i}}return fc(n,1),n.end()},to_workbook:function(e,r){switch(r.type){case"base64":return t(x(y(e)),r);case"binary":return t(x(e),r);case"buffer":case"array":return t(e,r)}throw"Unsupported type "+r.type}}}(),Ds=function(){var e=Mt("t"),t=Mt("rPr");function r(r){var n=r.match(e);if(!n)return{t:"s",v:""};var a={t:"s",v:Tt(n[1])},s=r.match(t);return s&&(a.s=function(e){var t={},r=e.match(mt),n=0,a=!1;if(r)for(;n!=r.length;++n){var s=bt(r[n]);switch(s[0].replace(/\w*:/g,"")){case"<condense":case"<extend":break;case"<shadow":if(!s.val)break;case"<shadow>":case"<shadow/>":t.shadow=1;break;case"</shadow>":break;case"<charset":if("1"==s.val)break;t.cp=o[parseInt(s.val,10)];break;case"<outline":if(!s.val)break;case"<outline>":case"<outline/>":t.outline=1;break;case"</outline>":break;case"<rFont":t.name=s.val;break;case"<sz":t.sz=s.val;break;case"<strike":if(!s.val)break;case"<strike>":case"<strike/>":t.strike=1;break;case"</strike>":break;case"<u":if(!s.val)break;switch(s.val){case"double":t.uval="double";break;case"singleAccounting":t.uval="single-accounting";break;case"doubleAccounting":t.uval="double-accounting"}case"<u>":case"<u/>":t.u=1;break;case"</u>":break;case"<b":if("0"==s.val)break;case"<b>":case"<b/>":t.b=1;break;case"</b>":break;case"<i":if("0"==s.val)break;case"<i>":case"<i/>":t.i=1;break;case"</i>":break;case"<color":s.rgb&&(t.color=s.rgb.slice(2,8));break;case"<color>":case"<color/>":case"</color>":break;case"<family":t.family=s.val;break;case"<family>":case"<family/>":case"</family>":break;case"<vertAlign":t.valign=s.val;break;case"<vertAlign>":case"<vertAlign/>":case"</vertAlign>":case"<scheme":case"<scheme>":case"<scheme/>":case"</scheme>":case"<extLst":case"<extLst>":case"</extLst>":break;case"<ext":a=!0;break;case"</ext>":a=!1;break;default:if(47!==s[0].charCodeAt(1)&&!a)throw new Error("Unrecognized rich format "+s[0])}}return t}(s[1])),a}var n=/<(?:\w+:)?r>/g,a=/<\/(?:\w+:)?r>/;return function(e){return e.replace(n,"").split(a).map(r).filter((function(e){return e.v}))}}(),Fs=function(){var e=/(\r\n|\n)/g;function t(t){var r=[[],t.v,[]];return t.v?(t.s&&function(e,t,r){var n=[];e.u&&n.push("text-decoration: underline;"),e.uval&&n.push("text-underline-style:"+e.uval+";"),e.sz&&n.push("font-size:"+e.sz+"pt;"),e.outline&&n.push("text-effect: outline;"),e.shadow&&n.push("text-shadow: auto;"),t.push('<span style="'+n.join("")+'">'),e.b&&(t.push("<b>"),r.push("</b>")),e.i&&(t.push("<i>"),r.push("</i>")),e.strike&&(t.push("<s>"),r.push("</s>"));var a=e.valign||"";"superscript"==a||"super"==a?a="sup":"subscript"==a&&(a="sub"),""!=a&&(t.push("<"+a+">"),r.push("</"+a+">")),r.push("</span>")}(t.s,r[0],r[2]),r[0].join("")+r[1].replace(e,"<br/>")+r[2].join("")):""}return function(e){return e.map(t).join("")}}(),Ls=/<(?:\w+:)?t[^>]*>([^<]*)<\/(?:\w+:)?t>/g,Ms=/<(?:\w+:)?r>/,Us=/<(?:\w+:)?rPh.*?>([\s\S]*?)<\/(?:\w+:)?rPh>/g;function Bs(e,t){var r=!t||t.cellHTML,n={};return e?(e.match(/^\s*<(?:\w+:)?t[^>]*>/)?(n.t=Tt(Ft(e.slice(e.indexOf(">")+1).split(/<\/(?:\w+:)?t>/)[0]||"")),n.r=Ft(e),r&&(n.h=At(n.t))):e.match(Ms)&&(n.r=Ft(e),n.t=Tt(Ft((e.replace(Us,"").match(Ls)||[]).join("").replace(mt,""))),r&&(n.h=Fs(Ds(n.r)))),n):{t:""}}var zs=/<(?:\w+:)?sst([^>]*)>([\s\S]*)<\/(?:\w+:)?sst>/,Ws=/<(?:\w+:)?(?:si|sstItem)>/g,Hs=/<\/(?:\w+:)?(?:si|sstItem)>/,js=/^\s|\s$|[\t\n\r]/;function Vs(e,t){if(!t.bookSST)return"";var r=[ht];r[r.length]=Gt("sst",null,{xmlns:tr[0],count:e.Count,uniqueCount:e.Unique});for(var n=0;n!=e.length;++n)if(null!=e[n]){var a=e[n],s="<si>";a.r?s+=a.r:(s+="<t",a.t||(a.t=""),a.t.match(js)&&(s+=' xml:space="preserve"'),s+=">"+xt(a.t)+"</t>"),s+="</si>",r[r.length]=s}return r.length>2&&(r[r.length]="</sst>",r[1]=r[1].replace("/>",">")),r.join("")}function $s(e){var t,r,n,a=Wr();Hr(a,159,function(e,t){return t||(t=Br(8)),t.write_shift(4,e.Count),t.write_shift(4,e.Unique),t}(e));for(var s=0;s<e.length;++s)Hr(a,19,(t=e[s],n=void 0,n=!1,null==(r=void 0)&&(n=!0,r=Br(15+4*t.t.length)),r.write_shift(1,0),cn(t.t,r),n?r.slice(0,r.l):r));return Hr(a,160),a.end()}function Gs(e){if(void 0!==d)return d.utils.encode(s,e);for(var t=[],r=e.split(""),n=0;n<r.length;++n)t[n]=r[n].charCodeAt(0);return t}function Xs(e,t){var r={};return r.Major=e.read_shift(2),r.Minor=e.read_shift(2),t>=4&&(e.l+=t-4),r}function Ys(e){for(var t=e.read_shift(4),r=e.l+t-4,n={},a=e.read_shift(4),s=[];a-- >0;)s.push({t:e.read_shift(4),v:e.read_shift(0,"lpp4")});if(n.name=e.read_shift(0,"lpp4"),n.comps=s,e.l!=r)throw new Error("Bad DataSpaceMapEntry: "+e.l+" != "+r);return n}function Ks(e,t){var r=e.l+t,n={};n.Flags=63&e.read_shift(4),e.l+=4,n.AlgID=e.read_shift(4);var a=!1;switch(n.AlgID){case 26126:case 26127:case 26128:a=36==n.Flags;break;case 26625:a=4==n.Flags;break;case 0:a=16==n.Flags||4==n.Flags||36==n.Flags;break;default:throw"Unrecognized encryption algorithm: "+n.AlgID}if(!a)throw new Error("Encryption Flags/AlgID mismatch");return n.AlgIDHash=e.read_shift(4),n.KeySize=e.read_shift(4),n.ProviderType=e.read_shift(4),e.l+=8,n.CSPName=e.read_shift(r-e.l>>1,"utf16le"),e.l=r,n}function qs(e,t){var r={},n=e.l+t;return e.l+=4,r.Salt=e.slice(e.l,e.l+16),e.l+=16,r.Verifier=e.slice(e.l,e.l+16),e.l+=16,e.read_shift(4),r.VerifierHash=e.slice(e.l,n),e.l=n,r}function Qs(e){if(36!=(63&e.read_shift(4)))throw new Error("EncryptionInfo mismatch");var t=e.read_shift(4);return{t:"Std",h:Ks(e,t),v:qs(e,e.length-e.l)}}function Js(){throw new Error("File is password-protected: ECMA-376 Extensible")}function Zs(e){var t=["saltSize","blockSize","keyBits","hashSize","cipherAlgorithm","cipherChaining","hashAlgorithm","saltValue"];e.l+=4;var r=e.read_shift(e.length-e.l,"utf8"),n={};return r.replace(mt,(function(e){var r=bt(e);switch(wt(r[0])){case"<?xml":case"<encryption":case"</encryption>":case"</keyEncryptors>":case"</keyEncryptor>":break;case"<keyData":t.forEach((function(e){n[e]=r[e]}));break;case"<dataIntegrity":n.encryptedHmacKey=r.encryptedHmacKey,n.encryptedHmacValue=r.encryptedHmacValue;break;case"<keyEncryptors>":case"<keyEncryptors":n.encs=[];break;case"<keyEncryptor":n.uri=r.uri;break;case"<encryptedKey":n.encs.push(r);break;default:throw r[0]}})),n}function ei(e){var t,r,n=0,a=Gs(e),s=a.length+1;for((t=S(s))[0]=a.length,r=1;r!=s;++r)t[r]=a[r-1];for(r=s-1;r>=0;--r)n=((0==(16384&n)?0:1)|n<<1&32767)^t[r];return 52811^n}var ti=function(){var e=[187,255,255,186,255,255,185,128,0,190,15,0,191,15,0],t=[57840,7439,52380,33984,4364,3600,61902,12606,6258,57657,54287,34041,10252,43370,20163],r=[44796,19929,39858,10053,20106,40212,10761,31585,63170,64933,60267,50935,40399,11199,17763,35526,1453,2906,5812,11624,23248,885,1770,3540,7080,14160,28320,56640,55369,41139,20807,41614,21821,43642,17621,28485,56970,44341,19019,38038,14605,29210,60195,50791,40175,10751,21502,43004,24537,18387,36774,3949,7898,15796,31592,63184,47201,24803,49606,37805,14203,28406,56812,17824,35648,1697,3394,6788,13576,27152,43601,17539,35078,557,1114,2228,4456,30388,60776,51953,34243,7079,14158,28316,14128,28256,56512,43425,17251,34502,7597,13105,26210,52420,35241,883,1766,3532,4129,8258,16516,33032,4657,9314,18628],n=function(e,t){return 255&((r=e^t)/2|128*r);var r};return function(a){for(var s,i,o,l=Gs(a),c=function(e){for(var n=t[e.length-1],a=104,s=e.length-1;s>=0;--s)for(var i=e[s],o=0;7!=o;++o)64&i&&(n^=r[a]),i*=2,--a;return n}(l),f=l.length,u=S(16),h=0;16!=h;++h)u[h]=0;for(1==(1&f)&&(s=c>>8,u[f]=n(e[0],s),--f,s=255&c,i=l[l.length-1],u[f]=n(i,s));f>0;)s=c>>8,u[--f]=n(l[f],s),s=255&c,u[--f]=n(l[f],s);for(f=15,o=15-l.length;o>0;)s=c>>8,u[f]=n(e[o],s),--o,s=255&c,u[--f]=n(l[f],s),--f,--o;return u}}();var ri=function(){function e(e,r){switch(r.type){case"base64":return t(y(e),r);case"binary":return t(e,r);case"buffer":return t(k&&Buffer.isBuffer(e)?e.toString("binary"):C(e),r);case"array":return t(Xe(e),r)}throw new Error("Unrecognized type "+r.type)}function t(e,t){var r=(t||{}).dense?[]:{},n=e.match(/\\trowd.*?\\row\b/g);if(!n.length)throw new Error("RTF missing table");var a={s:{c:0,r:0},e:{c:0,r:n.length-1}};return n.forEach((function(e,t){Array.isArray(r)&&(r[t]=[]);for(var n,s=/\\\w+\b/g,i=0,o=-1;n=s.exec(e);){if("\\cell"===n[0]){var l=e.slice(i,s.lastIndex-n[0].length);if(" "==l[0]&&(l=l.slice(1)),++o,l.length){var c={v:l,t:"s"};Array.isArray(r)?r[t][o]=c:r[Jr({r:t,c:o})]=c}}i=s.lastIndex}o>a.e.c&&(a.e.c=o)})),r["!ref"]=en(a),r}return{to_workbook:function(t,r){return nn(e(t,r),r)},to_sheet:e,from_sheet:function(e){for(var t,r=["{\\rtf1\\ansi"],n=tn(e["!ref"]),a=Array.isArray(e),s=n.s.r;s<=n.e.r;++s){r.push("\\trowd\\trautofit1");for(var i=n.s.c;i<=n.e.c;++i)r.push("\\cellx"+(i+1));for(r.push("\\pard\\intbl"),i=n.s.c;i<=n.e.c;++i){var o=Jr({r:s,c:i});(t=a?(e[s]||[])[i]:e[o])&&(null!=t.v||t.f&&!t.F)&&(r.push(" "+(t.w||(rn(t),t.w))),r.push("\\cell"))}r.push("\\pard\\intbl\\row")}return r.join("")+"}"}}}();function ni(e){for(var t=0,r=1;3!=t;++t)r=256*r+(e[t]>255?255:e[t]<0?0:e[t]);return r.toString(16).toUpperCase().slice(1)}function ai(e,t){if(0===t)return e;var r,n,a=function(e){var t=e[0]/255,r=e[1]/255,n=e[2]/255,a=Math.max(t,r,n),s=Math.min(t,r,n),i=a-s;if(0===i)return[0,0,t];var o,l=0,c=a+s;switch(o=i/(c>1?2-c:c),a){case t:l=((r-n)/i+6)%6;break;case r:l=(n-t)/i+2;break;case n:l=(t-r)/i+4}return[l/6,o,c/2]}((n=(r=e).slice("#"===r[0]?1:0).slice(0,6),[parseInt(n.slice(0,2),16),parseInt(n.slice(2,4),16),parseInt(n.slice(4,6),16)]));return a[2]=t<0?a[2]*(1+t):1-(1-a[2])*(1-t),ni(function(e){var t,r=e[0],n=e[1],a=e[2],s=2*n*(a<.5?a:1-a),i=a-s/2,o=[i,i,i],l=6*r;if(0!==n)switch(0|l){case 0:case 6:t=s*l,o[0]+=s,o[1]+=t;break;case 1:t=s*(2-l),o[0]+=t,o[1]+=s;break;case 2:t=s*(l-2),o[1]+=s,o[2]+=t;break;case 3:t=s*(4-l),o[1]+=t,o[2]+=s;break;case 4:t=s*(l-4),o[2]+=s,o[0]+=t;break;case 5:t=s*(6-l),o[2]+=t,o[0]+=s}for(var c=0;3!=c;++c)o[c]=Math.round(255*o[c]);return o}(a))}var si=6;function ii(e){return Math.floor((e+Math.round(128/si)/256)*si)}function oi(e){return Math.floor((e-5)/si*100+.5)/100}function li(e){return Math.round((e*si+5)/si*256)/256}function ci(e){return li(oi(ii(e)))}function fi(e){var t=Math.abs(e-ci(e)),r=si;if(t>.005)for(si=1;si<15;++si)Math.abs(e-ci(e))<=t&&(t=Math.abs(e-ci(e)),r=si);si=r}function ui(e){e.width?(e.wpx=ii(e.width),e.wch=oi(e.wpx),e.MDW=si):e.wpx?(e.wch=oi(e.wpx),e.width=li(e.wch),e.MDW=si):"number"==typeof e.wch&&(e.width=li(e.wch),e.wpx=ii(e.width),e.MDW=si),e.customWidth&&delete e.customWidth}function hi(e){return 96*e/96}function di(e){return 96*e/96}var pi={None:"none",Solid:"solid",Gray50:"mediumGray",Gray75:"darkGray",Gray25:"lightGray",HorzStripe:"darkHorizontal",VertStripe:"darkVertical",ReverseDiagStripe:"darkDown",DiagStripe:"darkUp",DiagCross:"darkGrid",ThickDiagCross:"darkTrellis",ThinHorzStripe:"lightHorizontal",ThinVertStripe:"lightVertical",ThinReverseDiagStripe:"lightDown",ThinHorzCross:"lightGrid"},mi=["numFmtId","fillId","fontId","borderId","xfId"],gi=["applyAlignment","applyBorder","applyFill","applyFont","applyNumberFormat","applyProtection","pivotButton","quotePrefix"],vi=function(){var e=/<(?:\w+:)?numFmts([^>]*)>[\S\s]*?<\/(?:\w+:)?numFmts>/,t=/<(?:\w+:)?cellXfs([^>]*)>[\S\s]*?<\/(?:\w+:)?cellXfs>/,r=/<(?:\w+:)?fills([^>]*)>[\S\s]*?<\/(?:\w+:)?fills>/,n=/<(?:\w+:)?fonts([^>]*)>[\S\s]*?<\/(?:\w+:)?fonts>/,a=/<(?:\w+:)?borders([^>]*)>[\S\s]*?<\/(?:\w+:)?borders>/;return function(s,i,l){var c,f={};return s?((c=(s=s.replace(/<!--([\s\S]*?)-->/gm,"").replace(/<!DOCTYPE[^\[]*\[[^\]]*\]>/gm,"")).match(e))&&function(e,t,r){t.NumberFmt=[];for(var n=Ie(W),a=0;a<n.length;++a)t.NumberFmt[n[a]]=W[n[a]];var s=e[0].match(mt);if(s)for(a=0;a<s.length;++a){var i=bt(s[a]);switch(wt(i[0])){case"<numFmts":case"</numFmts>":case"<numFmts/>":case"<numFmts>":case"</numFmt>":break;case"<numFmt":var o=Tt(Ft(i.formatCode)),l=parseInt(i.numFmtId,10);if(t.NumberFmt[l]=o,l>0){if(l>392){for(l=392;l>60&&null!=t.NumberFmt[l];--l);t.NumberFmt[l]=o}ye(o,l)}break;default:if(r.WTF)throw new Error("unrecognized "+i[0]+" in numFmts")}}}(c,f,l),(c=s.match(n))&&function(e,t,r,n){t.Fonts=[];var a={},s=!1;(e[0].match(mt)||[]).forEach((function(e){var i=bt(e);switch(wt(i[0])){case"<fonts":case"<fonts>":case"</fonts>":case"<font":case"<font>":case"<name/>":case"</name>":case"<sz/>":case"</sz>":case"<vertAlign/>":case"</vertAlign>":case"<family/>":case"</family>":case"<scheme/>":case"</scheme>":case"<color/>":case"</color>":case"<extLst":case"<extLst>":case"</extLst>":break;case"</font>":case"<font/>":t.Fonts.push(a),a={};break;case"<name":i.val&&(a.name=Ft(i.val));break;case"<b":a.bold=i.val?Rt(i.val):1;break;case"<b/>":a.bold=1;break;case"<i":a.italic=i.val?Rt(i.val):1;break;case"<i/>":a.italic=1;break;case"<u":switch(i.val){case"none":a.underline=0;break;case"single":a.underline=1;break;case"double":a.underline=2;break;case"singleAccounting":a.underline=33;break;case"doubleAccounting":a.underline=34}break;case"<u/>":a.underline=1;break;case"<strike":a.strike=i.val?Rt(i.val):1;break;case"<strike/>":a.strike=1;break;case"<outline":a.outline=i.val?Rt(i.val):1;break;case"<outline/>":a.outline=1;break;case"<shadow":a.shadow=i.val?Rt(i.val):1;break;case"<shadow/>":a.shadow=1;break;case"<condense":a.condense=i.val?Rt(i.val):1;break;case"<condense/>":a.condense=1;break;case"<extend":a.extend=i.val?Rt(i.val):1;break;case"<extend/>":a.extend=1;break;case"<sz":i.val&&(a.sz=+i.val);break;case"<vertAlign":i.val&&(a.vertAlign=i.val);break;case"<family":i.val&&(a.family=parseInt(i.val,10));break;case"<scheme":i.val&&(a.scheme=i.val);break;case"<charset":if("1"==i.val)break;i.codepage=o[parseInt(i.val,10)];break;case"<color":if(a.color||(a.color={}),i.auto&&(a.color.auto=Rt(i.auto)),i.rgb)a.color.rgb=i.rgb.slice(-6);else if(i.indexed){a.color.index=parseInt(i.indexed,10);var l=zn[a.color.index];81==a.color.index&&(l=zn[1]),l||(l=zn[1]),a.color.rgb=l[0].toString(16)+l[1].toString(16)+l[2].toString(16)}else i.theme&&(a.color.theme=parseInt(i.theme,10),i.tint&&(a.color.tint=parseFloat(i.tint)),i.theme&&r.themeElements&&r.themeElements.clrScheme&&(a.color.rgb=ai(r.themeElements.clrScheme[a.color.theme].rgb,a.color.tint||0)));break;case"<AlternateContent":case"<ext":s=!0;break;case"</AlternateContent>":case"</ext>":s=!1;break;default:if(n&&n.WTF&&!s)throw new Error("unrecognized "+i[0]+" in fonts")}}))}(c,f,i,l),(c=s.match(r))&&function(e,t,r,n){t.Fills=[];var a={},s=!1;(e[0].match(mt)||[]).forEach((function(e){var r=bt(e);switch(wt(r[0])){case"<fills":case"<fills>":case"</fills>":case"</fill>":case"<gradientFill>":case"<patternFill/>":case"</patternFill>":case"<bgColor/>":case"</bgColor>":case"<fgColor/>":case"</fgColor>":case"<stop":case"<stop/>":case"</stop>":case"<color":case"<color/>":case"</color>":case"<extLst":case"<extLst>":case"</extLst>":break;case"<fill>":case"<fill":case"<fill/>":a={},t.Fills.push(a);break;case"<gradientFill":case"</gradientFill>":t.Fills.push(a),a={};break;case"<patternFill":case"<patternFill>":r.patternType&&(a.patternType=r.patternType);break;case"<bgColor":a.bgColor||(a.bgColor={}),r.indexed&&(a.bgColor.indexed=parseInt(r.indexed,10)),r.theme&&(a.bgColor.theme=parseInt(r.theme,10)),r.tint&&(a.bgColor.tint=parseFloat(r.tint)),r.rgb&&(a.bgColor.rgb=r.rgb.slice(-6));break;case"<fgColor":a.fgColor||(a.fgColor={}),r.theme&&(a.fgColor.theme=parseInt(r.theme,10)),r.tint&&(a.fgColor.tint=parseFloat(r.tint)),null!=r.rgb&&(a.fgColor.rgb=r.rgb.slice(-6));break;case"<ext":s=!0;break;case"</ext>":s=!1;break;default:if(n&&n.WTF&&!s)throw new Error("unrecognized "+r[0]+" in fills")}}))}(c,f,0,l),(c=s.match(a))&&function(e,t,r,n){t.Borders=[];var a={},s=!1;(e[0].match(mt)||[]).forEach((function(e){var r=bt(e);switch(wt(r[0])){case"<borders":case"<borders>":case"</borders>":case"</border>":case"<left/>":case"<left":case"<left>":case"</left>":case"<right/>":case"<right":case"<right>":case"</right>":case"<top/>":case"<top":case"<top>":case"</top>":case"<bottom/>":case"<bottom":case"<bottom>":case"</bottom>":case"<diagonal":case"<diagonal>":case"<diagonal/>":case"</diagonal>":case"<horizontal":case"<horizontal>":case"<horizontal/>":case"</horizontal>":case"<vertical":case"<vertical>":case"<vertical/>":case"</vertical>":case"<start":case"<start>":case"<start/>":case"</start>":case"<end":case"<end>":case"<end/>":case"</end>":case"<color":case"<color>":case"<color/>":case"</color>":case"<extLst":case"<extLst>":case"</extLst>":break;case"<border":case"<border>":case"<border/>":a={},r.diagonalUp&&(a.diagonalUp=Rt(r.diagonalUp)),r.diagonalDown&&(a.diagonalDown=Rt(r.diagonalDown)),t.Borders.push(a);break;case"<ext":s=!0;break;case"</ext>":s=!1;break;default:if(n&&n.WTF&&!s)throw new Error("unrecognized "+r[0]+" in borders")}}))}(c,f,0,l),(c=s.match(t))&&function(e,t,r){var n;t.CellXf=[];var a=!1;(e[0].match(mt)||[]).forEach((function(e){var s=bt(e),i=0;switch(wt(s[0])){case"<cellXfs":case"<cellXfs>":case"<cellXfs/>":case"</cellXfs>":case"</xf>":case"</alignment>":case"<protection":case"</protection>":case"<protection/>":case"<extLst":case"<extLst>":case"</extLst>":break;case"<xf":case"<xf/>":for(delete(n=s)[0],i=0;i<mi.length;++i)n[mi[i]]&&(n[mi[i]]=parseInt(n[mi[i]],10));for(i=0;i<gi.length;++i)n[gi[i]]&&(n[gi[i]]=Rt(n[gi[i]]));if(t.NumberFmt&&n.numFmtId>392)for(i=392;i>60;--i)if(t.NumberFmt[n.numFmtId]==t.NumberFmt[i]){n.numFmtId=i;break}t.CellXf.push(n);break;case"<alignment":case"<alignment/>":var o={};s.vertical&&(o.vertical=s.vertical),s.horizontal&&(o.horizontal=s.horizontal),null!=s.textRotation&&(o.textRotation=s.textRotation),s.indent&&(o.indent=s.indent),s.wrapText&&(o.wrapText=Rt(s.wrapText)),n.alignment=o;break;case"<AlternateContent":case"<ext":a=!0;break;case"</AlternateContent>":case"</ext>":a=!1;break;default:if(r&&r.WTF&&!a)throw new Error("unrecognized "+s[0]+" in cellXfs")}}))}(c,f,l),f):f}}();function bi(e,t){var r,n=[ht,Gt("styleSheet",null,{xmlns:tr[0],"xmlns:vt":Zt})];return e.SSF&&null!=(r=function(e){var t=["<numFmts>"];return[[5,8],[23,26],[41,44],[50,392]].forEach((function(r){for(var n=r[0];n<=r[1];++n)null!=e[n]&&(t[t.length]=Gt("numFmt",null,{numFmtId:n,formatCode:xt(e[n])}))})),1===t.length?"":(t[t.length]="</numFmts>",t[0]=Gt("numFmts",null,{count:t.length-2}).replace("/>",">"),t.join(""))}(e.SSF))&&(n[n.length]=r),n[n.length]='<fonts count="1"><font><sz val="12"/><color theme="1"/><name val="Calibri"/><family val="2"/><scheme val="minor"/></font></fonts>',n[n.length]='<fills count="2"><fill><patternFill patternType="none"/></fill><fill><patternFill patternType="gray125"/></fill></fills>',n[n.length]='<borders count="1"><border><left/><right/><top/><bottom/><diagonal/></border></borders>',n[n.length]='<cellStyleXfs count="1"><xf numFmtId="0" fontId="0" fillId="0" borderId="0"/></cellStyleXfs>',(r=function(e){var t=[];return t[t.length]=Gt("cellXfs",null),e.forEach((function(e){t[t.length]=Gt("xf",null,e)})),t[t.length]="</cellXfs>",2===t.length?"":(t[0]=Gt("cellXfs",null,{count:t.length-2}).replace("/>",">"),t.join(""))}(t.cellXfs))&&(n[n.length]=r),n[n.length]='<cellStyles count="1"><cellStyle name="Normal" xfId="0" builtinId="0"/></cellStyles>',n[n.length]='<dxfs count="0"/>',n[n.length]='<tableStyles count="0" defaultTableStyle="TableStyleMedium9" defaultPivotStyle="PivotStyleMedium4"/>',n.length>2&&(n[n.length]="</styleSheet>",n[1]=n[1].replace("/>",">")),n.join("")}function wi(e,t,r){r||(r=Br(6+4*t.length)),r.write_shift(2,e),cn(t,r);var n=r.length>r.l?r.slice(0,r.l):r;return null==r.l&&(r.l=r.length),n}var yi,ki=["none","solid","mediumGray","darkGray","lightGray","darkHorizontal","darkVertical","darkDown","darkUp","darkGrid","darkTrellis","lightHorizontal","lightVertical","lightDown","lightUp","lightGrid","lightTrellis","gray125","gray0625"],Ti=Ur;function Si(e,t){t||(t=Br(84)),yi||(yi=De(ki));var r=yi[e.patternType];null==r&&(r=40),t.write_shift(4,r);var n=0;if(40!=r)for(Nn({auto:1},t),Nn({auto:1},t);n<12;++n)t.write_shift(4,0);else{for(;n<4;++n)t.write_shift(4,0);for(;n<12;++n)t.write_shift(4,0)}return t.length>t.l?t.slice(0,t.l):t}function Ei(e,t,r){return r||(r=Br(16)),r.write_shift(2,t||0),r.write_shift(2,e.numFmtId||0),r.write_shift(2,0),r.write_shift(2,0),r.write_shift(2,0),r.write_shift(1,0),r.write_shift(1,0),r.write_shift(1,0),r.write_shift(1,0),r.write_shift(1,0),r.write_shift(1,0),r}function xi(e,t){return t||(t=Br(10)),t.write_shift(1,0),t.write_shift(1,0),t.write_shift(4,0),t.write_shift(4,0),t}var _i=Ur;function Ci(e,t){var r=Wr();return Hr(r,278),function(e,t){if(t){var r=0;[[5,8],[23,26],[41,44],[50,392]].forEach((function(e){for(var n=e[0];n<=e[1];++n)null!=t[n]&&++r})),0!=r&&(Hr(e,615,on(r)),[[5,8],[23,26],[41,44],[50,392]].forEach((function(r){for(var n=r[0];n<=r[1];++n)null!=t[n]&&Hr(e,44,wi(n,t[n]))})),Hr(e,616))}}(r,e.SSF),function(e){Hr(e,611,on(1)),Hr(e,43,function(e,t){t||(t=Br(153)),t.write_shift(2,20*e.sz),function(e,t){t||(t=Br(2));var r=(e.italic?2:0)|(e.strike?8:0)|(e.outline?16:0)|(e.shadow?32:0)|(e.condense?64:0)|(e.extend?128:0);t.write_shift(1,r),t.write_shift(1,0)}(e,t),t.write_shift(2,e.bold?700:400);var r=0;"superscript"==e.vertAlign?r=1:"subscript"==e.vertAlign&&(r=2),t.write_shift(2,r),t.write_shift(1,e.underline||0),t.write_shift(1,e.family||0),t.write_shift(1,e.charset||0),t.write_shift(1,0),Nn(e.color,t);var n=0;return"major"==e.scheme&&(n=1),"minor"==e.scheme&&(n=2),t.write_shift(1,n),cn(e.name,t),t.length>t.l?t.slice(0,t.l):t}({sz:12,color:{theme:1},name:"Calibri",family:2,scheme:"minor"})),Hr(e,612)}(r),function(e){Hr(e,603,on(2)),Hr(e,45,Si({patternType:"none"})),Hr(e,45,Si({patternType:"gray125"})),Hr(e,604)}(r),function(e){var t;Hr(e,613,on(1)),Hr(e,46,(t||(t=Br(51)),t.write_shift(1,0),xi(0,t),xi(0,t),xi(0,t),xi(0,t),xi(0,t),t.length>t.l?t.slice(0,t.l):t)),Hr(e,614)}(r),function(e){Hr(e,626,on(1)),Hr(e,47,Ei({numFmtId:0,fontId:0,fillId:0,borderId:0},65535)),Hr(e,627)}(r),function(e,t){Hr(e,617,on(t.length)),t.forEach((function(t){Hr(e,47,Ei(t,0))})),Hr(e,618)}(r,t.cellXfs),function(e){var t,r;Hr(e,619,on(1)),Hr(e,48,(t={xfId:0,builtinId:0,name:"Normal"},r||(r=Br(52)),r.write_shift(4,t.xfId),r.write_shift(2,1),r.write_shift(1,+t.builtinId),r.write_shift(1,0),yn(t.name||"",r),r.length>r.l?r.slice(0,r.l):r)),Hr(e,620)}(r),function(e){Hr(e,505,on(0)),Hr(e,506)}(r),function(e){var t;Hr(e,508,((t=Br(2052)).write_shift(4,0),yn("TableStyleMedium9",t),yn("PivotStyleMedium4",t),t.length>t.l?t.slice(0,t.l):t)),Hr(e,509)}(r),Hr(r,279),r.end()}var Ai=["</a:lt1>","</a:dk1>","</a:lt2>","</a:dk2>","</a:accent1>","</a:accent2>","</a:accent3>","</a:accent4>","</a:accent5>","</a:accent6>","</a:hlink>","</a:folHlink>"];function Oi(e,t,r){t.themeElements.clrScheme=[];var n={};(e[0].match(mt)||[]).forEach((function(e){var a=bt(e);switch(a[0]){case"<a:clrScheme":case"</a:clrScheme>":break;case"<a:srgbClr":n.rgb=a.val;break;case"<a:sysClr":n.rgb=a.lastClr;break;case"<a:dk1>":case"</a:dk1>":case"<a:lt1>":case"</a:lt1>":case"<a:dk2>":case"</a:dk2>":case"<a:lt2>":case"</a:lt2>":case"<a:accent1>":case"</a:accent1>":case"<a:accent2>":case"</a:accent2>":case"<a:accent3>":case"</a:accent3>":case"<a:accent4>":case"</a:accent4>":case"<a:accent5>":case"</a:accent5>":case"<a:accent6>":case"</a:accent6>":case"<a:hlink>":case"</a:hlink>":case"<a:folHlink>":case"</a:folHlink>":"/"===a[0].charAt(1)?(t.themeElements.clrScheme[Ai.indexOf(a[0])]=n,n={}):n.name=a[0].slice(3,a[0].length-1);break;default:if(r&&r.WTF)throw new Error("Unrecognized "+a[0]+" in clrScheme")}}))}function Ri(){}function Ni(){}var Ii=/<a:clrScheme([^>]*)>[\s\S]*<\/a:clrScheme>/,Pi=/<a:fontScheme([^>]*)>[\s\S]*<\/a:fontScheme>/,Di=/<a:fmtScheme([^>]*)>[\s\S]*<\/a:fmtScheme>/,Fi=/<a:themeElements([^>]*)>[\s\S]*<\/a:themeElements>/;function Li(e,t){var r;e&&0!==e.length||(e=Mi());var n={};if(!(r=e.match(Fi)))throw new Error("themeElements not found in theme");return function(e,t,r){var n;t.themeElements={},[["clrScheme",Ii,Oi],["fontScheme",Pi,Ri],["fmtScheme",Di,Ni]].forEach((function(a){if(!(n=e.match(a[1])))throw new Error(a[0]+" not found in themeElements");a[2](n,t,r)}))}(r[0],n,t),n.raw=e,n}function Mi(e,t){if(t&&t.themeXLSX)return t.themeXLSX;if(e&&"string"==typeof e.raw)return e.raw;var r=[ht];return r[r.length]='<a:theme xmlns:a="http://schemas.openxmlformats.org/drawingml/2006/main" name="Office Theme">',r[r.length]="<a:themeElements>",r[r.length]='<a:clrScheme name="Office">',r[r.length]='<a:dk1><a:sysClr val="windowText" lastClr="000000"/></a:dk1>',r[r.length]='<a:lt1><a:sysClr val="window" lastClr="FFFFFF"/></a:lt1>',r[r.length]='<a:dk2><a:srgbClr val="1F497D"/></a:dk2>',r[r.length]='<a:lt2><a:srgbClr val="EEECE1"/></a:lt2>',r[r.length]='<a:accent1><a:srgbClr val="4F81BD"/></a:accent1>',r[r.length]='<a:accent2><a:srgbClr val="C0504D"/></a:accent2>',r[r.length]='<a:accent3><a:srgbClr val="9BBB59"/></a:accent3>',r[r.length]='<a:accent4><a:srgbClr val="8064A2"/></a:accent4>',r[r.length]='<a:accent5><a:srgbClr val="4BACC6"/></a:accent5>',r[r.length]='<a:accent6><a:srgbClr val="F79646"/></a:accent6>',r[r.length]='<a:hlink><a:srgbClr val="0000FF"/></a:hlink>',r[r.length]='<a:folHlink><a:srgbClr val="800080"/></a:folHlink>',r[r.length]="</a:clrScheme>",r[r.length]='<a:fontScheme name="Office">',r[r.length]="<a:majorFont>",r[r.length]='<a:latin typeface="Cambria"/>',r[r.length]='<a:ea typeface=""/>',r[r.length]='<a:cs typeface=""/>',r[r.length]='<a:font script="Jpan" typeface="ＭＳ Ｐゴシック"/>',r[r.length]='<a:font script="Hang" typeface="맑은 고딕"/>',r[r.length]='<a:font script="Hans" typeface="宋体"/>',r[r.length]='<a:font script="Hant" typeface="新細明體"/>',r[r.length]='<a:font script="Arab" typeface="Times New Roman"/>',r[r.length]='<a:font script="Hebr" typeface="Times New Roman"/>',r[r.length]='<a:font script="Thai" typeface="Tahoma"/>',r[r.length]='<a:font script="Ethi" typeface="Nyala"/>',r[r.length]='<a:font script="Beng" typeface="Vrinda"/>',r[r.length]='<a:font script="Gujr" typeface="Shruti"/>',r[r.length]='<a:font script="Khmr" typeface="MoolBoran"/>',r[r.length]='<a:font script="Knda" typeface="Tunga"/>',r[r.length]='<a:font script="Guru" typeface="Raavi"/>',r[r.length]='<a:font script="Cans" typeface="Euphemia"/>',r[r.length]='<a:font script="Cher" typeface="Plantagenet Cherokee"/>',r[r.length]='<a:font script="Yiii" typeface="Microsoft Yi Baiti"/>',r[r.length]='<a:font script="Tibt" typeface="Microsoft Himalaya"/>',r[r.length]='<a:font script="Thaa" typeface="MV Boli"/>',r[r.length]='<a:font script="Deva" typeface="Mangal"/>',r[r.length]='<a:font script="Telu" typeface="Gautami"/>',r[r.length]='<a:font script="Taml" typeface="Latha"/>',r[r.length]='<a:font script="Syrc" typeface="Estrangelo Edessa"/>',r[r.length]='<a:font script="Orya" typeface="Kalinga"/>',r[r.length]='<a:font script="Mlym" typeface="Kartika"/>',r[r.length]='<a:font script="Laoo" typeface="DokChampa"/>',r[r.length]='<a:font script="Sinh" typeface="Iskoola Pota"/>',r[r.length]='<a:font script="Mong" typeface="Mongolian Baiti"/>',r[r.length]='<a:font script="Viet" typeface="Times New Roman"/>',r[r.length]='<a:font script="Uigh" typeface="Microsoft Uighur"/>',r[r.length]='<a:font script="Geor" typeface="Sylfaen"/>',r[r.length]="</a:majorFont>",r[r.length]="<a:minorFont>",r[r.length]='<a:latin typeface="Calibri"/>',r[r.length]='<a:ea typeface=""/>',r[r.length]='<a:cs typeface=""/>',r[r.length]='<a:font script="Jpan" typeface="ＭＳ Ｐゴシック"/>',r[r.length]='<a:font script="Hang" typeface="맑은 고딕"/>',r[r.length]='<a:font script="Hans" typeface="宋体"/>',r[r.length]='<a:font script="Hant" typeface="新細明體"/>',r[r.length]='<a:font script="Arab" typeface="Arial"/>',r[r.length]='<a:font script="Hebr" typeface="Arial"/>',r[r.length]='<a:font script="Thai" typeface="Tahoma"/>',r[r.length]='<a:font script="Ethi" typeface="Nyala"/>',r[r.length]='<a:font script="Beng" typeface="Vrinda"/>',r[r.length]='<a:font script="Gujr" typeface="Shruti"/>',r[r.length]='<a:font script="Khmr" typeface="DaunPenh"/>',r[r.length]='<a:font script="Knda" typeface="Tunga"/>',r[r.length]='<a:font script="Guru" typeface="Raavi"/>',r[r.length]='<a:font script="Cans" typeface="Euphemia"/>',r[r.length]='<a:font script="Cher" typeface="Plantagenet Cherokee"/>',r[r.length]='<a:font script="Yiii" typeface="Microsoft Yi Baiti"/>',r[r.length]='<a:font script="Tibt" typeface="Microsoft Himalaya"/>',r[r.length]='<a:font script="Thaa" typeface="MV Boli"/>',r[r.length]='<a:font script="Deva" typeface="Mangal"/>',r[r.length]='<a:font script="Telu" typeface="Gautami"/>',r[r.length]='<a:font script="Taml" typeface="Latha"/>',r[r.length]='<a:font script="Syrc" typeface="Estrangelo Edessa"/>',r[r.length]='<a:font script="Orya" typeface="Kalinga"/>',r[r.length]='<a:font script="Mlym" typeface="Kartika"/>',r[r.length]='<a:font script="Laoo" typeface="DokChampa"/>',r[r.length]='<a:font script="Sinh" typeface="Iskoola Pota"/>',r[r.length]='<a:font script="Mong" typeface="Mongolian Baiti"/>',r[r.length]='<a:font script="Viet" typeface="Arial"/>',r[r.length]='<a:font script="Uigh" typeface="Microsoft Uighur"/>',r[r.length]='<a:font script="Geor" typeface="Sylfaen"/>',r[r.length]="</a:minorFont>",r[r.length]="</a:fontScheme>",r[r.length]='<a:fmtScheme name="Office">',r[r.length]="<a:fillStyleLst>",r[r.length]='<a:solidFill><a:schemeClr val="phClr"/></a:solidFill>',r[r.length]='<a:gradFill rotWithShape="1">',r[r.length]="<a:gsLst>",r[r.length]='<a:gs pos="0"><a:schemeClr val="phClr"><a:tint val="50000"/><a:satMod val="300000"/></a:schemeClr></a:gs>',r[r.length]='<a:gs pos="35000"><a:schemeClr val="phClr"><a:tint val="37000"/><a:satMod val="300000"/></a:schemeClr></a:gs>',r[r.length]='<a:gs pos="100000"><a:schemeClr val="phClr"><a:tint val="15000"/><a:satMod val="350000"/></a:schemeClr></a:gs>',r[r.length]="</a:gsLst>",r[r.length]='<a:lin ang="16200000" scaled="1"/>',r[r.length]="</a:gradFill>",r[r.length]='<a:gradFill rotWithShape="1">',r[r.length]="<a:gsLst>",r[r.length]='<a:gs pos="0"><a:schemeClr val="phClr"><a:tint val="100000"/><a:shade val="100000"/><a:satMod val="130000"/></a:schemeClr></a:gs>',r[r.length]='<a:gs pos="100000"><a:schemeClr val="phClr"><a:tint val="50000"/><a:shade val="100000"/><a:satMod val="350000"/></a:schemeClr></a:gs>',r[r.length]="</a:gsLst>",r[r.length]='<a:lin ang="16200000" scaled="0"/>',r[r.length]="</a:gradFill>",r[r.length]="</a:fillStyleLst>",r[r.length]="<a:lnStyleLst>",r[r.length]='<a:ln w="9525" cap="flat" cmpd="sng" algn="ctr"><a:solidFill><a:schemeClr val="phClr"><a:shade val="95000"/><a:satMod val="105000"/></a:schemeClr></a:solidFill><a:prstDash val="solid"/></a:ln>',r[r.length]='<a:ln w="25400" cap="flat" cmpd="sng" algn="ctr"><a:solidFill><a:schemeClr val="phClr"/></a:solidFill><a:prstDash val="solid"/></a:ln>',r[r.length]='<a:ln w="38100" cap="flat" cmpd="sng" algn="ctr"><a:solidFill><a:schemeClr val="phClr"/></a:solidFill><a:prstDash val="solid"/></a:ln>',r[r.length]="</a:lnStyleLst>",r[r.length]="<a:effectStyleLst>",r[r.length]="<a:effectStyle>",r[r.length]="<a:effectLst>",r[r.length]='<a:outerShdw blurRad="40000" dist="20000" dir="5400000" rotWithShape="0"><a:srgbClr val="000000"><a:alpha val="38000"/></a:srgbClr></a:outerShdw>',r[r.length]="</a:effectLst>",r[r.length]="</a:effectStyle>",r[r.length]="<a:effectStyle>",r[r.length]="<a:effectLst>",r[r.length]='<a:outerShdw blurRad="40000" dist="23000" dir="5400000" rotWithShape="0"><a:srgbClr val="000000"><a:alpha val="35000"/></a:srgbClr></a:outerShdw>',r[r.length]="</a:effectLst>",r[r.length]="</a:effectStyle>",r[r.length]="<a:effectStyle>",r[r.length]="<a:effectLst>",r[r.length]='<a:outerShdw blurRad="40000" dist="23000" dir="5400000" rotWithShape="0"><a:srgbClr val="000000"><a:alpha val="35000"/></a:srgbClr></a:outerShdw>',r[r.length]="</a:effectLst>",r[r.length]='<a:scene3d><a:camera prst="orthographicFront"><a:rot lat="0" lon="0" rev="0"/></a:camera><a:lightRig rig="threePt" dir="t"><a:rot lat="0" lon="0" rev="1200000"/></a:lightRig></a:scene3d>',r[r.length]='<a:sp3d><a:bevelT w="63500" h="25400"/></a:sp3d>',r[r.length]="</a:effectStyle>",r[r.length]="</a:effectStyleLst>",r[r.length]="<a:bgFillStyleLst>",r[r.length]='<a:solidFill><a:schemeClr val="phClr"/></a:solidFill>',r[r.length]='<a:gradFill rotWithShape="1">',r[r.length]="<a:gsLst>",r[r.length]='<a:gs pos="0"><a:schemeClr val="phClr"><a:tint val="40000"/><a:satMod val="350000"/></a:schemeClr></a:gs>',r[r.length]='<a:gs pos="40000"><a:schemeClr val="phClr"><a:tint val="45000"/><a:shade val="99000"/><a:satMod val="350000"/></a:schemeClr></a:gs>',r[r.length]='<a:gs pos="100000"><a:schemeClr val="phClr"><a:shade val="20000"/><a:satMod val="255000"/></a:schemeClr></a:gs>',r[r.length]="</a:gsLst>",r[r.length]='<a:path path="circle"><a:fillToRect l="50000" t="-80000" r="50000" b="180000"/></a:path>',r[r.length]="</a:gradFill>",r[r.length]='<a:gradFill rotWithShape="1">',r[r.length]="<a:gsLst>",r[r.length]='<a:gs pos="0"><a:schemeClr val="phClr"><a:tint val="80000"/><a:satMod val="300000"/></a:schemeClr></a:gs>',r[r.length]='<a:gs pos="100000"><a:schemeClr val="phClr"><a:shade val="30000"/><a:satMod val="200000"/></a:schemeClr></a:gs>',r[r.length]="</a:gsLst>",r[r.length]='<a:path path="circle"><a:fillToRect l="50000" t="50000" r="50000" b="50000"/></a:path>',r[r.length]="</a:gradFill>",r[r.length]="</a:bgFillStyleLst>",r[r.length]="</a:fmtScheme>",r[r.length]="</a:themeElements>",r[r.length]="<a:objectDefaults>",r[r.length]="<a:spDef>",r[r.length]='<a:spPr/><a:bodyPr/><a:lstStyle/><a:style><a:lnRef idx="1"><a:schemeClr val="accent1"/></a:lnRef><a:fillRef idx="3"><a:schemeClr val="accent1"/></a:fillRef><a:effectRef idx="2"><a:schemeClr val="accent1"/></a:effectRef><a:fontRef idx="minor"><a:schemeClr val="lt1"/></a:fontRef></a:style>',r[r.length]="</a:spDef>",r[r.length]="<a:lnDef>",r[r.length]='<a:spPr/><a:bodyPr/><a:lstStyle/><a:style><a:lnRef idx="2"><a:schemeClr val="accent1"/></a:lnRef><a:fillRef idx="0"><a:schemeClr val="accent1"/></a:fillRef><a:effectRef idx="1"><a:schemeClr val="accent1"/></a:effectRef><a:fontRef idx="minor"><a:schemeClr val="tx1"/></a:fontRef></a:style>',r[r.length]="</a:lnDef>",r[r.length]="</a:objectDefaults>",r[r.length]="<a:extraClrSchemeLst/>",r[r.length]="</a:theme>",r.join("")}function Ui(e){var t=e.read_shift(2),r=e.read_shift(2)-4,n=[t];switch(t){case 4:case 5:case 7:case 8:case 9:case 10:case 11:case 13:n[1]=function(e){var t={};switch(t.xclrType=e.read_shift(2),t.nTintShade=e.read_shift(2),t.xclrType){case 0:case 4:e.l+=4;break;case 1:t.xclrValue=function(e,t){return Ur(e,4)}(e);break;case 2:t.xclrValue=Ga(e);break;case 3:t.xclrValue=function(e){return e.read_shift(4)}(e)}return e.l+=8,t}(e);break;case 6:n[1]=function(e,t){return Ur(e,t)}(e,r);break;case 14:case 15:n[1]=e.read_shift(1===r?1:2);break;default:throw new Error("Unrecognized ExtProp type: "+t+" "+r)}return n}function Bi(){var e,t,r=Wr();return Hr(r,332),Hr(r,334,on(1)),Hr(r,335,((t=Br(12+2*(e={name:"XLDAPR",version:12e4,flags:3496657072}).name.length)).write_shift(4,e.flags),t.write_shift(4,e.version),cn(e.name,t),t.slice(0,t.l))),Hr(r,336),Hr(r,339,function(e,t){var r=Br(8+2*t.length);return r.write_shift(4,1),cn(t,r),r.slice(0,r.l)}(0,"XLDAPR")),Hr(r,52),Hr(r,35,on(514)),Hr(r,4096,on(0)),Hr(r,4097,Pa(1)),Hr(r,36),Hr(r,53),Hr(r,340),Hr(r,337,function(e,t){var r=Br(8);return r.write_shift(4,1),r.write_shift(4,1),r}()),Hr(r,51,function(e){var t=Br(4+8*e.length);t.write_shift(4,e.length);for(var r=0;r<e.length;++r)t.write_shift(4,e[r][0]),t.write_shift(4,e[r][1]);return t}([[1,0]])),Hr(r,338),Hr(r,333),r.end()}function zi(){var e=[ht];return e.push('<metadata xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:xlrd="http://schemas.microsoft.com/office/spreadsheetml/2017/richdata" xmlns:xda="http://schemas.microsoft.com/office/spreadsheetml/2017/dynamicarray">\n  <metadataTypes count="1">\n    <metadataType name="XLDAPR" minSupportedVersion="120000" copy="1" pasteAll="1" pasteValues="1" merge="1" splitFirst="1" rowColShift="1" clearFormats="1" clearComments="1" assign="1" coerce="1" cellMeta="1"/>\n  </metadataTypes>\n  <futureMetadata name="XLDAPR" count="1">\n    <bk>\n      <extLst>\n        <ext uri="{bdbb8cdc-fa1e-496e-a857-3c3f30c029c3}">\n          <xda:dynamicArrayProperties fDynamic="1" fCollapsed="0"/>\n        </ext>\n      </extLst>\n    </bk>\n  </futureMetadata>\n  <cellMetadata count="1">\n    <bk>\n      <rc t="1" v="0"/>\n    </bk>\n  </cellMetadata>\n</metadata>'),e.join("")}var Wi=1024;function Hi(e,t){for(var r=[21600,21600],n=["m0,0l0",r[1],r[0],r[1],r[0],"0xe"].join(","),a=[Gt("xml",null,{"xmlns:v":"urn:schemas-microsoft-com:vml","xmlns:o":rr,"xmlns:x":nr,"xmlns:mv":"http://macVmlSchemaUri"}).replace(/\/>/,">"),Gt("o:shapelayout",Gt("o:idmap",null,{"v:ext":"edit",data:e}),{"v:ext":"edit"}),Gt("v:shapetype",[Gt("v:stroke",null,{joinstyle:"miter"}),Gt("v:path",null,{gradientshapeok:"t","o:connecttype":"rect"})].join(""),{id:"_x0000_t202","o:spt":202,coordsize:r.join(","),path:n})];Wi<1e3*e;)Wi+=1e3;return t.forEach((function(e){var t=Qr(e[0]),r={color2:"#BEFF82",type:"gradient"};"gradient"==r.type&&(r.angle="-180");var n="gradient"==r.type?Gt("o:fill",null,{type:"gradientUnscaled","v:ext":"view"}):null,s=Gt("v:fill",n,r);++Wi,a=a.concat(["<v:shape"+$t({id:"_x0000_s"+Wi,type:"#_x0000_t202",style:"position:absolute; margin-left:80pt;margin-top:5pt;width:104pt;height:64pt;z-index:10"+(e[1].hidden?";visibility:hidden":""),fillcolor:"#ECFAD4",strokecolor:"#edeaa1"})+">",s,Gt("v:shadow",null,{on:"t",obscured:"t"}),Gt("v:path",null,{"o:connecttype":"none"}),'<v:textbox><div style="text-align:left"></div></v:textbox>','<x:ClientData ObjectType="Note">',"<x:MoveWithCells/>","<x:SizeWithCells/>",Vt("x:Anchor",[t.c+1,0,t.r+1,0,t.c+3,20,t.r+5,20].join(",")),Vt("x:AutoFill","False"),Vt("x:Row",String(t.r)),Vt("x:Column",String(t.c)),e[1].hidden?"":"<x:Visible/>","</x:ClientData>","</v:shape>"])})),a.push("</xml>"),a.join("")}function ji(e,t,r,n){var a,s=Array.isArray(e);t.forEach((function(t){var i=Qr(t.ref);if(s?(e[i.r]||(e[i.r]=[]),a=e[i.r][i.c]):a=e[t.ref],!a){a={t:"z"},s?e[i.r][i.c]=a:e[t.ref]=a;var o=tn(e["!ref"]||"BDWGO1000001:A1");o.s.r>i.r&&(o.s.r=i.r),o.e.r<i.r&&(o.e.r=i.r),o.s.c>i.c&&(o.s.c=i.c),o.e.c<i.c&&(o.e.c=i.c);var l=en(o);l!==e["!ref"]&&(e["!ref"]=l)}a.c||(a.c=[]);var c={a:t.author,t:t.t,r:t.r,T:r};t.h&&(c.h=t.h);for(var f=a.c.length-1;f>=0;--f){if(!r&&a.c[f].T)return;r&&!a.c[f].T&&a.c.splice(f,1)}if(r&&n)for(f=0;f<n.length;++f)if(c.a==n[f].id){c.a=n[f].name||c.a;break}a.c.push(c)}))}function Vi(e){var t=[ht,Gt("comments",null,{xmlns:tr[0]})],r=[];return t.push("<authors>"),e.forEach((function(e){e[1].forEach((function(e){var n=xt(e.a);-1==r.indexOf(n)&&(r.push(n),t.push("<author>"+n+"</author>")),e.T&&e.ID&&-1==r.indexOf("tc="+e.ID)&&(r.push("tc="+e.ID),t.push("<author>tc="+e.ID+"</author>"))}))})),0==r.length&&(r.push("SheetJ5"),t.push("<author>SheetJ5</author>")),t.push("</authors>"),t.push("<commentList>"),e.forEach((function(e){var n=0,a=[];if(e[1][0]&&e[1][0].T&&e[1][0].ID?n=r.indexOf("tc="+e[1][0].ID):e[1].forEach((function(e){e.a&&(n=r.indexOf(xt(e.a))),a.push(e.t||"")})),t.push('<comment ref="'+e[0]+'" authorId="'+n+'"><text>'),a.length<=1)t.push(Vt("t",xt(a[0]||"")));else{for(var s="Comment:\n    "+a[0]+"\n",i=1;i<a.length;++i)s+="Reply:\n    "+a[i]+"\n";t.push(Vt("t",xt(s)))}t.push("</text></comment>")})),t.push("</commentList>"),t.length>2&&(t[t.length]="</comments>",t[1]=t[1].replace("/>",">")),t.join("")}function $i(e,t,r){var n=[ht,Gt("ThreadedComments",null,{xmlns:Qt}).replace(/[\/]>/,">")];return e.forEach((function(e){var a="";(e[1]||[]).forEach((function(s,i){if(s.T){s.a&&-1==t.indexOf(s.a)&&t.push(s.a);var o={ref:e[0],id:"{54EE7951-7262-4200-6969-"+("000000000000"+r.tcid++).slice(-12)+"}"};0==i?a=o.id:o.parentId=a,s.ID=o.id,s.a&&(o.personId="{54EE7950-7262-4200-6969-"+("000000000000"+t.indexOf(s.a)).slice(-12)+"}"),n.push(Gt("threadedComment",Vt("text",s.t||""),o))}else delete s.ID}))})),n.push("</ThreadedComments>"),n.join("")}var Gi=ln;function Xi(e){var t=Wr(),r=[];return Hr(t,628),Hr(t,630),e.forEach((function(e){e[1].forEach((function(e){r.indexOf(e.a)>-1||(r.push(e.a.slice(0,54)),Hr(t,632,function(e){return cn(e.slice(0,54))}(e.a)))}))})),Hr(t,631),Hr(t,633),e.forEach((function(e){e[1].forEach((function(n){n.iauthor=r.indexOf(n.a);var a,s,i,o={s:Qr(e[0]),e:Qr(e[0])};Hr(t,635,function(e,t){return null==t&&(t=Br(36)),t.write_shift(4,e[1].iauthor),An(e[0],t),t.write_shift(4,0),t.write_shift(4,0),t.write_shift(4,0),t.write_shift(4,0),t}([o,n])),n.t&&n.t.length>0&&Hr(t,637,(a=n,i=!1,null==s&&(i=!0,s=Br(23+4*a.t.length)),s.write_shift(1,1),cn(a.t,s),s.write_shift(4,1),function(e,t){t||(t=Br(4)),t.write_shift(2,e.ich||0),t.write_shift(2,e.ifnt||0)}({ich:0,ifnt:0},s),i?s.slice(0,s.l):s)),Hr(t,636),delete n.iauthor}))})),Hr(t,634),Hr(t,629),t.end()}var Yi=["xlsb","xlsm","xlam","biff8","xla"],Ki=function(){var e=/(^|[^A-Za-z_])R(\[?-?\d+\]|[1-9]\d*|)C(\[?-?\d+\]|[1-9]\d*|)(?![A-Za-z0-9_])/g,t={r:0,c:0};function r(e,r,n,a){var s=!1,i=!1;0==n.length?i=!0:"["==n.charAt(0)&&(i=!0,n=n.slice(1,-1)),0==a.length?s=!0:"["==a.charAt(0)&&(s=!0,a=a.slice(1,-1));var o=n.length>0?0|parseInt(n,10):0,l=a.length>0?0|parseInt(a,10):0;return s?l+=t.c:--l,i?o+=t.r:--o,r+(s?"":"$")+qr(l)+(i?"":"$")+Yr(o)}return function(n,a){return t=a,n.replace(e,r)}}(),qi=/(^|[^._A-Z0-9])([$]?)([A-Z]{1,2}|[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D])([$]?)(10[0-3]\d{4}|104[0-7]\d{3}|1048[0-4]\d{2}|10485[0-6]\d|104857[0-6]|[1-9]\d{0,5})(?![_.\(A-Za-z0-9])/g,Qi=function(){return function(e,t){return e.replace(qi,(function(e,r,n,a,s,i){var o=Kr(a)-(n?0:t.c),l=Xr(i)-(s?0:t.r);return r+"R"+(0==l?"":s?l+1:"["+l+"]")+"C"+(0==o?"":n?o+1:"["+o+"]")}))}}();function Ji(e,t){return e.replace(qi,(function(e,r,n,a,s,i){return r+("$"==n?n+a:qr(Kr(a)+t.c))+("$"==s?s+i:Yr(Xr(i)+t.r))}))}function Zi(e,t,r){var n=Zr(t).s,a=Qr(r);return Ji(e,{r:a.r-n.r,c:a.c-n.c})}function eo(e){return e.replace(/_xlfn\./g,"")}function to(e){e.l+=1}function ro(e,t){var r=e.read_shift(1==t?1:2);return[16383&r,r>>14&1,r>>15&1]}function no(e,t,r){var n=2;if(r){if(r.biff>=2&&r.biff<=5)return ao(e);12==r.biff&&(n=4)}var a=e.read_shift(n),s=e.read_shift(n),i=ro(e,2),o=ro(e,2);return{s:{r:a,c:i[0],cRel:i[1],rRel:i[2]},e:{r:s,c:o[0],cRel:o[1],rRel:o[2]}}}function ao(e){var t=ro(e,2),r=ro(e,2),n=e.read_shift(1),a=e.read_shift(1);return{s:{r:t[0],c:n,cRel:t[1],rRel:t[2]},e:{r:r[0],c:a,cRel:r[1],rRel:r[2]}}}function so(e,t,r){if(r&&r.biff>=2&&r.biff<=5)return function(e){var t=ro(e,2),r=e.read_shift(1);return{r:t[0],c:r,cRel:t[1],rRel:t[2]}}(e);var n=e.read_shift(r&&12==r.biff?4:2),a=ro(e,2);return{r:n,c:a[0],cRel:a[1],rRel:a[2]}}function io(e){var t=e.read_shift(2),r=e.read_shift(2);return{r:t,c:255&r,fQuoted:!!(16384&r),cRel:r>>15,rRel:r>>15}}function oo(e){var t=1&e[e.l+1];return e.l+=4,[t,1]}function lo(e){return[e.read_shift(1),e.read_shift(1)]}function co(e,t){var r=[e.read_shift(1)];if(12==t)switch(r[0]){case 2:r[0]=4;break;case 4:r[0]=16;break;case 0:r[0]=1;break;case 1:r[0]=2}switch(r[0]){case 4:r[1]=Ra(e,1)?"TRUE":"FALSE",12!=t&&(e.l+=7);break;case 37:case 16:r[1]=Wn[e[e.l]],e.l+=12==t?4:8;break;case 0:e.l+=8;break;case 1:r[1]=On(e);break;case 2:r[1]=Wa(e,0,{biff:t>0&&t<8?2:t});break;default:throw new Error("Bad SerAr: "+r[0])}return r}function fo(e,t,r){for(var n=e.read_shift(12==r.biff?4:2),a=[],s=0;s!=n;++s)a.push((12==r.biff?Cn:Ja)(e,8));return a}function uo(e,t,r){var n=0,a=0;12==r.biff?(n=e.read_shift(4),a=e.read_shift(4)):(a=1+e.read_shift(1),n=1+e.read_shift(2)),r.biff>=2&&r.biff<8&&(--n,0==--a&&(a=256));for(var s=0,i=[];s!=n&&(i[s]=[]);++s)for(var o=0;o!=a;++o)i[s][o]=co(e,r.biff);return i}function ho(e,t,r){return e.l+=2,[io(e)]}function po(e){return e.l+=6,[]}function mo(e){return e.l+=2,[Ia(e),1&e.read_shift(2)]}var go=["Data","All","Headers","??","?Data2","??","?DataHeaders","??","Totals","??","??","??","?DataTotals","??","??","??","?Current"],vo={1:{n:"PtgExp",f:function(e,t,r){return e.l++,r&&12==r.biff?[e.read_shift(4,"i"),0]:[e.read_shift(2),e.read_shift(r&&2==r.biff?1:2)]}},2:{n:"PtgTbl",f:Ur},3:{n:"PtgAdd",f:to},4:{n:"PtgSub",f:to},5:{n:"PtgMul",f:to},6:{n:"PtgDiv",f:to},7:{n:"PtgPower",f:to},8:{n:"PtgConcat",f:to},9:{n:"PtgLt",f:to},10:{n:"PtgLe",f:to},11:{n:"PtgEq",f:to},12:{n:"PtgGe",f:to},13:{n:"PtgGt",f:to},14:{n:"PtgNe",f:to},15:{n:"PtgIsect",f:to},16:{n:"PtgUnion",f:to},17:{n:"PtgRange",f:to},18:{n:"PtgUplus",f:to},19:{n:"PtgUminus",f:to},20:{n:"PtgPercent",f:to},21:{n:"PtgParen",f:to},22:{n:"PtgMissArg",f:to},23:{n:"PtgStr",f:function(e,t,r){return e.l++,La(e,0,r)}},26:{n:"PtgSheet",f:function(e,t,r){return e.l+=5,e.l+=2,e.l+=2==r.biff?1:4,["PTGSHEET"]}},27:{n:"PtgEndSheet",f:function(e,t,r){return e.l+=2==r.biff?4:5,["PTGENDSHEET"]}},28:{n:"PtgErr",f:function(e){return e.l++,Wn[e.read_shift(1)]}},29:{n:"PtgBool",f:function(e){return e.l++,0!==e.read_shift(1)}},30:{n:"PtgInt",f:function(e){return e.l++,e.read_shift(2)}},31:{n:"PtgNum",f:function(e){return e.l++,On(e)}},32:{n:"PtgArray",f:function(e,t,r){var n=(96&e[e.l++])>>5;return e.l+=2==r.biff?6:12==r.biff?14:7,[n]}},33:{n:"PtgFunc",f:function(e,t,r){var n=(96&e[e.l])>>5;e.l+=1;var a=e.read_shift(r&&r.biff<=3?1:2);return[Uo[a],Mo[a],n]}},34:{n:"PtgFuncVar",f:function(e,t,r){var n=e[e.l++],a=e.read_shift(1),s=r&&r.biff<=3?[88==n?-1:0,e.read_shift(1)]:function(e){return[e[e.l+1]>>7,32767&e.read_shift(2)]}(e);return[a,(0===s[0]?Mo:Lo)[s[1]]]}},35:{n:"PtgName",f:function(e,t,r){var n=e.read_shift(1)>>>5&3,a=!r||r.biff>=8?4:2,s=e.read_shift(a);switch(r.biff){case 2:e.l+=5;break;case 3:case 4:e.l+=8;break;case 5:e.l+=12}return[n,0,s]}},36:{n:"PtgRef",f:function(e,t,r){var n=(96&e[e.l])>>5;return e.l+=1,[n,so(e,0,r)]}},37:{n:"PtgArea",f:function(e,t,r){return[(96&e[e.l++])>>5,no(e,r.biff>=2&&r.biff,r)]}},38:{n:"PtgMemArea",f:function(e,t,r){var n=e.read_shift(1)>>>5&3;return e.l+=r&&2==r.biff?3:4,[n,e.read_shift(r&&2==r.biff?1:2)]}},39:{n:"PtgMemErr",f:Ur},40:{n:"PtgMemNoMem",f:Ur},41:{n:"PtgMemFunc",f:function(e,t,r){return[e.read_shift(1)>>>5&3,e.read_shift(r&&2==r.biff?1:2)]}},42:{n:"PtgRefErr",f:function(e,t,r){var n=e.read_shift(1)>>>5&3;return e.l+=4,r.biff<8&&e.l--,12==r.biff&&(e.l+=2),[n]}},43:{n:"PtgAreaErr",f:function(e,t,r){var n=(96&e[e.l++])>>5;return e.l+=r&&r.biff>8?12:r.biff<8?6:8,[n]}},44:{n:"PtgRefN",f:function(e,t,r){var n=(96&e[e.l])>>5;e.l+=1;var a=function(e,t,r){var n=r&&r.biff?r.biff:8;if(n>=2&&n<=5)return function(e){var t=e.read_shift(2),r=e.read_shift(1),n=(32768&t)>>15,a=(16384&t)>>14;return t&=16383,1==n&&t>=8192&&(t-=16384),1==a&&r>=128&&(r-=256),{r:t,c:r,cRel:a,rRel:n}}(e);var a=e.read_shift(n>=12?4:2),s=e.read_shift(2),i=(16384&s)>>14,o=(32768&s)>>15;if(s&=16383,1==o)for(;a>524287;)a-=1048576;if(1==i)for(;s>8191;)s-=16384;return{r:a,c:s,cRel:i,rRel:o}}(e,0,r);return[n,a]}},45:{n:"PtgAreaN",f:function(e,t,r){var n=(96&e[e.l++])>>5,a=function(e,t,r){if(r.biff<8)return ao(e);var n=e.read_shift(12==r.biff?4:2),a=e.read_shift(12==r.biff?4:2),s=ro(e,2),i=ro(e,2);return{s:{r:n,c:s[0],cRel:s[1],rRel:s[2]},e:{r:a,c:i[0],cRel:i[1],rRel:i[2]}}}(e,0,r);return[n,a]}},46:{n:"PtgMemAreaN",f:function(e){return[e.read_shift(1)>>>5&3,e.read_shift(2)]}},47:{n:"PtgMemNoMemN",f:function(e){return[e.read_shift(1)>>>5&3,e.read_shift(2)]}},57:{n:"PtgNameX",f:function(e,t,r){return 5==r.biff?function(e){var t=e.read_shift(1)>>>5&3,r=e.read_shift(2,"i");e.l+=8;var n=e.read_shift(2);return e.l+=12,[t,r,n]}(e):[e.read_shift(1)>>>5&3,e.read_shift(2),e.read_shift(4)]}},58:{n:"PtgRef3d",f:function(e,t,r){var n=(96&e[e.l])>>5;e.l+=1;var a=e.read_shift(2);return r&&5==r.biff&&(e.l+=12),[n,a,so(e,0,r)]}},59:{n:"PtgArea3d",f:function(e,t,r){var n=(96&e[e.l++])>>5,a=e.read_shift(2,"i");if(r&&5===r.biff)e.l+=12;return[n,a,no(e,0,r)]}},60:{n:"PtgRefErr3d",f:function(e,t,r){var n=(96&e[e.l++])>>5,a=e.read_shift(2),s=4;if(r)switch(r.biff){case 5:s=15;break;case 12:s=6}return e.l+=s,[n,a]}},61:{n:"PtgAreaErr3d",f:function(e,t,r){var n=(96&e[e.l++])>>5,a=e.read_shift(2),s=8;if(r)switch(r.biff){case 5:e.l+=12,s=6;break;case 12:s=12}return e.l+=s,[n,a]}},255:{}},bo={64:32,96:32,65:33,97:33,66:34,98:34,67:35,99:35,68:36,100:36,69:37,101:37,70:38,102:38,71:39,103:39,72:40,104:40,73:41,105:41,74:42,106:42,75:43,107:43,76:44,108:44,77:45,109:45,78:46,110:46,79:47,111:47,88:34,120:34,89:57,121:57,90:58,122:58,91:59,123:59,92:60,124:60,93:61,125:61},wo={1:{n:"PtgElfLel",f:mo},2:{n:"PtgElfRw",f:ho},3:{n:"PtgElfCol",f:ho},6:{n:"PtgElfRwV",f:ho},7:{n:"PtgElfColV",f:ho},10:{n:"PtgElfRadical",f:ho},11:{n:"PtgElfRadicalS",f:po},13:{n:"PtgElfColS",f:po},15:{n:"PtgElfColSV",f:po},16:{n:"PtgElfRadicalLel",f:mo},25:{n:"PtgList",f:function(e){e.l+=2;var t=e.read_shift(2),r=e.read_shift(2),n=e.read_shift(4),a=e.read_shift(2),s=e.read_shift(2);return{ixti:t,coltype:3&r,rt:go[r>>2&31],idx:n,c:a,C:s}}},29:{n:"PtgSxName",f:function(e){return e.l+=2,[e.read_shift(4)]}},255:{}},yo={0:{n:"PtgAttrNoop",f:function(e){return e.l+=4,[0,0]}},1:{n:"PtgAttrSemi",f:function(e,t,r){var n=255&e[e.l+1]?1:0;return e.l+=r&&2==r.biff?3:4,[n]}},2:{n:"PtgAttrIf",f:function(e,t,r){var n=255&e[e.l+1]?1:0;return e.l+=2,[n,e.read_shift(r&&2==r.biff?1:2)]}},4:{n:"PtgAttrChoose",f:function(e,t,r){e.l+=2;for(var n=e.read_shift(r&&2==r.biff?1:2),a=[],s=0;s<=n;++s)a.push(e.read_shift(r&&2==r.biff?1:2));return a}},8:{n:"PtgAttrGoto",f:function(e,t,r){var n=255&e[e.l+1]?1:0;return e.l+=2,[n,e.read_shift(r&&2==r.biff?1:2)]}},16:{n:"PtgAttrSum",f:function(e,t,r){e.l+=r&&2==r.biff?3:4}},32:{n:"PtgAttrBaxcel",f:oo},33:{n:"PtgAttrBaxcel",f:oo},64:{n:"PtgAttrSpace",f:function(e){return e.read_shift(2),lo(e)}},65:{n:"PtgAttrSpaceSemi",f:function(e){return e.read_shift(2),lo(e)}},128:{n:"PtgAttrIfError",f:function(e){var t=255&e[e.l+1]?1:0;return e.l+=2,[t,e.read_shift(2)]}},255:{}};function ko(e,t,r,n){if(n.biff<8)return Ur(e,t);for(var a=e.l+t,s=[],i=0;i!==r.length;++i)switch(r[i][0]){case"PtgArray":r[i][1]=uo(e,0,n),s.push(r[i][1]);break;case"PtgMemArea":r[i][2]=fo(e,r[i][1],n),s.push(r[i][2]);break;case"PtgExp":n&&12==n.biff&&(r[i][1][1]=e.read_shift(4),s.push(r[i][1]));break;case"PtgList":case"PtgElfRadicalS":case"PtgElfColS":case"PtgElfColSV":throw"Unsupported "+r[i][0]}return 0!=(t=a-e.l)&&s.push(Ur(e,t)),s}function To(e,t,r){for(var n,a,s=e.l+t,i=[];s!=e.l;)t=s-e.l,a=e[e.l],n=vo[a]||vo[bo[a]],24!==a&&25!==a||(n=(24===a?wo:yo)[e[e.l+1]]),n&&n.f?i.push([n.n,n.f(e,t,r)]):Ur(e,t);return i}function So(e){for(var t=[],r=0;r<e.length;++r){for(var n=e[r],a=[],s=0;s<n.length;++s){var i=n[s];i?2===i[0]?a.push('"'+i[1].replace(/"/g,'""')+'"'):a.push(i[1]):a.push("")}t.push(a.join(","))}return t.join(";")}var Eo={PtgAdd:"+",PtgConcat:"&",PtgDiv:"/",PtgEq:"=",PtgGe:">=",PtgGt:">",PtgLe:"<=",PtgLt:"<",PtgMul:"*",PtgNe:"<>",PtgPower:"^",PtgSub:"-"};function xo(e,t,r){if(!e)return"SH33TJSERR0";if(r.biff>8&&(!e.XTI||!e.XTI[t]))return e.SheetNames[t];if(!e.XTI)return"SH33TJSERR6";var n=e.XTI[t];if(r.biff<8)return t>1e4&&(t-=65536),t<0&&(t=-t),0==t?"":e.XTI[t-1];if(!n)return"SH33TJSERR1";var a="";if(r.biff>8)switch(e[n[0]][0]){case 357:return a=-1==n[1]?"#REF":e.SheetNames[n[1]],n[1]==n[2]?a:a+":"+e.SheetNames[n[2]];case 358:return null!=r.SID?e.SheetNames[r.SID]:"SH33TJSSAME"+e[n[0]][0];default:return"SH33TJSSRC"+e[n[0]][0]}switch(e[n[0]][0][0]){case 1025:return a=-1==n[1]?"#REF":e.SheetNames[n[1]]||"SH33TJSERR3",n[1]==n[2]?a:a+":"+e.SheetNames[n[2]];case 14849:return e[n[0]].slice(1).map((function(e){return e.Name})).join(";;");default:return e[n[0]][0][3]?(a=-1==n[1]?"#REF":e[n[0]][0][3][n[1]]||"SH33TJSERR4",n[1]==n[2]?a:a+":"+e[n[0]][0][3][n[2]]):"SH33TJSERR2"}}function _o(e,t,r){var n=xo(e,t,r);return"#REF"==n?n:function(e,t){if(!(e||t&&t.biff<=5&&t.biff>=2))throw new Error("empty sheet name");return/[^\w\u4E00-\u9FFF\u3040-\u30FF]/.test(e)?"'"+e+"'":e}(n,r)}function Co(e,t,r,n,a){var s,i,o,l,c=a&&a.biff||8,f={s:{c:0,r:0},e:{c:0,r:0}},u=[],h=0,d=0,p="";if(!e[0]||!e[0][0])return"";for(var m=-1,g="",v=0,b=e[0].length;v<b;++v){var w=e[0][v];switch(w[0]){case"PtgUminus":u.push("-"+u.pop());break;case"PtgUplus":u.push("+"+u.pop());break;case"PtgPercent":u.push(u.pop()+"%");break;case"PtgAdd":case"PtgConcat":case"PtgDiv":case"PtgEq":case"PtgGe":case"PtgGt":case"PtgLe":case"PtgLt":case"PtgMul":case"PtgNe":case"PtgPower":case"PtgSub":if(s=u.pop(),i=u.pop(),m>=0){switch(e[0][m][1][0]){case 0:g=Ke(" ",e[0][m][1][1]);break;case 1:g=Ke("\r",e[0][m][1][1]);break;default:if(g="",a.WTF)throw new Error("Unexpected PtgAttrSpaceType "+e[0][m][1][0])}i+=g,m=-1}u.push(i+Eo[w[0]]+s);break;case"PtgIsect":s=u.pop(),i=u.pop(),u.push(i+" "+s);break;case"PtgUnion":s=u.pop(),i=u.pop(),u.push(i+","+s);break;case"PtgRange":s=u.pop(),i=u.pop(),u.push(i+":"+s);break;case"PtgAttrChoose":case"PtgAttrGoto":case"PtgAttrIf":case"PtgAttrIfError":case"PtgAttrBaxcel":case"PtgAttrSemi":case"PtgMemArea":case"PtgTbl":case"PtgMemErr":case"PtgMemAreaN":case"PtgMemNoMemN":case"PtgAttrNoop":case"PtgSheet":case"PtgEndSheet":case"PtgMemFunc":case"PtgMemNoMem":break;case"PtgRef":o=jr(w[1][1],f,a),u.push($r(o,c));break;case"PtgRefN":o=r?jr(w[1][1],r,a):w[1][1],u.push($r(o,c));break;case"PtgRef3d":h=w[1][1],o=jr(w[1][2],f,a),p=_o(n,h,a),u.push(p+"!"+$r(o,c));break;case"PtgFunc":case"PtgFuncVar":var y=w[1][0],k=w[1][1];y||(y=0);var T=0==(y&=127)?[]:u.slice(-y);u.length-=y,"User"===k&&(k=T.shift()),u.push(k+"("+T.join(",")+")");break;case"PtgBool":u.push(w[1]?"TRUE":"FALSE");break;case"PtgInt":case"PtgErr":u.push(w[1]);break;case"PtgNum":u.push(String(w[1]));break;case"PtgStr":u.push('"'+w[1].replace(/"/g,'""')+'"');break;case"PtgAreaN":l=Vr(w[1][1],r?{s:r}:f,a),u.push(Gr(l,a));break;case"PtgArea":l=Vr(w[1][1],f,a),u.push(Gr(l,a));break;case"PtgArea3d":h=w[1][1],l=w[1][2],p=_o(n,h,a),u.push(p+"!"+Gr(l,a));break;case"PtgAttrSum":u.push("SUM("+u.pop()+")");break;case"PtgName":d=w[1][2];var S=(n.names||[])[d-1]||(n[0]||[])[d],E=S?S.Name:"SH33TJSNAME"+String(d);E&&"_xlfn."==E.slice(0,6)&&!a.xlfn&&(E=E.slice(6)),u.push(E);break;case"PtgNameX":var x,_=w[1][1];if(d=w[1][2],!(a.biff<=5)){var C="";if(14849==((n[_]||[])[0]||[])[0]||(1025==((n[_]||[])[0]||[])[0]?n[_][d]&&n[_][d].itab>0&&(C=n.SheetNames[n[_][d].itab-1]+"!"):C=n.SheetNames[d-1]+"!"),n[_]&&n[_][d])C+=n[_][d].Name;else if(n[0]&&n[0][d])C+=n[0][d].Name;else{var A=(xo(n,_,a)||"").split(";;");A[d-1]?C=A[d-1]:C+="SH33TJSERRX"}u.push(C);break}_<0&&(_=-_),n[_]&&(x=n[_][d]),x||(x={Name:"SH33TJSERRY"}),u.push(x.Name);break;case"PtgParen":var O="(",R=")";if(m>=0){switch(g="",e[0][m][1][0]){case 2:O=Ke(" ",e[0][m][1][1])+O;break;case 3:O=Ke("\r",e[0][m][1][1])+O;break;case 4:R=Ke(" ",e[0][m][1][1])+R;break;case 5:R=Ke("\r",e[0][m][1][1])+R;break;default:if(a.WTF)throw new Error("Unexpected PtgAttrSpaceType "+e[0][m][1][0])}m=-1}u.push(O+u.pop()+R);break;case"PtgRefErr":case"PtgRefErr3d":case"PtgAreaErr":case"PtgAreaErr3d":u.push("#REF!");break;case"PtgExp":o={c:w[1][1],r:w[1][0]};var N={c:r.c,r:r.r};if(n.sharedf[Jr(o)]){var I=n.sharedf[Jr(o)];u.push(Co(I,0,N,n,a))}else{var P=!1;for(s=0;s!=n.arrayf.length;++s)if(i=n.arrayf[s],!(o.c<i[0].s.c||o.c>i[0].e.c||o.r<i[0].s.r||o.r>i[0].e.r)){u.push(Co(i[1],0,N,n,a)),P=!0;break}P||u.push(w[1])}break;case"PtgArray":u.push("{"+So(w[1])+"}");break;case"PtgAttrSpace":case"PtgAttrSpaceSemi":m=v;break;case"PtgMissArg":u.push("");break;case"PtgList":u.push("Table"+w[1].idx+"[#"+w[1].rt+"]");break;case"PtgElfCol":case"PtgElfColS":case"PtgElfColSV":case"PtgElfColV":case"PtgElfLel":case"PtgElfRadical":case"PtgElfRadicalLel":case"PtgElfRadicalS":case"PtgElfRw":case"PtgElfRwV":throw new Error("Unsupported ELFs");default:throw new Error("Unrecognized Formula Token: "+String(w))}if(3!=a.biff&&m>=0&&-1==["PtgAttrSpace","PtgAttrSpaceSemi","PtgAttrGoto"].indexOf(e[0][v][0])){var D=!0;switch((w=e[0][m])[1][0]){case 4:D=!1;case 0:g=Ke(" ",w[1][1]);break;case 5:D=!1;case 1:g=Ke("\r",w[1][1]);break;default:if(g="",a.WTF)throw new Error("Unexpected PtgAttrSpaceType "+w[1][0])}u.push((D?g:"")+u.pop()+(D?"":g)),m=-1}}if(u.length>1&&a.WTF)throw new Error("bad formula stack");return u[0]}function Ao(e,t,r){var n,a=e.l+t,s=2==r.biff?1:2,i=e.read_shift(s);if(65535==i)return[[],Ur(e,t-2)];var o=To(e,i,r);return t!==i+s&&(n=ko(e,t-i-s,o,r)),e.l=a,[o,n]}function Oo(e,t,r){var n,a=e.l+t,s=e.read_shift(2),i=To(e,s,r);return 65535==s?[[],Ur(e,t-2)]:(t!==s+2&&(n=ko(e,a-s-2,i,r)),[i,n])}function Ro(e,t,r){var n=e.l+t,a=Ya(e);2==r.biff&&++e.l;var s=function(e){var t;if(65535!==Ar(e,e.l+6))return[On(e),"n"];switch(e[e.l]){case 0:return e.l+=8,["String","s"];case 1:return t=1===e[e.l+2],e.l+=8,[t,"b"];case 2:return t=e[e.l+2],e.l+=8,[t,"e"];case 3:return e.l+=8,["","s"]}return[]}(e),i=e.read_shift(1);2!=r.biff&&(e.read_shift(1),r.biff>=5&&e.read_shift(4));var o=function(e,t,r){var n,a=e.l+t,s=2==r.biff?1:2,i=e.read_shift(s);if(65535==i)return[[],Ur(e,t-2)];var o=To(e,i,r);return t!==i+s&&(n=ko(e,t-i-s,o,r)),e.l=a,[o,n]}(e,n-e.l,r);return{cell:a,val:s[0],formula:o,shared:i>>3&1,tt:s[1]}}function No(e,t,r){var n=e.read_shift(4),a=To(e,n,r),s=e.read_shift(4);return[a,s>0?ko(e,s,a,r):null]}var Io=No,Po=No,Do=No,Fo=No,Lo={0:"BEEP",1:"OPEN",2:"OPEN.LINKS",3:"CLOSE.ALL",4:"SAVE",5:"SAVE.AS",6:"FILE.DELETE",7:"PAGE.SETUP",8:"PRINT",9:"PRINTER.SETUP",10:"QUIT",11:"NEW.WINDOW",12:"ARRANGE.ALL",13:"WINDOW.SIZE",14:"WINDOW.MOVE",15:"FULL",16:"CLOSE",17:"RUN",22:"SET.PRINT.AREA",23:"SET.PRINT.TITLES",24:"SET.PAGE.BREAK",25:"REMOVE.PAGE.BREAK",26:"FONT",27:"DISPLAY",28:"PROTECT.DOCUMENT",29:"PRECISION",30:"A1.R1C1",31:"CALCULATE.NOW",32:"CALCULATION",34:"DATA.FIND",35:"EXTRACT",36:"DATA.DELETE",37:"SET.DATABASE",38:"SET.CRITERIA",39:"SORT",40:"DATA.SERIES",41:"TABLE",42:"FORMAT.NUMBER",43:"ALIGNMENT",44:"STYLE",45:"BORDER",46:"CELL.PROTECTION",47:"COLUMN.WIDTH",48:"UNDO",49:"CUT",50:"COPY",51:"PASTE",52:"CLEAR",53:"PASTE.SPECIAL",54:"EDIT.DELETE",55:"INSERT",56:"FILL.RIGHT",57:"FILL.DOWN",61:"DEFINE.NAME",62:"CREATE.NAMES",63:"FORMULA.GOTO",64:"FORMULA.FIND",65:"SELECT.LAST.CELL",66:"SHOW.ACTIVE.CELL",67:"GALLERY.AREA",68:"GALLERY.BAR",69:"GALLERY.COLUMN",70:"GALLERY.LINE",71:"GALLERY.PIE",72:"GALLERY.SCATTER",73:"COMBINATION",74:"PREFERRED",75:"ADD.OVERLAY",76:"GRIDLINES",77:"SET.PREFERRED",78:"AXES",79:"LEGEND",80:"ATTACH.TEXT",81:"ADD.ARROW",82:"SELECT.CHART",83:"SELECT.PLOT.AREA",84:"PATTERNS",85:"MAIN.CHART",86:"OVERLAY",87:"SCALE",88:"FORMAT.LEGEND",89:"FORMAT.TEXT",90:"EDIT.REPEAT",91:"PARSE",92:"JUSTIFY",93:"HIDE",94:"UNHIDE",95:"WORKSPACE",96:"FORMULA",97:"FORMULA.FILL",98:"FORMULA.ARRAY",99:"DATA.FIND.NEXT",100:"DATA.FIND.PREV",101:"FORMULA.FIND.NEXT",102:"FORMULA.FIND.PREV",103:"ACTIVATE",104:"ACTIVATE.NEXT",105:"ACTIVATE.PREV",106:"UNLOCKED.NEXT",107:"UNLOCKED.PREV",108:"COPY.PICTURE",109:"SELECT",110:"DELETE.NAME",111:"DELETE.FORMAT",112:"VLINE",113:"HLINE",114:"VPAGE",115:"HPAGE",116:"VSCROLL",117:"HSCROLL",118:"ALERT",119:"NEW",120:"CANCEL.COPY",121:"SHOW.CLIPBOARD",122:"MESSAGE",124:"PASTE.LINK",125:"APP.ACTIVATE",126:"DELETE.ARROW",127:"ROW.HEIGHT",128:"FORMAT.MOVE",129:"FORMAT.SIZE",130:"FORMULA.REPLACE",131:"SEND.KEYS",132:"SELECT.SPECIAL",133:"APPLY.NAMES",134:"REPLACE.FONT",135:"FREEZE.PANES",136:"SHOW.INFO",137:"SPLIT",138:"ON.WINDOW",139:"ON.DATA",140:"DISABLE.INPUT",142:"OUTLINE",143:"LIST.NAMES",144:"FILE.CLOSE",145:"SAVE.WORKBOOK",146:"DATA.FORM",147:"COPY.CHART",148:"ON.TIME",149:"WAIT",150:"FORMAT.FONT",151:"FILL.UP",152:"FILL.LEFT",153:"DELETE.OVERLAY",155:"SHORT.MENUS",159:"SET.UPDATE.STATUS",161:"COLOR.PALETTE",162:"DELETE.STYLE",163:"WINDOW.RESTORE",164:"WINDOW.MAXIMIZE",166:"CHANGE.LINK",167:"CALCULATE.DOCUMENT",168:"ON.KEY",169:"APP.RESTORE",170:"APP.MOVE",171:"APP.SIZE",172:"APP.MINIMIZE",173:"APP.MAXIMIZE",174:"BRING.TO.FRONT",175:"SEND.TO.BACK",185:"MAIN.CHART.TYPE",186:"OVERLAY.CHART.TYPE",187:"SELECT.END",188:"OPEN.MAIL",189:"SEND.MAIL",190:"STANDARD.FONT",191:"CONSOLIDATE",192:"SORT.SPECIAL",193:"GALLERY.3D.AREA",194:"GALLERY.3D.COLUMN",195:"GALLERY.3D.LINE",196:"GALLERY.3D.PIE",197:"VIEW.3D",198:"GOAL.SEEK",199:"WORKGROUP",200:"FILL.GROUP",201:"UPDATE.LINK",202:"PROMOTE",203:"DEMOTE",204:"SHOW.DETAIL",206:"UNGROUP",207:"OBJECT.PROPERTIES",208:"SAVE.NEW.OBJECT",209:"SHARE",210:"SHARE.NAME",211:"DUPLICATE",212:"APPLY.STYLE",213:"ASSIGN.TO.OBJECT",214:"OBJECT.PROTECTION",215:"HIDE.OBJECT",216:"SET.EXTRACT",217:"CREATE.PUBLISHER",218:"SUBSCRIBE.TO",219:"ATTRIBUTES",220:"SHOW.TOOLBAR",222:"PRINT.PREVIEW",223:"EDIT.COLOR",224:"SHOW.LEVELS",225:"FORMAT.MAIN",226:"FORMAT.OVERLAY",227:"ON.RECALC",228:"EDIT.SERIES",229:"DEFINE.STYLE",240:"LINE.PRINT",243:"ENTER.DATA",249:"GALLERY.RADAR",250:"MERGE.STYLES",251:"EDITION.OPTIONS",252:"PASTE.PICTURE",253:"PASTE.PICTURE.LINK",254:"SPELLING",256:"ZOOM",259:"INSERT.OBJECT",260:"WINDOW.MINIMIZE",265:"SOUND.NOTE",266:"SOUND.PLAY",267:"FORMAT.SHAPE",268:"EXTEND.POLYGON",269:"FORMAT.AUTO",272:"GALLERY.3D.BAR",273:"GALLERY.3D.SURFACE",274:"FILL.AUTO",276:"CUSTOMIZE.TOOLBAR",277:"ADD.TOOL",278:"EDIT.OBJECT",279:"ON.DOUBLECLICK",280:"ON.ENTRY",281:"WORKBOOK.ADD",282:"WORKBOOK.MOVE",283:"WORKBOOK.COPY",284:"WORKBOOK.OPTIONS",285:"SAVE.WORKSPACE",288:"CHART.WIZARD",289:"DELETE.TOOL",290:"MOVE.TOOL",291:"WORKBOOK.SELECT",292:"WORKBOOK.ACTIVATE",293:"ASSIGN.TO.TOOL",295:"COPY.TOOL",296:"RESET.TOOL",297:"CONSTRAIN.NUMERIC",298:"PASTE.TOOL",302:"WORKBOOK.NEW",305:"SCENARIO.CELLS",306:"SCENARIO.DELETE",307:"SCENARIO.ADD",308:"SCENARIO.EDIT",309:"SCENARIO.SHOW",310:"SCENARIO.SHOW.NEXT",311:"SCENARIO.SUMMARY",312:"PIVOT.TABLE.WIZARD",313:"PIVOT.FIELD.PROPERTIES",314:"PIVOT.FIELD",315:"PIVOT.ITEM",316:"PIVOT.ADD.FIELDS",318:"OPTIONS.CALCULATION",319:"OPTIONS.EDIT",320:"OPTIONS.VIEW",321:"ADDIN.MANAGER",322:"MENU.EDITOR",323:"ATTACH.TOOLBARS",324:"VBAActivate",325:"OPTIONS.CHART",328:"VBA.INSERT.FILE",330:"VBA.PROCEDURE.DEFINITION",336:"ROUTING.SLIP",338:"ROUTE.DOCUMENT",339:"MAIL.LOGON",342:"INSERT.PICTURE",343:"EDIT.TOOL",344:"GALLERY.DOUGHNUT",350:"CHART.TREND",352:"PIVOT.ITEM.PROPERTIES",354:"WORKBOOK.INSERT",355:"OPTIONS.TRANSITION",356:"OPTIONS.GENERAL",370:"FILTER.ADVANCED",373:"MAIL.ADD.MAILER",374:"MAIL.DELETE.MAILER",375:"MAIL.REPLY",376:"MAIL.REPLY.ALL",377:"MAIL.FORWARD",378:"MAIL.NEXT.LETTER",379:"DATA.LABEL",380:"INSERT.TITLE",381:"FONT.PROPERTIES",382:"MACRO.OPTIONS",383:"WORKBOOK.HIDE",384:"WORKBOOK.UNHIDE",385:"WORKBOOK.DELETE",386:"WORKBOOK.NAME",388:"GALLERY.CUSTOM",390:"ADD.CHART.AUTOFORMAT",391:"DELETE.CHART.AUTOFORMAT",392:"CHART.ADD.DATA",393:"AUTO.OUTLINE",394:"TAB.ORDER",395:"SHOW.DIALOG",396:"SELECT.ALL",397:"UNGROUP.SHEETS",398:"SUBTOTAL.CREATE",399:"SUBTOTAL.REMOVE",400:"RENAME.OBJECT",412:"WORKBOOK.SCROLL",413:"WORKBOOK.NEXT",414:"WORKBOOK.PREV",415:"WORKBOOK.TAB.SPLIT",416:"FULL.SCREEN",417:"WORKBOOK.PROTECT",420:"SCROLLBAR.PROPERTIES",421:"PIVOT.SHOW.PAGES",422:"TEXT.TO.COLUMNS",423:"FORMAT.CHARTTYPE",424:"LINK.FORMAT",425:"TRACER.DISPLAY",430:"TRACER.NAVIGATE",431:"TRACER.CLEAR",432:"TRACER.ERROR",433:"PIVOT.FIELD.GROUP",434:"PIVOT.FIELD.UNGROUP",435:"CHECKBOX.PROPERTIES",436:"LABEL.PROPERTIES",437:"LISTBOX.PROPERTIES",438:"EDITBOX.PROPERTIES",439:"PIVOT.REFRESH",440:"LINK.COMBO",441:"OPEN.TEXT",442:"HIDE.DIALOG",443:"SET.DIALOG.FOCUS",444:"ENABLE.OBJECT",445:"PUSHBUTTON.PROPERTIES",446:"SET.DIALOG.DEFAULT",447:"FILTER",448:"FILTER.SHOW.ALL",449:"CLEAR.OUTLINE",450:"FUNCTION.WIZARD",451:"ADD.LIST.ITEM",452:"SET.LIST.ITEM",453:"REMOVE.LIST.ITEM",454:"SELECT.LIST.ITEM",455:"SET.CONTROL.VALUE",456:"SAVE.COPY.AS",458:"OPTIONS.LISTS.ADD",459:"OPTIONS.LISTS.DELETE",460:"SERIES.AXES",461:"SERIES.X",462:"SERIES.Y",463:"ERRORBAR.X",464:"ERRORBAR.Y",465:"FORMAT.CHART",466:"SERIES.ORDER",467:"MAIL.LOGOFF",468:"CLEAR.ROUTING.SLIP",469:"APP.ACTIVATE.MICROSOFT",470:"MAIL.EDIT.MAILER",471:"ON.SHEET",472:"STANDARD.WIDTH",473:"SCENARIO.MERGE",474:"SUMMARY.INFO",475:"FIND.FILE",476:"ACTIVE.CELL.FONT",477:"ENABLE.TIPWIZARD",478:"VBA.MAKE.ADDIN",480:"INSERTDATATABLE",481:"WORKGROUP.OPTIONS",482:"MAIL.SEND.MAILER",485:"AUTOCORRECT",489:"POST.DOCUMENT",491:"PICKLIST",493:"VIEW.SHOW",494:"VIEW.DEFINE",495:"VIEW.DELETE",509:"SHEET.BACKGROUND",510:"INSERT.MAP.OBJECT",511:"OPTIONS.MENONO",517:"MSOCHECKS",518:"NORMAL",519:"LAYOUT",520:"RM.PRINT.AREA",521:"CLEAR.PRINT.AREA",522:"ADD.PRINT.AREA",523:"MOVE.BRK",545:"HIDECURR.NOTE",546:"HIDEALL.NOTES",547:"DELETE.NOTE",548:"TRAVERSE.NOTES",549:"ACTIVATE.NOTES",620:"PROTECT.REVISIONS",621:"UNPROTECT.REVISIONS",647:"OPTIONS.ME",653:"WEB.PUBLISH",667:"NEWWEBQUERY",673:"PIVOT.TABLE.CHART",753:"OPTIONS.SAVE",755:"OPTIONS.SPELL",808:"HIDEALL.INKANNOTS"},Mo={0:"COUNT",1:"IF",2:"ISNA",3:"ISERROR",4:"SUM",5:"AVERAGE",6:"MIN",7:"MAX",8:"ROW",9:"COLUMN",10:"NA",11:"NPV",12:"STDEV",13:"DOLLAR",14:"FIXED",15:"SIN",16:"COS",17:"TAN",18:"ATAN",19:"PI",20:"SQRT",21:"EXP",22:"LN",23:"LOG10",24:"ABS",25:"INT",26:"SIGN",27:"ROUND",28:"LOOKUP",29:"INDEX",30:"REPT",31:"MID",32:"LEN",33:"VALUE",34:"TRUE",35:"FALSE",36:"AND",37:"OR",38:"NOT",39:"MOD",40:"DCOUNT",41:"DSUM",42:"DAVERAGE",43:"DMIN",44:"DMAX",45:"DSTDEV",46:"VAR",47:"DVAR",48:"TEXT",49:"LINEST",50:"TREND",51:"LOGEST",52:"GROWTH",53:"GOTO",54:"HALT",55:"RETURN",56:"PV",57:"FV",58:"NPER",59:"PMT",60:"RATE",61:"MIRR",62:"IRR",63:"RAND",64:"MATCH",65:"DATE",66:"TIME",67:"DAY",68:"MONTH",69:"YEAR",70:"WEEKDAY",71:"HOUR",72:"MINUTE",73:"SECOND",74:"NOW",75:"AREAS",76:"ROWS",77:"COLUMNS",78:"OFFSET",79:"ABSREF",80:"RELREF",81:"ARGUMENT",82:"SEARCH",83:"TRANSPOSE",84:"ERROR",85:"STEP",86:"TYPE",87:"ECHO",88:"SET.NAME",89:"CALLER",90:"DEREF",91:"WINDOWS",92:"SERIES",93:"DOCUMENTS",94:"ACTIVE.CELL",95:"SELECTION",96:"RESULT",97:"ATAN2",98:"ASIN",99:"ACOS",100:"CHOOSE",101:"HLOOKUP",102:"VLOOKUP",103:"LINKS",104:"INPUT",105:"ISREF",106:"GET.FORMULA",107:"GET.NAME",108:"SET.VALUE",109:"LOG",110:"EXEC",111:"CHAR",112:"LOWER",113:"UPPER",114:"PROPER",115:"LEFT",116:"RIGHT",117:"EXACT",118:"TRIM",119:"REPLACE",120:"SUBSTITUTE",121:"CODE",122:"NAMES",123:"DIRECTORY",124:"FIND",125:"CELL",126:"ISERR",127:"ISTEXT",128:"ISNUMBER",129:"ISBLANK",130:"T",131:"N",132:"FOPEN",133:"FCLOSE",134:"FSIZE",135:"FREADLN",136:"FREAD",137:"FWRITELN",138:"FWRITE",139:"FPOS",140:"DATEVALUE",141:"TIMEVALUE",142:"SLN",143:"SYD",144:"DDB",145:"GET.DEF",146:"REFTEXT",147:"TEXTREF",148:"INDIRECT",149:"REGISTER",150:"CALL",151:"ADD.BAR",152:"ADD.MENU",153:"ADD.COMMAND",154:"ENABLE.COMMAND",155:"CHECK.COMMAND",156:"RENAME.COMMAND",157:"SHOW.BAR",158:"DELETE.MENU",159:"DELETE.COMMAND",160:"GET.CHART.ITEM",161:"DIALOG.BOX",162:"CLEAN",163:"MDETERM",164:"MINVERSE",165:"MMULT",166:"FILES",167:"IPMT",168:"PPMT",169:"COUNTA",170:"CANCEL.KEY",171:"FOR",172:"WHILE",173:"BREAK",174:"NEXT",175:"INITIATE",176:"REQUEST",177:"POKE",178:"EXECUTE",179:"TERMINATE",180:"RESTART",181:"HELP",182:"GET.BAR",183:"PRODUCT",184:"FACT",185:"GET.CELL",186:"GET.WORKSPACE",187:"GET.WINDOW",188:"GET.DOCUMENT",189:"DPRODUCT",190:"ISNONTEXT",191:"GET.NOTE",192:"NOTE",193:"STDEVP",194:"VARP",195:"DSTDEVP",196:"DVARP",197:"TRUNC",198:"ISLOGICAL",199:"DCOUNTA",200:"DELETE.BAR",201:"UNREGISTER",204:"USDOLLAR",205:"FINDB",206:"SEARCHB",207:"REPLACEB",208:"LEFTB",209:"RIGHTB",210:"MIDB",211:"LENB",212:"ROUNDUP",213:"ROUNDDOWN",214:"ASC",215:"DBCS",216:"RANK",219:"ADDRESS",220:"DAYS360",221:"TODAY",222:"VDB",223:"ELSE",224:"ELSE.IF",225:"END.IF",226:"FOR.CELL",227:"MEDIAN",228:"SUMPRODUCT",229:"SINH",230:"COSH",231:"TANH",232:"ASINH",233:"ACOSH",234:"ATANH",235:"DGET",236:"CREATE.OBJECT",237:"VOLATILE",238:"LAST.ERROR",239:"CUSTOM.UNDO",240:"CUSTOM.REPEAT",241:"FORMULA.CONVERT",242:"GET.LINK.INFO",243:"TEXT.BOX",244:"INFO",245:"GROUP",246:"GET.OBJECT",247:"DB",248:"PAUSE",251:"RESUME",252:"FREQUENCY",253:"ADD.TOOLBAR",254:"DELETE.TOOLBAR",255:"User",256:"RESET.TOOLBAR",257:"EVALUATE",258:"GET.TOOLBAR",259:"GET.TOOL",260:"SPELLING.CHECK",261:"ERROR.TYPE",262:"APP.TITLE",263:"WINDOW.TITLE",264:"SAVE.TOOLBAR",265:"ENABLE.TOOL",266:"PRESS.TOOL",267:"REGISTER.ID",268:"GET.WORKBOOK",269:"AVEDEV",270:"BETADIST",271:"GAMMALN",272:"BETAINV",273:"BINOMDIST",274:"CHIDIST",275:"CHIINV",276:"COMBIN",277:"CONFIDENCE",278:"CRITBINOM",279:"EVEN",280:"EXPONDIST",281:"FDIST",282:"FINV",283:"FISHER",284:"FISHERINV",285:"FLOOR",286:"GAMMADIST",287:"GAMMAINV",288:"CEILING",289:"HYPGEOMDIST",290:"LOGNORMDIST",291:"LOGINV",292:"NEGBINOMDIST",293:"NORMDIST",294:"NORMSDIST",295:"NORMINV",296:"NORMSINV",297:"STANDARDIZE",298:"ODD",299:"PERMUT",300:"POISSON",301:"TDIST",302:"WEIBULL",303:"SUMXMY2",304:"SUMX2MY2",305:"SUMX2PY2",306:"CHITEST",307:"CORREL",308:"COVAR",309:"FORECAST",310:"FTEST",311:"INTERCEPT",312:"PEARSON",313:"RSQ",314:"STEYX",315:"SLOPE",316:"TTEST",317:"PROB",318:"DEVSQ",319:"GEOMEAN",320:"HARMEAN",321:"SUMSQ",322:"KURT",323:"SKEW",324:"ZTEST",325:"LARGE",326:"SMALL",327:"QUARTILE",328:"PERCENTILE",329:"PERCENTRANK",330:"MODE",331:"TRIMMEAN",332:"TINV",334:"MOVIE.COMMAND",335:"GET.MOVIE",336:"CONCATENATE",337:"POWER",338:"PIVOT.ADD.DATA",339:"GET.PIVOT.TABLE",340:"GET.PIVOT.FIELD",341:"GET.PIVOT.ITEM",342:"RADIANS",343:"DEGREES",344:"SUBTOTAL",345:"SUMIF",346:"COUNTIF",347:"COUNTBLANK",348:"SCENARIO.GET",349:"OPTIONS.LISTS.GET",350:"ISPMT",351:"DATEDIF",352:"DATESTRING",353:"NUMBERSTRING",354:"ROMAN",355:"OPEN.DIALOG",356:"SAVE.DIALOG",357:"VIEW.GET",358:"GETPIVOTDATA",359:"HYPERLINK",360:"PHONETIC",361:"AVERAGEA",362:"MAXA",363:"MINA",364:"STDEVPA",365:"VARPA",366:"STDEVA",367:"VARA",368:"BAHTTEXT",369:"THAIDAYOFWEEK",370:"THAIDIGIT",371:"THAIMONTHOFYEAR",372:"THAINUMSOUND",373:"THAINUMSTRING",374:"THAISTRINGLENGTH",375:"ISTHAIDIGIT",376:"ROUNDBAHTDOWN",377:"ROUNDBAHTUP",378:"THAIYEAR",379:"RTD",380:"CUBEVALUE",381:"CUBEMEMBER",382:"CUBEMEMBERPROPERTY",383:"CUBERANKEDMEMBER",384:"HEX2BIN",385:"HEX2DEC",386:"HEX2OCT",387:"DEC2BIN",388:"DEC2HEX",389:"DEC2OCT",390:"OCT2BIN",391:"OCT2HEX",392:"OCT2DEC",393:"BIN2DEC",394:"BIN2OCT",395:"BIN2HEX",396:"IMSUB",397:"IMDIV",398:"IMPOWER",399:"IMABS",400:"IMSQRT",401:"IMLN",402:"IMLOG2",403:"IMLOG10",404:"IMSIN",405:"IMCOS",406:"IMEXP",407:"IMARGUMENT",408:"IMCONJUGATE",409:"IMAGINARY",410:"IMREAL",411:"COMPLEX",412:"IMSUM",413:"IMPRODUCT",414:"SERIESSUM",415:"FACTDOUBLE",416:"SQRTPI",417:"QUOTIENT",418:"DELTA",419:"GESTEP",420:"ISEVEN",421:"ISODD",422:"MROUND",423:"ERF",424:"ERFC",425:"BESSELJ",426:"BESSELK",427:"BESSELY",428:"BESSELI",429:"XIRR",430:"XNPV",431:"PRICEMAT",432:"YIELDMAT",433:"INTRATE",434:"RECEIVED",435:"DISC",436:"PRICEDISC",437:"YIELDDISC",438:"TBILLEQ",439:"TBILLPRICE",440:"TBILLYIELD",441:"PRICE",442:"YIELD",443:"DOLLARDE",444:"DOLLARFR",445:"NOMINAL",446:"EFFECT",447:"CUMPRINC",448:"CUMIPMT",449:"EDATE",450:"EOMONTH",451:"YEARFRAC",452:"COUPDAYBS",453:"COUPDAYS",454:"COUPDAYSNC",455:"COUPNCD",456:"COUPNUM",457:"COUPPCD",458:"DURATION",459:"MDURATION",460:"ODDLPRICE",461:"ODDLYIELD",462:"ODDFPRICE",463:"ODDFYIELD",464:"RANDBETWEEN",465:"WEEKNUM",466:"AMORDEGRC",467:"AMORLINC",468:"CONVERT",724:"SHEETJS",469:"ACCRINT",470:"ACCRINTM",471:"WORKDAY",472:"NETWORKDAYS",473:"GCD",474:"MULTINOMIAL",475:"LCM",476:"FVSCHEDULE",477:"CUBEKPIMEMBER",478:"CUBESET",479:"CUBESETCOUNT",480:"IFERROR",481:"COUNTIFS",482:"SUMIFS",483:"AVERAGEIF",484:"AVERAGEIFS"},Uo={2:1,3:1,10:0,15:1,16:1,17:1,18:1,19:0,20:1,21:1,22:1,23:1,24:1,25:1,26:1,27:2,30:2,31:3,32:1,33:1,34:0,35:0,38:1,39:2,40:3,41:3,42:3,43:3,44:3,45:3,47:3,48:2,53:1,61:3,63:0,65:3,66:3,67:1,68:1,69:1,70:1,71:1,72:1,73:1,74:0,75:1,76:1,77:1,79:2,80:2,83:1,85:0,86:1,89:0,90:1,94:0,95:0,97:2,98:1,99:1,101:3,102:3,105:1,106:1,108:2,111:1,112:1,113:1,114:1,117:2,118:1,119:4,121:1,126:1,127:1,128:1,129:1,130:1,131:1,133:1,134:1,135:1,136:2,137:2,138:2,140:1,141:1,142:3,143:4,144:4,161:1,162:1,163:1,164:1,165:2,172:1,175:2,176:2,177:3,178:2,179:1,184:1,186:1,189:3,190:1,195:3,196:3,197:1,198:1,199:3,201:1,207:4,210:3,211:1,212:2,213:2,214:1,215:1,225:0,229:1,230:1,231:1,232:1,233:1,234:1,235:3,244:1,247:4,252:2,257:1,261:1,271:1,273:4,274:2,275:2,276:2,277:3,278:3,279:1,280:3,281:3,282:3,283:1,284:1,285:2,286:4,287:3,288:2,289:4,290:3,291:3,292:3,293:4,294:1,295:3,296:1,297:3,298:1,299:2,300:3,301:3,302:4,303:2,304:2,305:2,306:2,307:2,308:2,309:3,310:2,311:2,312:2,313:2,314:2,315:2,316:4,325:2,326:2,327:2,328:2,331:2,332:2,337:2,342:1,343:1,346:2,347:1,350:4,351:3,352:1,353:2,360:1,368:1,369:1,370:1,371:1,372:1,373:1,374:1,375:1,376:1,377:1,378:1,382:3,385:1,392:1,393:1,396:2,397:2,398:2,399:1,400:1,401:1,402:1,403:1,404:1,405:1,406:1,407:1,408:1,409:1,410:1,414:4,415:1,416:1,417:2,420:1,421:1,422:2,424:1,425:2,426:2,427:2,428:2,430:3,438:3,439:3,440:3,443:2,444:2,445:2,446:2,447:6,448:6,449:2,450:2,464:2,468:3,476:2,479:1,480:2,65535:0};function Bo(e){return"of:"==e.slice(0,3)&&(e=e.slice(3)),61==e.charCodeAt(0)&&61==(e=e.slice(1)).charCodeAt(0)&&(e=e.slice(1)),(e=(e=(e=e.replace(/COM\.MICROSOFT\./g,"")).replace(/\[((?:\.[A-Z]+[0-9]+)(?::\.[A-Z]+[0-9]+)?)\]/g,(function(e,t){return t.replace(/\./g,"")}))).replace(/\[.(#[A-Z]*[?!])\]/g,"$1")).replace(/[;~]/g,",").replace(/\|/g,";")}function zo(e){var t=e.split(":");return[t[0].split(".")[0],t[0].split(".")[1]+(t.length>1?":"+(t[1].split(".")[1]||t[1].split(".")[0]):"")]}var Wo={},Ho={},jo="undefined"!=typeof Map;function Vo(e,t,r){var n=0,a=e.length;if(r){if(jo?r.has(t):Object.prototype.hasOwnProperty.call(r,t))for(var s=jo?r.get(t):r[t];n<s.length;++n)if(e[s[n]].t===t)return e.Count++,s[n]}else for(;n<a;++n)if(e[n].t===t)return e.Count++,n;return e[a]={t},e.Count++,e.Unique++,r&&(jo?(r.has(t)||r.set(t,[]),r.get(t).push(a)):(Object.prototype.hasOwnProperty.call(r,t)||(r[t]=[]),r[t].push(a))),a}function $o(e,t){var r={min:e+1,max:e+1},n=-1;return t.MDW&&(si=t.MDW),null!=t.width?r.customWidth=1:null!=t.wpx?n=oi(t.wpx):null!=t.wch&&(n=t.wch),n>-1?(r.width=li(n),r.customWidth=1):null!=t.width&&(r.width=t.width),t.hidden&&(r.hidden=!0),null!=t.level&&(r.outlineLevel=r.level=t.level),r}function Go(e,t){if(e){var r=[.7,.7,.75,.75,.3,.3];"xlml"==t&&(r=[1,1,1,1,.5,.5]),null==e.left&&(e.left=r[0]),null==e.right&&(e.right=r[1]),null==e.top&&(e.top=r[2]),null==e.bottom&&(e.bottom=r[3]),null==e.header&&(e.header=r[4]),null==e.footer&&(e.footer=r[5])}}function Xo(e,t,r){var n=r.revssf[null!=t.z?t.z:"General"],a=60,s=e.length;if(null==n&&r.ssf)for(;a<392;++a)if(null==r.ssf[a]){ye(t.z,a),r.ssf[a]=t.z,r.revssf[t.z]=n=a;break}for(a=0;a!=s;++a)if(e[a].numFmtId===n)return a;return e[s]={numFmtId:n,fontId:0,fillId:0,borderId:0,xfId:0,applyNumberFormat:1},s}function Yo(e,t,r,n,a,s){try{n.cellNF&&(e.z=W[t])}catch(e){if(n.WTF)throw e}if("z"!==e.t||n.cellStyles){if("d"===e.t&&"string"==typeof e.v&&(e.v=Ge(e.v)),(!n||!1!==n.cellText)&&"z"!==e.t)try{if(null==W[t]&&ye(Ee[t]||"General",t),"e"===e.t)e.w=e.w||Wn[e.v];else if(0===t)if("n"===e.t)(0|e.v)===e.v?e.w=e.v.toString(10):e.w=J(e.v);else if("d"===e.t){var i=Me(e.v);e.w=(0|i)===i?i.toString(10):J(i)}else{if(void 0===e.v)return"";e.w=Z(e.v,Ho)}else"d"===e.t?e.w=we(t,Me(e.v),Ho):e.w=we(t,e.v,Ho)}catch(e){if(n.WTF)throw e}if(n.cellStyles&&null!=r)try{e.s=s.Fills[r],e.s.fgColor&&e.s.fgColor.theme&&!e.s.fgColor.rgb&&(e.s.fgColor.rgb=ai(a.themeElements.clrScheme[e.s.fgColor.theme].rgb,e.s.fgColor.tint||0),n.WTF&&(e.s.fgColor.raw_rgb=a.themeElements.clrScheme[e.s.fgColor.theme].rgb)),e.s.bgColor&&e.s.bgColor.theme&&(e.s.bgColor.rgb=ai(a.themeElements.clrScheme[e.s.bgColor.theme].rgb,e.s.bgColor.tint||0),n.WTF&&(e.s.bgColor.raw_rgb=a.themeElements.clrScheme[e.s.bgColor.theme].rgb))}catch(e){if(n.WTF&&s.Fills)throw e}}}function Ko(e,t,r){if(e&&e["!ref"]){var n=tn(e["!ref"]);if(n.e.c<n.s.c||n.e.r<n.s.r)throw new Error("Bad range ("+r+"): "+e["!ref"])}}var qo=/<(?:\w:)?mergeCell ref="[A-Z0-9:]+"\s*[\/]?>/g,Qo=/<(?:\w+:)?sheetData[^>]*>([\s\S]*)<\/(?:\w+:)?sheetData>/,Jo=/<(?:\w:)?hyperlink [^>]*>/gm,Zo=/"(\w*:\w*)"/,el=/<(?:\w:)?col\b[^>]*[\/]?>/g,tl=/<(?:\w:)?autoFilter[^>]*([\/]|>([\s\S]*)<\/(?:\w:)?autoFilter)>/g,rl=/<(?:\w:)?pageMargins[^>]*\/>/g,nl=/<(?:\w:)?sheetPr\b(?:[^>a-z][^>]*)?\/>/,al=/<(?:\w:)?sheetPr[^>]*(?:[\/]|>([\s\S]*)<\/(?:\w:)?sheetPr)>/,sl=/<(?:\w:)?sheetViews[^>]*(?:[\/]|>([\s\S]*)<\/(?:\w:)?sheetViews)>/;function il(e,t,r,n){var a=bt(e);r.Sheets[n]||(r.Sheets[n]={}),a.codeName&&(r.Sheets[n].CodeName=Tt(Ft(a.codeName)))}var ol=["objects","scenarios","selectLockedCells","selectUnlockedCells"],ll=["formatColumns","formatRows","formatCells","insertColumns","insertRows","insertHyperlinks","deleteColumns","deleteRows","sort","autoFilter","pivotTables"],cl=/<(?:\w:)?sheetView(?:[^>a-z][^>]*)?\/?>/;function fl(e,t,r,n){if(e.c&&r["!comments"].push([t,e.c]),void 0===e.v&&"string"!=typeof e.f||"z"===e.t&&!e.f)return"";var a="",s=e.t,i=e.v;if("z"!==e.t)switch(e.t){case"b":a=e.v?"1":"0";break;case"n":a=""+e.v;break;case"e":a=Wn[e.v];break;case"d":n&&n.cellDates?a=Ge(e.v,-1).toISOString():((e=Ye(e)).t="n",a=""+(e.v=Me(Ge(e.v)))),void 0===e.z&&(e.z=W[14]);break;default:a=e.v}var o=Vt("v",xt(a)),l={r:t},c=Xo(n.cellXfs,e,n);switch(0!==c&&(l.s=c),e.t){case"n":case"z":break;case"d":l.t="d";break;case"b":l.t="b";break;case"e":l.t="e";break;default:if(null==e.v){delete e.t;break}if(e.v.length>32767)throw new Error("Text length must not exceed 32767 characters");if(n&&n.bookSST){o=Vt("v",""+Vo(n.Strings,e.v,n.revStrings)),l.t="s";break}l.t="str"}if(e.t!=s&&(e.t=s,e.v=i),"string"==typeof e.f&&e.f){var f=e.F&&e.F.slice(0,t.length)==t?{t:"array",ref:e.F}:null;o=Gt("f",xt(e.f),f)+(null!=e.v?o:"")}return e.l&&r["!links"].push([t,e.l]),e.D&&(l.cm=1),Gt("c",o,l)}var ul=function(){var e=/<(?:\w+:)?c[ \/>]/,t=/<\/(?:\w+:)?row>/,r=/r=["']([^"']*)["']/,n=/<(?:\w+:)?is>([\S\s]*?)<\/(?:\w+:)?is>/,a=/ref=["']([^"']*)["']/,s=Mt("v"),i=Mt("f");return function(o,l,c,f,u,h){for(var d,p,m,g,v,b=0,w="",y=[],k=[],T=0,S=0,E=0,x="",_=0,C=0,A=0,O=0,R=Array.isArray(h.CellXf),N=[],I=[],P=Array.isArray(l),D=[],F={},L=!1,M=!!c.sheetStubs,U=o.split(t),B=0,z=U.length;B!=z;++B){var H=(w=U[B].trim()).length;if(0!==H){var j=0;e:for(b=0;b<H;++b)switch(w[b]){case">":if("/"!=w[b-1]){++b;break e}if(c&&c.cellStyles){if(_=null!=(p=bt(w.slice(j,b),!0)).r?parseInt(p.r,10):_+1,C=-1,c.sheetRows&&c.sheetRows<_)continue;F={},L=!1,p.ht&&(L=!0,F.hpt=parseFloat(p.ht),F.hpx=di(F.hpt)),"1"==p.hidden&&(L=!0,F.hidden=!0),null!=p.outlineLevel&&(L=!0,F.level=+p.outlineLevel),L&&(D[_-1]=F)}break;case"<":j=b}if(j>=b)break;if(_=null!=(p=bt(w.slice(j,b),!0)).r?parseInt(p.r,10):_+1,C=-1,!(c.sheetRows&&c.sheetRows<_)){f.s.r>_-1&&(f.s.r=_-1),f.e.r<_-1&&(f.e.r=_-1),c&&c.cellStyles&&(F={},L=!1,p.ht&&(L=!0,F.hpt=parseFloat(p.ht),F.hpx=di(F.hpt)),"1"==p.hidden&&(L=!0,F.hidden=!0),null!=p.outlineLevel&&(L=!0,F.level=+p.outlineLevel),L&&(D[_-1]=F)),y=w.slice(b).split(e);for(var V=0;V!=y.length&&"<"==y[V].trim().charAt(0);++V);for(y=y.slice(V),b=0;b!=y.length;++b)if(0!==(w=y[b].trim()).length){if(k=w.match(r),T=b,S=0,E=0,w="<c "+("<"==w.slice(0,1)?">":"")+w,null!=k&&2===k.length){for(T=0,x=k[1],S=0;S!=x.length&&!((E=x.charCodeAt(S)-64)<1||E>26);++S)T=26*T+E;C=--T}else++C;for(S=0;S!=w.length&&62!==w.charCodeAt(S);++S);if(++S,(p=bt(w.slice(0,S),!0)).r||(p.r=Jr({r:_-1,c:C})),d={t:""},null!=(k=(x=w.slice(S)).match(s))&&""!==k[1]&&(d.v=Tt(k[1])),c.cellFormula){if(null!=(k=x.match(i))&&""!==k[1]){if(d.f=Tt(Ft(k[1])).replace(/\r\n/g,"\n"),c.xlfn||(d.f=eo(d.f)),k[0].indexOf('t="array"')>-1)d.F=(x.match(a)||[])[1],d.F.indexOf(":")>-1&&N.push([tn(d.F),d.F]);else if(k[0].indexOf('t="shared"')>-1){g=bt(k[0]);var $=Tt(Ft(k[1]));c.xlfn||($=eo($)),I[parseInt(g.si,10)]=[g,$,p.r]}}else(k=x.match(/<f[^>]*\/>/))&&I[(g=bt(k[0])).si]&&(d.f=Zi(I[g.si][1],I[g.si][2],p.r));var G=Qr(p.r);for(S=0;S<N.length;++S)G.r>=N[S][0].s.r&&G.r<=N[S][0].e.r&&G.c>=N[S][0].s.c&&G.c<=N[S][0].e.c&&(d.F=N[S][1])}if(null==p.t&&void 0===d.v)if(d.f||d.F)d.v=0,d.t="n";else{if(!M)continue;d.t="z"}else d.t=p.t||"n";switch(f.s.c>C&&(f.s.c=C),f.e.c<C&&(f.e.c=C),d.t){case"n":if(""==d.v||null==d.v){if(!M)continue;d.t="z"}else d.v=parseFloat(d.v);break;case"s":if(void 0===d.v){if(!M)continue;d.t="z"}else m=Wo[parseInt(d.v,10)],d.v=m.t,d.r=m.r,c.cellHTML&&(d.h=m.h);break;case"str":d.t="s",d.v=null!=d.v?Ft(d.v):"",c.cellHTML&&(d.h=At(d.v));break;case"inlineStr":k=x.match(n),d.t="s",null!=k&&(m=Bs(k[1]))?(d.v=m.t,c.cellHTML&&(d.h=m.h)):d.v="";break;case"b":d.v=Rt(d.v);break;case"d":c.cellDates?d.v=Ge(d.v,1):(d.v=Me(Ge(d.v,1)),d.t="n");break;case"e":c&&!1===c.cellText||(d.w=d.v),d.v=Hn[d.v]}if(A=O=0,v=null,R&&void 0!==p.s&&null!=(v=h.CellXf[p.s])&&(null!=v.numFmtId&&(A=v.numFmtId),c.cellStyles&&null!=v.fillId&&(O=v.fillId)),Yo(d,A,O,c,u,h),c.cellDates&&R&&"n"==d.t&&ge(W[A])&&(d.t="d",d.v=We(d.v)),p.cm&&c.xlmeta){var X=(c.xlmeta.Cell||[])[+p.cm-1];X&&"XLDAPR"==X.type&&(d.D=!0)}if(P){var Y=Qr(p.r);l[Y.r]||(l[Y.r]=[]),l[Y.r][Y.c]=d}else l[p.r]=d}}}}D.length>0&&(l["!rows"]=D)}}();function hl(e,t,r,n){var a,s=[ht,Gt("worksheet",null,{xmlns:tr[0],"xmlns:r":Jt})],i=r.SheetNames[e],o="",l=r.Sheets[i];null==l&&(l={});var c=l["!ref"]||"A1",f=tn(c);if(f.e.c>16383||f.e.r>1048575){if(t.WTF)throw new Error("Range "+c+" exceeds format limit A1:XFD1048576");f.e.c=Math.min(f.e.c,16383),f.e.r=Math.min(f.e.c,1048575),c=en(f)}n||(n={}),l["!comments"]=[];var u=[];!function(e,t,r,n,a){var s=!1,i={},o=null;if("xlsx"!==n.bookType&&t.vbaraw){var l=t.SheetNames[r];try{t.Workbook&&(l=t.Workbook.Sheets[r].CodeName||l)}catch(e){}s=!0,i.codeName=Lt(xt(l))}if(e&&e["!outline"]){var c={summaryBelow:1,summaryRight:1};e["!outline"].above&&(c.summaryBelow=0),e["!outline"].left&&(c.summaryRight=0),o=(o||"")+Gt("outlinePr",null,c)}(s||o)&&(a[a.length]=Gt("sheetPr",o,i))}(l,r,e,t,s),s[s.length]=Gt("dimension",null,{ref:c}),s[s.length]=function(e,t,r,n){var a={workbookViewId:"0"};return(((n||{}).Workbook||{}).Views||[])[0]&&(a.rightToLeft=n.Workbook.Views[0].RTL?"1":"0"),Gt("sheetViews",Gt("sheetView",null,a),{})}(0,0,0,r),t.sheetFormat&&(s[s.length]=Gt("sheetFormatPr",null,{defaultRowHeight:t.sheetFormat.defaultRowHeight||"16",baseColWidth:t.sheetFormat.baseColWidth||"10",outlineLevelRow:t.sheetFormat.outlineLevelRow||"7"})),null!=l["!cols"]&&l["!cols"].length>0&&(s[s.length]=function(e,t){for(var r,n=["<cols>"],a=0;a!=t.length;++a)(r=t[a])&&(n[n.length]=Gt("col",null,$o(a,r)));return n[n.length]="</cols>",n.join("")}(0,l["!cols"])),s[a=s.length]="<sheetData/>",l["!links"]=[],null!=l["!ref"]&&(o=function(e,t,r,n){var a,s,i=[],o=[],l=tn(e["!ref"]),c="",f="",u=[],h=0,d=0,p=e["!rows"],m=Array.isArray(e),g={r:f},v=-1;for(d=l.s.c;d<=l.e.c;++d)u[d]=qr(d);for(h=l.s.r;h<=l.e.r;++h){for(o=[],f=Yr(h),d=l.s.c;d<=l.e.c;++d){a=u[d]+f;var b=m?(e[h]||[])[d]:e[a];void 0!==b&&null!=(c=fl(b,a,e,t))&&o.push(c)}(o.length>0||p&&p[h])&&(g={r:f},p&&p[h]&&((s=p[h]).hidden&&(g.hidden=1),v=-1,s.hpx?v=hi(s.hpx):s.hpt&&(v=s.hpt),v>-1&&(g.ht=v,g.customHeight=1),s.level&&(g.outlineLevel=s.level)),i[i.length]=Gt("row",o.join(""),g))}if(p)for(;h<p.length;++h)p&&p[h]&&(g={r:h+1},(s=p[h]).hidden&&(g.hidden=1),v=-1,s.hpx?v=hi(s.hpx):s.hpt&&(v=s.hpt),v>-1&&(g.ht=v,g.customHeight=1),s.level&&(g.outlineLevel=s.level),i[i.length]=Gt("row","",g));return i.join("")}(l,t),o.length>0&&(s[s.length]=o)),s.length>a+1&&(s[s.length]="</sheetData>",s[a]=s[a].replace("/>",">")),l["!protect"]&&(s[s.length]=function(e){var t={sheet:1};return ol.forEach((function(r){null!=e[r]&&e[r]&&(t[r]="1")})),ll.forEach((function(r){null==e[r]||e[r]||(t[r]="0")})),e.password&&(t.password=ei(e.password).toString(16).toUpperCase()),Gt("sheetProtection",null,t)}(l["!protect"])),null!=l["!autofilter"]&&(s[s.length]=function(e,t,r,n){var a="string"==typeof e.ref?e.ref:en(e.ref);r.Workbook||(r.Workbook={Sheets:[]}),r.Workbook.Names||(r.Workbook.Names=[]);var s=r.Workbook.Names,i=Zr(a);i.s.r==i.e.r&&(i.e.r=Zr(t["!ref"]).e.r,a=en(i));for(var o=0;o<s.length;++o){var l=s[o];if("_xlnm._FilterDatabase"==l.Name&&l.Sheet==n){l.Ref="'"+r.SheetNames[n]+"'!"+a;break}}return o==s.length&&s.push({Name:"_xlnm._FilterDatabase",Sheet:n,Ref:"'"+r.SheetNames[n]+"'!"+a}),Gt("autoFilter",null,{ref:a})}(l["!autofilter"],l,r,e)),null!=l["!merges"]&&l["!merges"].length>0&&(s[s.length]=function(e){if(0===e.length)return"";for(var t='<mergeCells count="'+e.length+'">',r=0;r!=e.length;++r)t+='<mergeCell ref="'+en(e[r])+'"/>';return t+"</mergeCells>"}(l["!merges"]));var h,d,p=-1,m=-1;return l["!links"].length>0&&(s[s.length]="<hyperlinks>",l["!links"].forEach((function(e){e[1].Target&&(h={ref:e[0]},"#"!=e[1].Target.charAt(0)&&(m=qn(n,-1,xt(e[1].Target).replace(/#.*$/,""),Gn.HLINK),h["r:id"]="rId"+m),(p=e[1].Target.indexOf("#"))>-1&&(h.location=xt(e[1].Target.slice(p+1))),e[1].Tooltip&&(h.tooltip=xt(e[1].Tooltip)),s[s.length]=Gt("hyperlink",null,h))})),s[s.length]="</hyperlinks>"),delete l["!links"],null!=l["!margins"]&&(s[s.length]=(Go(d=l["!margins"]),Gt("pageMargins",null,d))),t&&!t.ignoreEC&&null!=t.ignoreEC||(s[s.length]=Vt("ignoredErrors",Gt("ignoredError",null,{numberStoredAsText:1,sqref:c}))),u.length>0&&(m=qn(n,-1,"../drawings/drawing"+(e+1)+".xml",Gn.DRAW),s[s.length]=Gt("drawing",null,{"r:id":"rId"+m}),l["!drawing"]=u),l["!comments"].length>0&&(m=qn(n,-1,"../drawings/vmlDrawing"+(e+1)+".vml",Gn.VML),s[s.length]=Gt("legacyDrawing",null,{"r:id":"rId"+m}),l["!legacy"]=m),s.length>1&&(s[s.length]="</worksheet>",s[1]=s[1].replace("/>",">")),s.join("")}function dl(e,t,r,n){var a=function(e,t,r){var n=Br(145),a=(r["!rows"]||[])[e]||{};n.write_shift(4,e),n.write_shift(4,0);var s=320;a.hpx?s=20*hi(a.hpx):a.hpt&&(s=20*a.hpt),n.write_shift(2,s),n.write_shift(1,0);var i=0;a.level&&(i|=a.level),a.hidden&&(i|=16),(a.hpx||a.hpt)&&(i|=32),n.write_shift(1,i),n.write_shift(1,0);var o=0,l=n.l;n.l+=4;for(var c={r:e,c:0},f=0;f<16;++f)if(!(t.s.c>f+1<<10||t.e.c<f<<10)){for(var u=-1,h=-1,d=f<<10;d<f+1<<10;++d)c.c=d,(Array.isArray(r)?(r[c.r]||[])[c.c]:r[Jr(c)])&&(u<0&&(u=d),h=d);u<0||(++o,n.write_shift(4,u),n.write_shift(4,h))}var p=n.l;return n.l=l,n.write_shift(4,o),n.l=p,n.length>n.l?n.slice(0,n.l):n}(n,r,t);(a.length>17||(t["!rows"]||[])[n])&&Hr(e,0,a)}var pl=Cn,ml=An;function gl(e){return[mn(e),On(e),"n"]}var vl=Cn,bl=An,wl=["left","right","top","bottom","header","footer"];function yl(e,t,r,n,a,s,i){if(void 0===t.v)return!1;var o="";switch(t.t){case"b":o=t.v?"1":"0";break;case"d":(t=Ye(t)).z=t.z||W[14],t.v=Me(Ge(t.v)),t.t="n";break;case"n":case"e":o=""+t.v;break;default:o=t.v}var l={r,c:n};switch(l.s=Xo(a.cellXfs,t,a),t.l&&s["!links"].push([Jr(l),t.l]),t.c&&s["!comments"].push([Jr(l),t.c]),t.t){case"s":case"str":return a.bookSST?(o=Vo(a.Strings,t.v,a.revStrings),l.t="s",l.v=o,i?Hr(e,18,function(e,t,r){return null==r&&(r=Br(8)),gn(t,r),r.write_shift(4,t.v),r}(0,l)):Hr(e,7,function(e,t,r){return null==r&&(r=Br(12)),pn(t,r),r.write_shift(4,t.v),r}(0,l))):(l.t="str",i?Hr(e,17,function(e,t,r){return null==r&&(r=Br(8+4*e.v.length)),gn(t,r),cn(e.v,r),r.length>r.l?r.slice(0,r.l):r}(t,l)):Hr(e,6,function(e,t,r){return null==r&&(r=Br(12+4*e.v.length)),pn(t,r),cn(e.v,r),r.length>r.l?r.slice(0,r.l):r}(t,l))),!0;case"n":return t.v==(0|t.v)&&t.v>-1e3&&t.v<1e3?i?Hr(e,13,function(e,t,r){return null==r&&(r=Br(8)),gn(t,r),xn(e.v,r),r}(t,l)):Hr(e,2,function(e,t,r){return null==r&&(r=Br(12)),pn(t,r),xn(e.v,r),r}(t,l)):i?Hr(e,16,function(e,t,r){return null==r&&(r=Br(12)),gn(t,r),Rn(e.v,r),r}(t,l)):Hr(e,5,function(e,t,r){return null==r&&(r=Br(16)),pn(t,r),Rn(e.v,r),r}(t,l)),!0;case"b":return l.t="b",i?Hr(e,15,function(e,t,r){return null==r&&(r=Br(5)),gn(t,r),r.write_shift(1,e.v?1:0),r}(t,l)):Hr(e,4,function(e,t,r){return null==r&&(r=Br(9)),pn(t,r),r.write_shift(1,e.v?1:0),r}(t,l)),!0;case"e":return l.t="e",i?Hr(e,14,function(e,t,r){return null==r&&(r=Br(8)),gn(t,r),r.write_shift(1,e.v),r.write_shift(2,0),r.write_shift(1,0),r}(t,l)):Hr(e,3,function(e,t,r){return null==r&&(r=Br(9)),pn(t,r),r.write_shift(1,e.v),r}(t,l)),!0}return i?Hr(e,12,function(e,t,r){return null==r&&(r=Br(4)),gn(t,r)}(0,l)):Hr(e,1,function(e,t,r){return null==r&&(r=Br(8)),pn(t,r)}(0,l)),!0}function kl(e,t,r,n){var a=Wr(),s=r.SheetNames[e],i=r.Sheets[s]||{},o=s;try{r&&r.Workbook&&(o=r.Workbook.Sheets[e].CodeName||o)}catch(e){}var l,c,f=tn(i["!ref"]||"A1");if(f.e.c>16383||f.e.r>1048575){if(t.WTF)throw new Error("Range "+(i["!ref"]||"A1")+" exceeds format limit A1:XFD1048576");f.e.c=Math.min(f.e.c,16383),f.e.r=Math.min(f.e.c,1048575)}return i["!links"]=[],i["!comments"]=[],Hr(a,129),(r.vbaraw||i["!outline"])&&Hr(a,147,function(e,t,r){null==r&&(r=Br(84+4*e.length));var n=192;t&&(t.above&&(n&=-65),t.left&&(n&=-129)),r.write_shift(1,n);for(var a=1;a<3;++a)r.write_shift(1,0);return Nn({auto:1},r),r.write_shift(-4,-1),r.write_shift(-4,-1),bn(e,r),r.slice(0,r.l)}(o,i["!outline"])),Hr(a,148,ml(f)),function(e,t,r){Hr(e,133),Hr(e,137,function(e,t,r){null==r&&(r=Br(30));var n=924;return(((t||{}).Views||[])[0]||{}).RTL&&(n|=32),r.write_shift(2,n),r.write_shift(4,0),r.write_shift(4,0),r.write_shift(4,0),r.write_shift(1,0),r.write_shift(1,0),r.write_shift(2,0),r.write_shift(2,100),r.write_shift(2,0),r.write_shift(2,0),r.write_shift(2,0),r.write_shift(4,0),r}(0,r)),Hr(e,138),Hr(e,134)}(a,0,r.Workbook),function(e,t){t&&t["!cols"]&&(Hr(e,390),t["!cols"].forEach((function(t,r){t&&Hr(e,60,function(e,t,r){null==r&&(r=Br(18));var n=$o(e,t);r.write_shift(-4,e),r.write_shift(-4,e),r.write_shift(4,256*(n.width||10)),r.write_shift(4,0);var a=0;return t.hidden&&(a|=1),"number"==typeof n.width&&(a|=2),t.level&&(a|=t.level<<8),r.write_shift(2,a),r}(r,t))})),Hr(e,391))}(a,i),function(e,t,r,n){var a,s=tn(t["!ref"]||"A1"),i="",o=[];Hr(e,145);var l=Array.isArray(t),c=s.e.r;t["!rows"]&&(c=Math.max(s.e.r,t["!rows"].length-1));for(var f=s.s.r;f<=c;++f){i=Yr(f),dl(e,t,s,f);var u=!1;if(f<=s.e.r)for(var h=s.s.c;h<=s.e.c;++h){f===s.s.r&&(o[h]=qr(h)),a=o[h]+i;var d=l?(t[f]||[])[h]:t[a];u=!!d&&yl(e,d,f,h,n,t,u)}}Hr(e,146)}(a,i,0,t),function(e,t){var r,n;t["!protect"]&&Hr(e,535,(r=t["!protect"],null==n&&(n=Br(66)),n.write_shift(2,r.password?ei(r.password):0),n.write_shift(4,1),[["objects",!1],["scenarios",!1],["formatCells",!0],["formatColumns",!0],["formatRows",!0],["insertColumns",!0],["insertRows",!0],["insertHyperlinks",!0],["deleteColumns",!0],["deleteRows",!0],["selectLockedCells",!1],["sort",!0],["autoFilter",!0],["pivotTables",!0],["selectUnlockedCells",!1]].forEach((function(e){e[1]?n.write_shift(4,null==r[e[0]]||r[e[0]]?0:1):n.write_shift(4,null!=r[e[0]]&&r[e[0]]?0:1)})),n))}(a,i),function(e,t,r,n){if(t["!autofilter"]){var a=t["!autofilter"],s="string"==typeof a.ref?a.ref:en(a.ref);r.Workbook||(r.Workbook={Sheets:[]}),r.Workbook.Names||(r.Workbook.Names=[]);var i=r.Workbook.Names,o=Zr(s);o.s.r==o.e.r&&(o.e.r=Zr(t["!ref"]).e.r,s=en(o));for(var l=0;l<i.length;++l){var c=i[l];if("_xlnm._FilterDatabase"==c.Name&&c.Sheet==n){c.Ref="'"+r.SheetNames[n]+"'!"+s;break}}l==i.length&&i.push({Name:"_xlnm._FilterDatabase",Sheet:n,Ref:"'"+r.SheetNames[n]+"'!"+s}),Hr(e,161,An(tn(s))),Hr(e,162)}}(a,i,r,e),function(e,t){var r,n;t&&t["!merges"]&&(Hr(e,177,(r=t["!merges"].length,null==n&&(n=Br(4)),n.write_shift(4,r),n)),t["!merges"].forEach((function(t){Hr(e,176,bl(t))})),Hr(e,178))}(a,i),function(e,t,r){t["!links"].forEach((function(t){if(t[1].Target){var n=qn(r,-1,t[1].Target.replace(/#.*$/,""),Gn.HLINK);Hr(e,494,function(e,t){var r=Br(50+4*(e[1].Target.length+(e[1].Tooltip||"").length));An({s:Qr(e[0]),e:Qr(e[0])},r),Sn("rId"+t,r);var n=e[1].Target.indexOf("#");return cn((-1==n?"":e[1].Target.slice(n+1))||"",r),cn(e[1].Tooltip||"",r),cn("",r),r.slice(0,r.l)}(t,n))}})),delete t["!links"]}(a,i,n),i["!margins"]&&Hr(a,476,(l=i["!margins"],null==c&&(c=Br(48)),Go(l),wl.forEach((function(e){Rn(l[e],c)})),c)),t&&!t.ignoreEC&&null!=t.ignoreEC||function(e,t){var r,n;t&&t["!ref"]&&(Hr(e,648),Hr(e,649,(r=tn(t["!ref"]),(n=Br(24)).write_shift(4,4),n.write_shift(4,1),An(r,n),n)),Hr(e,650))}(a,i),function(e,t,r,n){if(t["!comments"].length>0){var a=qn(n,-1,"../drawings/vmlDrawing"+(r+1)+".vml",Gn.VML);Hr(e,551,Sn("rId"+a)),t["!legacy"]=a}}(a,i,e,n),Hr(a,130),a.end()}var Tl=[["allowRefreshQuery",!1,"bool"],["autoCompressPictures",!0,"bool"],["backupFile",!1,"bool"],["checkCompatibility",!1,"bool"],["CodeName",""],["date1904",!1,"bool"],["defaultThemeVersion",0,"int"],["filterPrivacy",!1,"bool"],["hidePivotFieldList",!1,"bool"],["promptedSolutions",!1,"bool"],["publishItems",!1,"bool"],["refreshAllConnections",!1,"bool"],["saveExternalLinkValues",!0,"bool"],["showBorderUnselectedTables",!0,"bool"],["showInkAnnotation",!0,"bool"],["showObjects","all"],["showPivotChartFilter",!1,"bool"],["updateLinks","userSet"]],Sl=[["activeTab",0,"int"],["autoFilterDateGrouping",!0,"bool"],["firstSheet",0,"int"],["minimized",!1,"bool"],["showHorizontalScroll",!0,"bool"],["showSheetTabs",!0,"bool"],["showVerticalScroll",!0,"bool"],["tabRatio",600,"int"],["visibility","visible"]],El=[],xl=[["calcCompleted","true"],["calcMode","auto"],["calcOnSave","true"],["concurrentCalc","true"],["fullCalcOnLoad","false"],["fullPrecision","true"],["iterate","false"],["iterateCount","100"],["iterateDelta","0.001"],["refMode","A1"]];function _l(e,t){for(var r=0;r!=e.length;++r)for(var n=e[r],a=0;a!=t.length;++a){var s=t[a];if(null==n[s[0]])n[s[0]]=s[1];else switch(s[2]){case"bool":"string"==typeof n[s[0]]&&(n[s[0]]=Rt(n[s[0]]));break;case"int":"string"==typeof n[s[0]]&&(n[s[0]]=parseInt(n[s[0]],10))}}}function Cl(e,t){for(var r=0;r!=t.length;++r){var n=t[r];if(null==e[n[0]])e[n[0]]=n[1];else switch(n[2]){case"bool":"string"==typeof e[n[0]]&&(e[n[0]]=Rt(e[n[0]]));break;case"int":"string"==typeof e[n[0]]&&(e[n[0]]=parseInt(e[n[0]],10))}}}function Al(e){Cl(e.WBProps,Tl),Cl(e.CalcPr,xl),_l(e.WBView,Sl),_l(e.Sheets,El),Ho.date1904=Rt(e.WBProps.date1904)}var Ol="][*?/\\".split("");function Rl(e,t){if(e.length>31){if(t)return!1;throw new Error("Sheet names cannot exceed 31 chars")}var r=!0;return Ol.forEach((function(n){if(-1!=e.indexOf(n)){if(!t)throw new Error("Sheet name cannot contain : \\ / ? * [ ]");r=!1}})),r}function Nl(e){if(!e||!e.SheetNames||!e.Sheets)throw new Error("Invalid Workbook");if(!e.SheetNames.length)throw new Error("Workbook is empty");var t,r,n,a=e.Workbook&&e.Workbook.Sheets||[];t=e.SheetNames,r=a,n=!!e.vbaraw,t.forEach((function(e,a){Rl(e);for(var s=0;s<a;++s)if(e==t[s])throw new Error("Duplicate Sheet Name: "+e);if(n){var i=r&&r[a]&&r[a].CodeName||e;if(95==i.charCodeAt(0)&&i.length>22)throw new Error("Bad Code Name: Worksheet"+i)}}));for(var s=0;s<e.SheetNames.length;++s)Ko(e.Sheets[e.SheetNames[s]],e.SheetNames[s],s)}var Il=/<\w+:workbook/;function Pl(e){var t=[ht];t[t.length]=Gt("workbook",null,{xmlns:tr[0],"xmlns:r":Jt});var r=e.Workbook&&(e.Workbook.Names||[]).length>0,n={codeName:"ThisWorkbook"};e.Workbook&&e.Workbook.WBProps&&(Tl.forEach((function(t){null!=e.Workbook.WBProps[t[0]]&&e.Workbook.WBProps[t[0]]!=t[1]&&(n[t[0]]=e.Workbook.WBProps[t[0]])})),e.Workbook.WBProps.CodeName&&(n.codeName=e.Workbook.WBProps.CodeName,delete n.CodeName)),t[t.length]=Gt("workbookPr",null,n);var a=e.Workbook&&e.Workbook.Sheets||[],s=0;if(a&&a[0]&&a[0].Hidden){for(t[t.length]="<bookViews>",s=0;s!=e.SheetNames.length&&a[s]&&a[s].Hidden;++s);s==e.SheetNames.length&&(s=0),t[t.length]='<workbookView firstSheet="'+s+'" activeTab="'+s+'"/>',t[t.length]="</bookViews>"}for(t[t.length]="<sheets>",s=0;s!=e.SheetNames.length;++s){var i={name:xt(e.SheetNames[s].slice(0,31))};if(i.sheetId=""+(s+1),i["r:id"]="rId"+(s+1),a[s])switch(a[s].Hidden){case 1:i.state="hidden";break;case 2:i.state="veryHidden"}t[t.length]=Gt("sheet",null,i)}return t[t.length]="</sheets>",r&&(t[t.length]="<definedNames>",e.Workbook&&e.Workbook.Names&&e.Workbook.Names.forEach((function(e){var r={name:e.Name};e.Comment&&(r.comment=e.Comment),null!=e.Sheet&&(r.localSheetId=""+e.Sheet),e.Hidden&&(r.hidden="1"),e.Ref&&(t[t.length]=Gt("definedName",xt(e.Ref),r))})),t[t.length]="</definedNames>"),t.length>2&&(t[t.length]="</workbook>",t[1]=t[1].replace("/>",">")),t.join("")}function Dl(e,t){var r={};return e.read_shift(4),r.ArchID=e.read_shift(4),e.l+=t-8,r}function Fl(e,t){var r=Wr();return Hr(r,131),Hr(r,128,function(e,t){t||(t=Br(127));for(var r=0;4!=r;++r)t.write_shift(4,0);return cn("SheetJS",t),cn(n,t),cn(n,t),cn("7262",t),t.length>t.l?t.slice(0,t.l):t}()),Hr(r,153,function(e,t){t||(t=Br(72));var r=0;return e&&e.filterPrivacy&&(r|=8),t.write_shift(4,r),t.write_shift(4,0),bn(e&&e.CodeName||"ThisWorkbook",t),t.slice(0,t.l)}(e.Workbook&&e.Workbook.WBProps||null)),function(e,t){if(t.Workbook&&t.Workbook.Sheets){for(var r,n,a=t.Workbook.Sheets,s=0,i=-1,o=-1;s<a.length;++s)!a[s]||!a[s].Hidden&&-1==i?i=s:1==a[s].Hidden&&-1==o&&(o=s);o>i||(Hr(e,135),Hr(e,158,(r=i,n||(n=Br(29)),n.write_shift(-4,0),n.write_shift(-4,460),n.write_shift(4,28800),n.write_shift(4,17600),n.write_shift(4,500),n.write_shift(4,r),n.write_shift(4,r),n.write_shift(1,120),n.length>n.l?n.slice(0,n.l):n)),Hr(e,136))}}(r,e),function(e,t){Hr(e,143);for(var r=0;r!=t.SheetNames.length;++r)Hr(e,156,(n={Hidden:t.Workbook&&t.Workbook.Sheets&&t.Workbook.Sheets[r]&&t.Workbook.Sheets[r].Hidden||0,iTabID:r+1,strRelID:"rId"+(r+1),name:t.SheetNames[r]},(a=void 0)||(a=Br(127)),a.write_shift(4,n.Hidden),a.write_shift(4,n.iTabID),Sn(n.strRelID,a),cn(n.name.slice(0,31),a),a.length>a.l?a.slice(0,a.l):a));var n,a;Hr(e,144)}(r,e),Hr(r,132),r.end()}function Ll(e,t,r,n,a,s,i,o){return".bin"===t.slice(-4)?function(e,t,r,n,a,s,i){if(!e)return e;var o=t||{};n||(n={"!id":{}});var l,c,f,u,h,d,p,m,g,v,b=o.dense?[]:{},w={s:{r:2e6,c:2e6},e:{r:0,c:0}},y=[],k=!1,T=!1,S=[];o.biff=12,o["!row"]=0;var E=0,x=!1,_=[],C={},A=o.supbooks||a.supbooks||[[]];if(A.sharedf=C,A.arrayf=_,A.SheetNames=a.SheetNames||a.Sheets.map((function(e){return e.name})),!o.supbooks&&(o.supbooks=A,a.Names))for(var O=0;O<a.Names.length;++O)A[0][O+1]=a.Names[O];var R,N,I=[],P=[],D=!1;if(lc[16]={n:"BrtShortReal",f:gl},zr(e,(function(e,t,O){if(!T)switch(O){case 148:l=e;break;case 0:c=e,o.sheetRows&&o.sheetRows<=c.r&&(T=!0),g=Yr(h=c.r),o["!row"]=c.r,(e.hidden||e.hpt||null!=e.level)&&(e.hpt&&(e.hpx=di(e.hpt)),P[e.r]=e);break;case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 13:case 14:case 15:case 16:case 17:case 18:case 62:switch(f={t:e[2]},e[2]){case"n":f.v=e[1];break;case"s":m=Wo[e[1]],f.v=m.t,f.r=m.r;break;case"b":f.v=!!e[1];break;case"e":f.v=e[1],!1!==o.cellText&&(f.w=Wn[f.v]);break;case"str":f.t="s",f.v=e[1];break;case"is":f.t="s",f.v=e[1].t}if((u=i.CellXf[e[0].iStyleRef])&&Yo(f,u.numFmtId,null,o,s,i),d=-1==e[0].c?d+1:e[0].c,o.dense?(b[h]||(b[h]=[]),b[h][d]=f):b[qr(d)+g]=f,o.cellFormula){for(x=!1,E=0;E<_.length;++E){var F=_[E];c.r>=F[0].s.r&&c.r<=F[0].e.r&&d>=F[0].s.c&&d<=F[0].e.c&&(f.F=en(F[0]),x=!0)}!x&&e.length>3&&(f.f=e[3])}if(w.s.r>c.r&&(w.s.r=c.r),w.s.c>d&&(w.s.c=d),w.e.r<c.r&&(w.e.r=c.r),w.e.c<d&&(w.e.c=d),o.cellDates&&u&&"n"==f.t&&ge(W[u.numFmtId])){var L=G(f.v);L&&(f.t="d",f.v=new Date(L.y,L.m-1,L.d,L.H,L.M,L.S,L.u))}R&&("XLDAPR"==R.type&&(f.D=!0),R=void 0),N&&(N=void 0);break;case 1:case 12:if(!o.sheetStubs||k)break;f={t:"z",v:void 0},d=-1==e[0].c?d+1:e[0].c,o.dense?(b[h]||(b[h]=[]),b[h][d]=f):b[qr(d)+g]=f,w.s.r>c.r&&(w.s.r=c.r),w.s.c>d&&(w.s.c=d),w.e.r<c.r&&(w.e.r=c.r),w.e.c<d&&(w.e.c=d),R&&("XLDAPR"==R.type&&(f.D=!0),R=void 0),N&&(N=void 0);break;case 176:S.push(e);break;case 49:R=((o.xlmeta||{}).Cell||[])[e-1];break;case 494:var M=n["!id"][e.relId];for(M?(e.Target=M.Target,e.loc&&(e.Target+="#"+e.loc),e.Rel=M):""==e.relId&&(e.Target="#"+e.loc),h=e.rfx.s.r;h<=e.rfx.e.r;++h)for(d=e.rfx.s.c;d<=e.rfx.e.c;++d)o.dense?(b[h]||(b[h]=[]),b[h][d]||(b[h][d]={t:"z",v:void 0}),b[h][d].l=e):(p=Jr({c:d,r:h}),b[p]||(b[p]={t:"z",v:void 0}),b[p].l=e);break;case 426:if(!o.cellFormula)break;_.push(e),(v=o.dense?b[h][d]:b[qr(d)+g]).f=Co(e[1],0,{r:c.r,c:d},A,o),v.F=en(e[0]);break;case 427:if(!o.cellFormula)break;C[Jr(e[0].s)]=e[1],(v=o.dense?b[h][d]:b[qr(d)+g]).f=Co(e[1],0,{r:c.r,c:d},A,o);break;case 60:if(!o.cellStyles)break;for(;e.e>=e.s;)I[e.e--]={width:e.w/256,hidden:!!(1&e.flags),level:e.level},D||(D=!0,fi(e.w/256)),ui(I[e.e+1]);break;case 161:b["!autofilter"]={ref:en(e)};break;case 476:b["!margins"]=e;break;case 147:a.Sheets[r]||(a.Sheets[r]={}),e.name&&(a.Sheets[r].CodeName=e.name),(e.above||e.left)&&(b["!outline"]={above:e.above,left:e.left});break;case 137:a.Views||(a.Views=[{}]),a.Views[0]||(a.Views[0]={}),e.RTL&&(a.Views[0].RTL=!0);break;case 485:case 64:case 1053:case 151:case 152:case 175:case 644:case 625:case 562:case 396:case 1112:case 1146:case 471:case 1050:case 649:case 1105:case 589:case 607:case 564:case 1055:case 168:case 174:case 1180:case 499:case 507:case 550:case 171:case 167:case 1177:case 169:case 1181:case 551:case 552:case 661:case 639:case 478:case 537:case 477:case 536:case 1103:case 680:case 1104:case 1024:case 663:case 535:case 678:case 504:case 1043:case 428:case 170:case 3072:case 50:case 2070:case 1045:break;case 35:k=!0;break;case 36:k=!1;break;case 37:y.push(O),k=!0;break;case 38:y.pop(),k=!1;break;default:if(t.T);else if(!k||o.WTF)throw new Error("Unexpected record 0x"+O.toString(16))}}),o),delete o.supbooks,delete o["!row"],!b["!ref"]&&(w.s.r<2e6||l&&(l.e.r>0||l.e.c>0||l.s.r>0||l.s.c>0))&&(b["!ref"]=en(l||w)),o.sheetRows&&b["!ref"]){var F=tn(b["!ref"]);o.sheetRows<=+F.e.r&&(F.e.r=o.sheetRows-1,F.e.r>w.e.r&&(F.e.r=w.e.r),F.e.r<F.s.r&&(F.s.r=F.e.r),F.e.c>w.e.c&&(F.e.c=w.e.c),F.e.c<F.s.c&&(F.s.c=F.e.c),b["!fullref"]=b["!ref"],b["!ref"]=en(F))}return S.length>0&&(b["!merges"]=S),I.length>0&&(b["!cols"]=I),P.length>0&&(b["!rows"]=P),b}(e,n,r,a,s,i,o):function(e,t,r,n,a,s,i){if(!e)return e;n||(n={"!id":{}});var o=t.dense?[]:{},l={s:{r:2e6,c:2e6},e:{r:0,c:0}},c="",f="",u=e.match(Qo);u?(c=e.slice(0,u.index),f=e.slice(u.index+u[0].length)):c=f=e;var h=c.match(nl);h?il(h[0],0,a,r):(h=c.match(al))&&function(e,t,r,n,a){il(e.slice(0,e.indexOf(">")),0,n,a)}(h[0],h[1],0,a,r);var d=(c.match(/<(?:\w*:)?dimension/)||{index:-1}).index;if(d>0){var p=c.slice(d,d+50).match(Zo);p&&function(e,t){var r=tn(t);r.s.r<=r.e.r&&r.s.c<=r.e.c&&r.s.r>=0&&r.s.c>=0&&(e["!ref"]=en(r))}(o,p[1])}var m=c.match(sl);m&&m[1]&&function(e,t){t.Views||(t.Views=[{}]),(e.match(cl)||[]).forEach((function(e,r){var n=bt(e);t.Views[r]||(t.Views[r]={}),+n.zoomScale&&(t.Views[r].zoom=+n.zoomScale),Rt(n.rightToLeft)&&(t.Views[r].RTL=!0)}))}(m[1],a);var g=[];if(t.cellStyles){var v=c.match(el);v&&function(e,t){for(var r=!1,n=0;n!=t.length;++n){var a=bt(t[n],!0);a.hidden&&(a.hidden=Rt(a.hidden));var s=parseInt(a.min,10)-1,i=parseInt(a.max,10)-1;for(a.outlineLevel&&(a.level=+a.outlineLevel||0),delete a.min,delete a.max,a.width=+a.width,!r&&a.width&&(r=!0,fi(a.width)),ui(a);s<=i;)e[s++]=Ye(a)}}(g,v)}u&&ul(u[1],o,t,l,s,i);var b=f.match(tl);b&&(o["!autofilter"]=function(e){return{ref:(e.match(/ref="([^"]*)"/)||[])[1]}}(b[0]));var w=[],y=f.match(qo);if(y)for(d=0;d!=y.length;++d)w[d]=tn(y[d].slice(y[d].indexOf('"')+1));var k=f.match(Jo);k&&function(e,t,r){for(var n=Array.isArray(e),a=0;a!=t.length;++a){var s=bt(Ft(t[a]),!0);if(!s.ref)return;var i=((r||{})["!id"]||[])[s.id];i?(s.Target=i.Target,s.location&&(s.Target+="#"+Tt(s.location))):(s.Target="#"+Tt(s.location),i={Target:s.Target,TargetMode:"Internal"}),s.Rel=i,s.tooltip&&(s.Tooltip=s.tooltip,delete s.tooltip);for(var o=tn(s.ref),l=o.s.r;l<=o.e.r;++l)for(var c=o.s.c;c<=o.e.c;++c){var f=Jr({c,r:l});n?(e[l]||(e[l]=[]),e[l][c]||(e[l][c]={t:"z",v:void 0}),e[l][c].l=s):(e[f]||(e[f]={t:"z",v:void 0}),e[f].l=s)}}}(o,k,n);var T,S,E=f.match(rl);if(E&&(o["!margins"]=(T=bt(E[0]),S={},["left","right","top","bottom","header","footer"].forEach((function(e){T[e]&&(S[e]=parseFloat(T[e]))})),S)),!o["!ref"]&&l.e.c>=l.s.c&&l.e.r>=l.s.r&&(o["!ref"]=en(l)),t.sheetRows>0&&o["!ref"]){var x=tn(o["!ref"]);t.sheetRows<=+x.e.r&&(x.e.r=t.sheetRows-1,x.e.r>l.e.r&&(x.e.r=l.e.r),x.e.r<x.s.r&&(x.s.r=x.e.r),x.e.c>l.e.c&&(x.e.c=l.e.c),x.e.c<x.s.c&&(x.s.c=x.e.c),o["!fullref"]=o["!ref"],o["!ref"]=en(x))}return g.length>0&&(o["!cols"]=g),w.length>0&&(o["!merges"]=w),o}(e,n,r,a,s,i,o)}function Ml(e,t,r,n,a){return(".bin"===t.slice(-4)?kl:hl)(e,r,n,a)}function Ul(e,t,r){return(".bin"===t.slice(-4)?Xi:Vi)(e,r)}var Bl,zl=/([\w:]+)=((?:")([^"]*)(?:")|(?:')([^']*)(?:'))/g,Wl=/([\w:]+)=((?:")(?:[^"]*)(?:")|(?:')(?:[^']*)(?:'))/;function Hl(e,t){var r=e.split(/\s+/),n=[];if(t||(n[0]=r[0]),1===r.length)return n;var a,s,i,o=e.match(zl);if(o)for(i=0;i!=o.length;++i)-1===(s=(a=o[i].match(Wl))[1].indexOf(":"))?n[a[1]]=a[2].slice(1,a[2].length-1):n["xmlns:"===a[1].slice(0,6)?"xmlns"+a[1].slice(6):a[1].slice(s+1)]=a[2].slice(1,a[2].length-1);return n}function jl(e){var t={};if(1===e.split(/\s+/).length)return t;var r,n,a,s=e.match(zl);if(s)for(a=0;a!=s.length;++a)-1===(n=(r=s[a].match(Wl))[1].indexOf(":"))?t[r[1]]=r[2].slice(1,r[2].length-1):t["xmlns:"===r[1].slice(0,6)?"xmlns"+r[1].slice(6):r[1].slice(n+1)]=r[2].slice(1,r[2].length-1);return t}function Vl(e,t,r,n){var a=n;switch((r[0].match(/dt:dt="([\w.]+)"/)||["",""])[1]){case"boolean":a=Rt(n);break;case"i2":case"int":a=parseInt(n,10);break;case"r4":case"float":a=parseFloat(n);break;case"date":case"dateTime.tz":a=Ge(n);break;case"i8":case"string":case"fixed":case"uuid":case"bin.base64":break;default:throw new Error("bad custprop:"+r[0])}e[Tt(t)]=a}function $l(e,t,r){if(r.cellStyles&&t.Interior){var n=t.Interior;n.Pattern&&(n.patternType=pi[n.Pattern]||n.Pattern)}e[t.ID]=t}function Gl(e,t,r,n,a,s,i,o,l,c){var f="General",u=n.StyleID,h={};c=c||{};var d=[],p=0;for(void 0===u&&o&&(u=o.StyleID),void 0===u&&i&&(u=i.StyleID);void 0!==s[u]&&(s[u].nf&&(f=s[u].nf),s[u].Interior&&d.push(s[u].Interior),s[u].Parent);)u=s[u].Parent;switch(r.Type){case"Boolean":n.t="b",n.v=Rt(e);break;case"String":n.t="s",n.r=Ot(Tt(e)),n.v=e.indexOf("<")>-1?Tt(t||e).replace(/<.*?>/g,""):n.r;break;case"DateTime":"Z"!=e.slice(-1)&&(e+="Z"),n.v=(Ge(e)-new Date(Date.UTC(1899,11,30)))/864e5,n.v!=n.v?n.v=Tt(e):n.v<60&&(n.v=n.v-1),f&&"General"!=f||(f="yyyy-mm-dd");case"Number":void 0===n.v&&(n.v=+e),n.t||(n.t="n");break;case"Error":n.t="e",n.v=Hn[e],!1!==c.cellText&&(n.w=e);break;default:""==e&&""==t?n.t="z":(n.t="s",n.v=Ot(t||e))}if(function(e,t,r){if("z"!==e.t){if(!r||!1!==r.cellText)try{"e"===e.t?e.w=e.w||Wn[e.v]:"General"===t?"n"===e.t?(0|e.v)===e.v?e.w=e.v.toString(10):e.w=J(e.v):e.w=Z(e.v):e.w=(n=t||"General",a=e.v,"General"===(s=Bl[n]||Tt(n))?Z(a):we(s,a))}catch(e){if(r.WTF)throw e}var n,a,s;try{var i=Bl[t]||t||"General";if(r.cellNF&&(e.z=i),r.cellDates&&"n"==e.t&&ge(i)){var o=G(e.v);o&&(e.t="d",e.v=new Date(o.y,o.m-1,o.d,o.H,o.M,o.S,o.u))}}catch(e){if(r.WTF)throw e}}}(n,f,c),!1!==c.cellFormula)if(n.Formula){var m=Tt(n.Formula);61==m.charCodeAt(0)&&(m=m.slice(1)),n.f=Ki(m,a),delete n.Formula,"RC"==n.ArrayRange?n.F=Ki("RC:RC",a):n.ArrayRange&&(n.F=Ki(n.ArrayRange,a),l.push([tn(n.F),n.F]))}else for(p=0;p<l.length;++p)a.r>=l[p][0].s.r&&a.r<=l[p][0].e.r&&a.c>=l[p][0].s.c&&a.c<=l[p][0].e.c&&(n.F=l[p][1]);c.cellStyles&&(d.forEach((function(e){!h.patternType&&e.patternType&&(h.patternType=e.patternType)})),n.s=h),void 0!==n.StyleID&&(n.ixfe=n.StyleID)}function Xl(e){e.t=e.v||"",e.t=e.t.replace(/\r\n/g,"\n").replace(/\r/g,"\n"),e.v=e.w=e.ixfe=void 0}function Yl(e,t){var r=t||{};Te();var n=p(Yt(e));"binary"!=r.type&&"array"!=r.type&&"base64"!=r.type||(n=void 0!==d?d.utils.decode(65001,u(n)):Ft(n));var a,s=n.slice(0,1024).toLowerCase(),i=!1;if((1023&(s=s.replace(/".*?"/g,"")).indexOf(">"))>Math.min(1023&s.indexOf(","),1023&s.indexOf(";"))){var o=Ye(r);return o.type="string",Is.to_workbook(n,o)}if(-1==s.indexOf("<?xml")&&["html","table","head","meta","script","style","div"].forEach((function(e){s.indexOf("<"+e)>=0&&(i=!0)})),i)return function(e,t){var r=e.match(/<table[\s\S]*?>[\s\S]*?<\/table>/gi);if(!r||0==r.length)throw new Error("Invalid HTML: could not find <table>");if(1==r.length)return nn(vc(r[0],t),t);var n={SheetNames:[],Sheets:{}};return r.forEach((function(e,r){Lf(n,vc(e,t),"Sheet"+(r+1))})),n}(n,r);Bl={"General Number":"General","General Date":W[22],"Long Date":"dddd, mmmm dd, yyyy","Medium Date":W[15],"Short Date":W[14],"Long Time":W[19],"Medium Time":W[18],"Short Time":W[20],Currency:'"$"#,##0.00_);[Red]\\("$"#,##0.00\\)',Fixed:W[2],Standard:W[4],Percent:W[10],Scientific:W[11],"Yes/No":'"Yes";"Yes";"No";@',"True/False":'"True";"True";"False";@',"On/Off":'"Yes";"Yes";"No";@'};var l,c,f=[],h={},m=[],g=r.dense?[]:{},v="",b={},w={},y=Hl('<Data ss:Type="String">'),k=0,T=0,S=0,E={s:{r:2e6,c:2e6},e:{r:0,c:0}},x={},_={},C="",A=0,O=[],R={},N={},I=0,P=[],D=[],F={},L=[],M=!1,U=[],B=[],z={},H=0,j=0,V={Sheets:[],WBProps:{date1904:!1}},$={};Kt.lastIndex=0,n=n.replace(/<!--([\s\S]*?)-->/gm,"");for(var G="";a=Kt.exec(n);)switch(a[3]=(G=a[3]).toLowerCase()){case"data":if("data"==G){if("/"===a[1]){if((l=f.pop())[0]!==a[3])throw new Error("Bad state: "+l.join("|"))}else"/"!==a[0].charAt(a[0].length-2)&&f.push([a[3],!0]);break}if(f[f.length-1][1])break;"/"===a[1]?Gl(n.slice(k,a.index),C,y,"comment"==f[f.length-1][0]?F:b,{c:T,r:S},x,L[T],w,U,r):(C="",y=Hl(a[0]),k=a.index+a[0].length);break;case"cell":if("/"===a[1])if(D.length>0&&(b.c=D),(!r.sheetRows||r.sheetRows>S)&&void 0!==b.v&&(r.dense?(g[S]||(g[S]=[]),g[S][T]=b):g[qr(T)+Yr(S)]=b),b.HRef&&(b.l={Target:Tt(b.HRef)},b.HRefScreenTip&&(b.l.Tooltip=b.HRefScreenTip),delete b.HRef,delete b.HRefScreenTip),(b.MergeAcross||b.MergeDown)&&(H=T+(0|parseInt(b.MergeAcross,10)),j=S+(0|parseInt(b.MergeDown,10)),O.push({s:{c:T,r:S},e:{c:H,r:j}})),r.sheetStubs)if(b.MergeAcross||b.MergeDown){for(var X=T;X<=H;++X)for(var Y=S;Y<=j;++Y)(X>T||Y>S)&&(r.dense?(g[Y]||(g[Y]=[]),g[Y][X]={t:"z"}):g[qr(X)+Yr(Y)]={t:"z"});T=H+1}else++T;else b.MergeAcross?T=H+1:++T;else(b=jl(a[0])).Index&&(T=+b.Index-1),T<E.s.c&&(E.s.c=T),T>E.e.c&&(E.e.c=T),"/>"===a[0].slice(-2)&&++T,D=[];break;case"row":"/"===a[1]||"/>"===a[0].slice(-2)?(S<E.s.r&&(E.s.r=S),S>E.e.r&&(E.e.r=S),"/>"===a[0].slice(-2)&&(w=Hl(a[0])).Index&&(S=+w.Index-1),T=0,++S):((w=Hl(a[0])).Index&&(S=+w.Index-1),z={},("0"==w.AutoFitHeight||w.Height)&&(z.hpx=parseInt(w.Height,10),z.hpt=hi(z.hpx),B[S]=z),"1"==w.Hidden&&(z.hidden=!0,B[S]=z));break;case"worksheet":if("/"===a[1]){if((l=f.pop())[0]!==a[3])throw new Error("Bad state: "+l.join("|"));m.push(v),E.s.r<=E.e.r&&E.s.c<=E.e.c&&(g["!ref"]=en(E),r.sheetRows&&r.sheetRows<=E.e.r&&(g["!fullref"]=g["!ref"],E.e.r=r.sheetRows-1,g["!ref"]=en(E))),O.length&&(g["!merges"]=O),L.length>0&&(g["!cols"]=L),B.length>0&&(g["!rows"]=B),h[v]=g}else E={s:{r:2e6,c:2e6},e:{r:0,c:0}},S=T=0,f.push([a[3],!1]),l=Hl(a[0]),v=Tt(l.Name),g=r.dense?[]:{},O=[],U=[],B=[],$={name:v,Hidden:0},V.Sheets.push($);break;case"table":if("/"===a[1]){if((l=f.pop())[0]!==a[3])throw new Error("Bad state: "+l.join("|"))}else{if("/>"==a[0].slice(-2))break;f.push([a[3],!1]),L=[],M=!1}break;case"style":"/"===a[1]?$l(x,_,r):_=Hl(a[0]);break;case"numberformat":_.nf=Tt(Hl(a[0]).Format||"General"),Bl[_.nf]&&(_.nf=Bl[_.nf]);for(var K=0;392!=K&&W[K]!=_.nf;++K);if(392==K)for(K=57;392!=K;++K)if(null==W[K]){ye(_.nf,K);break}break;case"column":if("table"!==f[f.length-1][0])break;if((c=Hl(a[0])).Hidden&&(c.hidden=!0,delete c.Hidden),c.Width&&(c.wpx=parseInt(c.Width,10)),!M&&c.wpx>10){M=!0,si=6;for(var q=0;q<L.length;++q)L[q]&&ui(L[q])}M&&ui(c),L[c.Index-1||L.length]=c;for(var Q=0;Q<+c.Span;++Q)L[L.length]=Ye(c);break;case"namedrange":if("/"===a[1])break;V.Names||(V.Names=[]);var J=bt(a[0]),Z={Name:J.Name,Ref:Ki(J.RefersTo.slice(1),{r:0,c:0})};V.Sheets.length>0&&(Z.Sheet=V.Sheets.length-1),V.Names.push(Z);break;case"namedcell":case"b":case"i":case"u":case"s":case"em":case"h2":case"h3":case"sub":case"sup":case"span":case"alignment":case"borders":case"border":case"protection":case"paragraphs":case"name":case"pixelsperinch":case"null":break;case"font":if("/>"===a[0].slice(-2))break;"/"===a[1]?C+=n.slice(A,a.index):A=a.index+a[0].length;break;case"interior":if(!r.cellStyles)break;_.Interior=Hl(a[0]);break;case"author":case"title":case"description":case"created":case"keywords":case"subject":case"category":case"company":case"lastauthor":case"lastsaved":case"lastprinted":case"version":case"revision":case"totaltime":case"hyperlinkbase":case"manager":case"contentstatus":case"identifier":case"language":case"appname":if("/>"===a[0].slice(-2))break;"/"===a[1]?ha(R,G,n.slice(I,a.index)):I=a.index+a[0].length;break;case"styles":case"workbook":if("/"===a[1]){if((l=f.pop())[0]!==a[3])throw new Error("Bad state: "+l.join("|"))}else f.push([a[3],!1]);break;case"comment":if("/"===a[1]){if((l=f.pop())[0]!==a[3])throw new Error("Bad state: "+l.join("|"));Xl(F),D.push(F)}else f.push([a[3],!1]),F={a:(l=Hl(a[0])).Author};break;case"autofilter":if("/"===a[1]){if((l=f.pop())[0]!==a[3])throw new Error("Bad state: "+l.join("|"))}else if("/"!==a[0].charAt(a[0].length-2)){var ee=Hl(a[0]);g["!autofilter"]={ref:Ki(ee.Range).replace(/\$/g,"")},f.push([a[3],!0])}break;case"datavalidation":if("/"===a[1]){if((l=f.pop())[0]!==a[3])throw new Error("Bad state: "+l.join("|"))}else"/"!==a[0].charAt(a[0].length-2)&&f.push([a[3],!0]);break;case"componentoptions":case"documentproperties":case"customdocumentproperties":case"officedocumentsettings":case"pivottable":case"pivotcache":case"names":case"mapinfo":case"pagebreaks":case"querytable":case"sorting":case"schema":case"conditionalformatting":case"smarttagtype":case"smarttags":case"excelworkbook":case"workbookoptions":case"worksheetoptions":if("/"===a[1]){if((l=f.pop())[0]!==a[3])throw new Error("Bad state: "+l.join("|"))}else"/"!==a[0].charAt(a[0].length-2)&&f.push([a[3],!0]);break;default:if(0==f.length&&"document"==a[3])return Oc(n,r);if(0==f.length&&"uof"==a[3])return Oc(n,r);var te=!0;switch(f[f.length-1][0]){case"officedocumentsettings":switch(a[3]){case"allowpng":case"removepersonalinformation":case"downloadcomponents":case"locationofcomponents":case"colors":case"color":case"index":case"rgb":case"targetscreensize":case"readonlyrecommended":break;default:te=!1}break;case"componentoptions":switch(a[3]){case"toolbar":case"hideofficelogo":case"spreadsheetautofit":case"label":case"caption":case"maxheight":case"maxwidth":case"nextsheetnumber":break;default:te=!1}break;case"excelworkbook":switch(a[3]){case"date1904":V.WBProps.date1904=!0;break;case"windowheight":case"windowwidth":case"windowtopx":case"windowtopy":case"tabratio":case"protectstructure":case"protectwindow":case"protectwindows":case"activesheet":case"displayinknotes":case"firstvisiblesheet":case"supbook":case"sheetname":case"sheetindex":case"sheetindexfirst":case"sheetindexlast":case"dll":case"acceptlabelsinformulas":case"donotsavelinkvalues":case"iteration":case"maxiterations":case"maxchange":case"path":case"xct":case"count":case"selectedsheets":case"calculation":case"uncalced":case"startupprompt":case"crn":case"externname":case"formula":case"colfirst":case"collast":case"wantadvise":case"boolean":case"error":case"text":case"ole":case"noautorecover":case"publishobjects":case"donotcalculatebeforesave":case"number":case"refmoder1c1":case"embedsavesmarttags":break;default:te=!1}break;case"workbookoptions":switch(a[3]){case"owcversion":case"height":case"width":break;default:te=!1}break;case"worksheetoptions":switch(a[3]){case"visible":if("/>"===a[0].slice(-2));else if("/"===a[1])switch(n.slice(I,a.index)){case"SheetHidden":$.Hidden=1;break;case"SheetVeryHidden":$.Hidden=2}else I=a.index+a[0].length;break;case"header":g["!margins"]||Go(g["!margins"]={},"xlml"),isNaN(+bt(a[0]).Margin)||(g["!margins"].header=+bt(a[0]).Margin);break;case"footer":g["!margins"]||Go(g["!margins"]={},"xlml"),isNaN(+bt(a[0]).Margin)||(g["!margins"].footer=+bt(a[0]).Margin);break;case"pagemargins":var re=bt(a[0]);g["!margins"]||Go(g["!margins"]={},"xlml"),isNaN(+re.Top)||(g["!margins"].top=+re.Top),isNaN(+re.Left)||(g["!margins"].left=+re.Left),isNaN(+re.Right)||(g["!margins"].right=+re.Right),isNaN(+re.Bottom)||(g["!margins"].bottom=+re.Bottom);break;case"displayrighttoleft":V.Views||(V.Views=[]),V.Views[0]||(V.Views[0]={}),V.Views[0].RTL=!0;break;case"freezepanes":case"frozennosplit":case"splithorizontal":case"splitvertical":case"donotdisplaygridlines":case"activerow":case"activecol":case"toprowbottompane":case"leftcolumnrightpane":case"unsynced":case"print":case"printerrors":case"panes":case"scale":case"pane":case"number":case"layout":case"pagesetup":case"selected":case"protectobjects":case"enableselection":case"protectscenarios":case"validprinterinfo":case"horizontalresolution":case"verticalresolution":case"numberofcopies":case"activepane":case"toprowvisible":case"leftcolumnvisible":case"fittopage":case"rangeselection":case"papersizeindex":case"pagelayoutzoom":case"pagebreakzoom":case"filteron":case"fitwidth":case"fitheight":case"commentslayout":case"zoom":case"lefttoright":case"gridlines":case"allowsort":case"allowfilter":case"allowinsertrows":case"allowdeleterows":case"allowinsertcols":case"allowdeletecols":case"allowinserthyperlinks":case"allowformatcells":case"allowsizecols":case"allowsizerows":case"tabcolorindex":case"donotdisplayheadings":case"showpagelayoutzoom":case"blackandwhite":case"donotdisplayzeros":case"displaypagebreak":case"rowcolheadings":case"donotdisplayoutline":case"noorientation":case"allowusepivottables":case"zeroheight":case"viewablerange":case"selection":case"protectcontents":break;case"nosummaryrowsbelowdetail":g["!outline"]||(g["!outline"]={}),g["!outline"].above=!0;break;case"nosummarycolumnsrightdetail":g["!outline"]||(g["!outline"]={}),g["!outline"].left=!0;break;default:te=!1}break;case"pivottable":case"pivotcache":switch(a[3]){case"immediateitemsondrop":case"showpagemultipleitemlabel":case"compactrowindent":case"location":case"pivotfield":case"orientation":case"layoutform":case"layoutsubtotallocation":case"layoutcompactrow":case"position":case"pivotitem":case"datatype":case"datafield":case"sourcename":case"parentfield":case"ptlineitems":case"ptlineitem":case"countofsameitems":case"item":case"itemtype":case"ptsource":case"cacheindex":case"consolidationreference":case"filename":case"reference":case"nocolumngrand":case"norowgrand":case"blanklineafteritems":case"hidden":case"subtotal":case"basefield":case"mapchilditems":case"function":case"refreshonfileopen":case"printsettitles":case"mergelabels":case"defaultversion":case"refreshname":case"refreshdate":case"refreshdatecopy":case"versionlastrefresh":case"versionlastupdate":case"versionupdateablemin":case"versionrefreshablemin":case"calculation":break;default:te=!1}break;case"pagebreaks":switch(a[3]){case"colbreaks":case"colbreak":case"rowbreaks":case"rowbreak":case"colstart":case"colend":case"rowend":break;default:te=!1}break;case"autofilter":switch(a[3]){case"autofiltercolumn":case"autofiltercondition":case"autofilterand":case"autofilteror":break;default:te=!1}break;case"querytable":switch(a[3]){case"id":case"autoformatfont":case"autoformatpattern":case"querysource":case"querytype":case"enableredirections":case"refreshedinxl9":case"urlstring":case"htmltables":case"connection":case"commandtext":case"refreshinfo":case"notitles":case"nextid":case"columninfo":case"overwritecells":case"donotpromptforfile":case"textwizardsettings":case"source":case"number":case"decimal":case"thousandseparator":case"trailingminusnumbers":case"formatsettings":case"fieldtype":case"delimiters":case"tab":case"comma":case"autoformatname":case"versionlastedit":case"versionlastrefresh":break;default:te=!1}break;case"datavalidation":switch(a[3]){case"range":case"type":case"min":case"max":case"sort":case"descending":case"order":case"casesensitive":case"value":case"errorstyle":case"errormessage":case"errortitle":case"inputmessage":case"inputtitle":case"combohide":case"inputhide":case"condition":case"qualifier":case"useblank":case"value1":case"value2":case"format":case"cellrangelist":break;default:te=!1}break;case"sorting":case"conditionalformatting":switch(a[3]){case"range":case"type":case"min":case"max":case"sort":case"descending":case"order":case"casesensitive":case"value":case"errorstyle":case"errormessage":case"errortitle":case"cellrangelist":case"inputmessage":case"inputtitle":case"combohide":case"inputhide":case"condition":case"qualifier":case"useblank":case"value1":case"value2":case"format":break;default:te=!1}break;case"mapinfo":case"schema":case"data":switch(a[3]){case"map":case"entry":case"range":case"xpath":case"field":case"xsdtype":case"filteron":case"aggregate":case"elementtype":case"attributetype":case"schema":case"element":case"complextype":case"datatype":case"all":case"attribute":case"extends":case"row":break;default:te=!1}break;case"smarttags":break;default:te=!1}if(te)break;if(a[3].match(/!\[CDATA/))break;if(!f[f.length-1][1])throw"Unrecognized tag: "+a[3]+"|"+f.join("|");if("customdocumentproperties"===f[f.length-1][0]){if("/>"===a[0].slice(-2))break;"/"===a[1]?Vl(N,G,P,n.slice(I,a.index)):(P=a,I=a.index+a[0].length);break}if(r.WTF)throw"Unrecognized tag: "+a[3]+"|"+f.join("|")}var ne={};return r.bookSheets||r.bookProps||(ne.Sheets=h),ne.SheetNames=m,ne.Workbook=V,ne.SSF=Ye(W),ne.Props=R,ne.Custprops=N,ne}function Kl(e,t){switch(af(t=t||{}),t.type||"base64"){case"base64":return Yl(y(e),t);case"binary":case"buffer":case"file":return Yl(e,t);case"array":return Yl(C(e),t)}}function ql(e){return Gt("NamedRange",null,{"ss:Name":e.Name,"ss:RefersTo":"="+Qi(e.Ref,{r:0,c:0})})}function Ql(e,t,r,n,a,s,i){if(!e||null==e.v&&null==e.f)return"";var o={};if(e.f&&(o["ss:Formula"]="="+xt(Qi(e.f,i))),e.F&&e.F.slice(0,t.length)==t){var l=Qr(e.F.slice(t.length+1));o["ss:ArrayRange"]="RC:R"+(l.r==i.r?"":"["+(l.r-i.r)+"]")+"C"+(l.c==i.c?"":"["+(l.c-i.c)+"]")}if(e.l&&e.l.Target&&(o["ss:HRef"]=xt(e.l.Target),e.l.Tooltip&&(o["x:HRefScreenTip"]=xt(e.l.Tooltip))),r["!merges"])for(var c=r["!merges"],f=0;f!=c.length;++f)c[f].s.c==i.c&&c[f].s.r==i.r&&(c[f].e.c>c[f].s.c&&(o["ss:MergeAcross"]=c[f].e.c-c[f].s.c),c[f].e.r>c[f].s.r&&(o["ss:MergeDown"]=c[f].e.r-c[f].s.r));var u="",h="";switch(e.t){case"z":if(!n.sheetStubs)return"";break;case"n":u="Number",h=String(e.v);break;case"b":u="Boolean",h=e.v?"1":"0";break;case"e":u="Error",h=Wn[e.v];break;case"d":u="DateTime",h=new Date(e.v).toISOString(),null==e.z&&(e.z=e.z||W[14]);break;case"s":u="String",h=((e.v||"")+"").replace(St,(function(e){return kt[e]})).replace(Ct,(function(e){return"&#x"+e.charCodeAt(0).toString(16).toUpperCase()+";"}))}var d=Xo(n.cellXfs,e,n);o["ss:StyleID"]="s"+(21+d),o["ss:Index"]=i.c+1;var p=null!=e.v?h:"",m="z"==e.t?"":'<Data ss:Type="'+u+'">'+p+"</Data>";return(e.c||[]).length>0&&(m+=e.c.map((function(e){var t=Gt("ss:Data",(e.t||"").replace(/(\r\n|[\r\n])/g,"&#10;"),{xmlns:"http://www.w3.org/TR/REC-html40"});return Gt("Comment",t,{"ss:Author":e.a})})).join("")),Gt("Cell",m,o)}function Jl(e,t){var r='<Row ss:Index="'+(e+1)+'"';return t&&(t.hpt&&!t.hpx&&(t.hpx=di(t.hpt)),t.hpx&&(r+=' ss:AutoFitHeight="0" ss:Height="'+t.hpx+'"'),t.hidden&&(r+=' ss:Hidden="1"')),r+">"}function Zl(e,t,r){var n=[],a=r.SheetNames[e],s=r.Sheets[a],i=s?function(e,t,r,n){if(!e)return"";if(!((n||{}).Workbook||{}).Names)return"";for(var a=n.Workbook.Names,s=[],i=0;i<a.length;++i){var o=a[i];o.Sheet==r&&(o.Name.match(/^_xlfn\./)||s.push(ql(o)))}return s.join("")}(s,0,e,r):"";return i.length>0&&n.push("<Names>"+i+"</Names>"),i=s?function(e,t,r,n){if(!e["!ref"])return"";var a=tn(e["!ref"]),s=e["!merges"]||[],i=0,o=[];e["!cols"]&&e["!cols"].forEach((function(e,t){ui(e);var r=!!e.width,n=$o(t,e),a={"ss:Index":t+1};r&&(a["ss:Width"]=ii(n.width)),e.hidden&&(a["ss:Hidden"]="1"),o.push(Gt("Column",null,a))}));for(var l=Array.isArray(e),c=a.s.r;c<=a.e.r;++c){for(var f=[Jl(c,(e["!rows"]||[])[c])],u=a.s.c;u<=a.e.c;++u){var h=!1;for(i=0;i!=s.length;++i)if(!(s[i].s.c>u||s[i].s.r>c||s[i].e.c<u||s[i].e.r<c)){s[i].s.c==u&&s[i].s.r==c||(h=!0);break}if(!h){var d={r:c,c:u},p=Jr(d),m=l?(e[c]||[])[u]:e[p];f.push(Ql(m,p,e,t,0,0,d))}}f.push("</Row>"),f.length>2&&o.push(f.join(""))}return o.join("")}(s,t):"",i.length>0&&n.push("<Table>"+i+"</Table>"),n.push(function(e,t,r,n){if(!e)return"";var a=[];if(e["!margins"]&&(a.push("<PageSetup>"),e["!margins"].header&&a.push(Gt("Header",null,{"x:Margin":e["!margins"].header})),e["!margins"].footer&&a.push(Gt("Footer",null,{"x:Margin":e["!margins"].footer})),a.push(Gt("PageMargins",null,{"x:Bottom":e["!margins"].bottom||"0.75","x:Left":e["!margins"].left||"0.7","x:Right":e["!margins"].right||"0.7","x:Top":e["!margins"].top||"0.75"})),a.push("</PageSetup>")),n&&n.Workbook&&n.Workbook.Sheets&&n.Workbook.Sheets[r])if(n.Workbook.Sheets[r].Hidden)a.push(Gt("Visible",1==n.Workbook.Sheets[r].Hidden?"SheetHidden":"SheetVeryHidden",{}));else{for(var s=0;s<r&&(!n.Workbook.Sheets[s]||n.Workbook.Sheets[s].Hidden);++s);s==r&&a.push("<Selected/>")}return((((n||{}).Workbook||{}).Views||[])[0]||{}).RTL&&a.push("<DisplayRightToLeft/>"),e["!protect"]&&(a.push(Vt("ProtectContents","True")),e["!protect"].objects&&a.push(Vt("ProtectObjects","True")),e["!protect"].scenarios&&a.push(Vt("ProtectScenarios","True")),null==e["!protect"].selectLockedCells||e["!protect"].selectLockedCells?null==e["!protect"].selectUnlockedCells||e["!protect"].selectUnlockedCells||a.push(Vt("EnableSelection","UnlockedCells")):a.push(Vt("EnableSelection","NoSelection")),[["formatCells","AllowFormatCells"],["formatColumns","AllowSizeCols"],["formatRows","AllowSizeRows"],["insertColumns","AllowInsertCols"],["insertRows","AllowInsertRows"],["insertHyperlinks","AllowInsertHyperlinks"],["deleteColumns","AllowDeleteCols"],["deleteRows","AllowDeleteRows"],["sort","AllowSort"],["autoFilter","AllowFilter"],["pivotTables","AllowUsePivotTables"]].forEach((function(t){e["!protect"][t[0]]&&a.push("<"+t[1]+"/>")}))),0==a.length?"":Gt("WorksheetOptions",a.join(""),{xmlns:nr})}(s,0,e,r)),n.join("")}function ec(e,t){t||(t={}),e.SSF||(e.SSF=Ye(W)),e.SSF&&(Te(),ke(e.SSF),t.revssf=Fe(e.SSF),t.revssf[e.SSF[65535]]=0,t.ssf=e.SSF,t.cellXfs=[],Xo(t.cellXfs,{},{revssf:{General:0}}));var r=[];r.push(function(e,t){var r=[];return e.Props&&r.push(function(e,t){var r=[];return Ie(ua).map((function(e){for(var t=0;t<Zn.length;++t)if(Zn[t][1]==e)return Zn[t];for(t=0;t<aa.length;++t)if(aa[t][1]==e)return aa[t];throw e})).forEach((function(n){if(null!=e[n[1]]){var a=t&&t.Props&&null!=t.Props[n[1]]?t.Props[n[1]]:e[n[1]];"date"===n[2]&&(a=new Date(a).toISOString().replace(/\.\d*Z/,"Z")),"number"==typeof a?a=String(a):!0===a||!1===a?a=a?"1":"0":a instanceof Date&&(a=new Date(a).toISOString().replace(/\.\d*Z/,"")),r.push(Vt(ua[n[1]]||n[1],a))}})),Gt("DocumentProperties",r.join(""),{xmlns:rr})}(e.Props,t)),e.Custprops&&r.push(function(e,t){var r=["Worksheets","SheetNames"],n="CustomDocumentProperties",a=[];return e&&Ie(e).forEach((function(t){if(Object.prototype.hasOwnProperty.call(e,t)){for(var n=0;n<Zn.length;++n)if(t==Zn[n][1])return;for(n=0;n<aa.length;++n)if(t==aa[n][1])return;for(n=0;n<r.length;++n)if(t==r[n])return;var s=e[t],i="string";"number"==typeof s?(i="float",s=String(s)):!0===s||!1===s?(i="boolean",s=s?"1":"0"):s=String(s),a.push(Gt(_t(t),s,{"dt:dt":i}))}})),t&&Ie(t).forEach((function(r){if(Object.prototype.hasOwnProperty.call(t,r)&&(!e||!Object.prototype.hasOwnProperty.call(e,r))){var n=t[r],s="string";"number"==typeof n?(s="float",n=String(n)):!0===n||!1===n?(s="boolean",n=n?"1":"0"):n instanceof Date?(s="dateTime.tz",n=n.toISOString()):n=String(n),a.push(Gt(_t(r),n,{"dt:dt":s}))}})),"<"+n+' xmlns="'+rr+'">'+a.join("")+"</"+n+">"}(e.Props,e.Custprops)),r.join("")}(e,t)),r.push(""),r.push(""),r.push("");for(var n=0;n<e.SheetNames.length;++n)r.push(Gt("Worksheet",Zl(n,t,e),{"ss:Name":xt(e.SheetNames[n])}));return r[2]=function(e,t){var r=['<Style ss:ID="Default" ss:Name="Normal"><NumberFormat/></Style>'];return t.cellXfs.forEach((function(e,t){var n=[];n.push(Gt("NumberFormat",null,{"ss:Format":xt(W[e.numFmtId])}));var a={"ss:ID":"s"+(21+t)};r.push(Gt("Style",n.join(""),a))})),Gt("Styles",r.join(""))}(0,t),r[3]=function(e){if(!((e||{}).Workbook||{}).Names)return"";for(var t=e.Workbook.Names,r=[],n=0;n<t.length;++n){var a=t[n];null==a.Sheet&&(a.Name.match(/^_xlfn\./)||r.push(ql(a)))}return Gt("Names",r.join(""))}(e),ht+Gt("Workbook",r.join(""),{xmlns:ar,"xmlns:o":rr,"xmlns:x":nr,"xmlns:ss":ar,"xmlns:dt":"uuid:C2F41010-65B3-11d1-A29F-00AA00C14882","xmlns:html":"http://www.w3.org/TR/REC-html40"})}var tc=[60,1084,2066,2165,2175];function rc(e,t,r,n,a){var s=n,i=[],o=r.slice(r.l,r.l+s);if(a&&a.enc&&a.enc.insitu&&o.length>0)switch(e){case 9:case 521:case 1033:case 2057:case 47:case 405:case 225:case 406:case 312:case 404:case 10:case 133:break;default:a.enc.insitu(o)}i.push(o),r.l+=s;for(var l=Ar(r,r.l),c=cc[l],f=0;null!=c&&tc.indexOf(l)>-1;)s=Ar(r,r.l+2),f=r.l+4,2066==l?f+=4:2165!=l&&2175!=l||(f+=12),o=r.slice(f,r.l+4+s),i.push(o),r.l+=4+s,c=cc[l=Ar(r,r.l)];var u=O(i);Mr(u,0);var h=0;u.lens=[];for(var d=0;d<i.length;++d)u.lens.push(h),h+=i[d].length;if(u.length<n)throw"XLS Record 0x"+e.toString(16)+" Truncated: "+u.length+" < "+n;return t.f(u,u.length,a)}function nc(e,t,r){if("z"!==e.t&&e.XF){var n=0;try{n=e.z||e.XF.numFmtId||0,t.cellNF&&(e.z=W[n])}catch(e){if(t.WTF)throw e}if(!t||!1!==t.cellText)try{"e"===e.t?e.w=e.w||Wn[e.v]:0===n||"General"==n?"n"===e.t?(0|e.v)===e.v?e.w=e.v.toString(10):e.w=J(e.v):e.w=Z(e.v):e.w=we(n,e.v,{date1904:!!r,dateNF:t&&t.dateNF})}catch(e){if(t.WTF)throw e}if(t.cellDates&&n&&"n"==e.t&&ge(W[n]||String(n))){var a=G(e.v);a&&(e.t="d",e.v=new Date(a.y,a.m-1,a.d,a.H,a.M,a.S,a.u))}}}function ac(e,t,r){return{v:e,ixfe:t,t:r}}var sc="e0859ff2f94f6810ab9108002b27b3d9",ic="02d5cdd59c2e1b10939708002b2cf9ae";function oc(e,t){var r,n,a,s;if(t||(t={}),af(t),f(),t.codepage&&l(t.codepage),e.FullPaths){if(Ce.find(e,"/encryption"))throw new Error("File is password-protected");r=Ce.find(e,"!CompObj"),n=Ce.find(e,"/Workbook")||Ce.find(e,"/Book")}else{switch(t.type){case"base64":e=x(y(e));break;case"binary":e=x(e);break;case"buffer":break;case"array":Array.isArray(e)||(e=Array.prototype.slice.call(e))}Mr(e,0),n={content:e}}if(r&&function(e){var t={},r=e.content;if(r.l=28,t.AnsiUserType=r.read_shift(0,"lpstr-ansi"),t.AnsiClipboardFormat=function(e){return In(e,1)}(r),r.length-r.l<=4)return t;var n=r.read_shift(4);0==n||n>40||(r.l-=4,t.Reserved1=r.read_shift(0,"lpstr-ansi"),r.length-r.l<=4||1907505652!==(n=r.read_shift(4))||(t.UnicodeClipboardFormat=function(e){return In(e,2)}(r),0==(n=r.read_shift(4))||n>40||(r.l-=4,t.Reserved2=r.read_shift(0,"lpwstr"))))}(r),t.bookProps&&!t.bookSheets)a={};else{var i=k?"buffer":"array";if(n&&n.content)a=function(e,t){var r,n,a,s,i,o,l,f,u={opts:{}},h={},d=t.dense?[]:{},p={},m={},g=null,v=[],b="",w={},y="",k={},T=[],S=[],E=[],x={Sheets:[],WBProps:{date1904:!1},Views:[{}]},_={},C=function(e){return e<8?zn[e]:e<64&&E[e-8]||zn[e]},A=function(e,t,n){if(!(U>1||n.sheetRows&&e.r>=n.sheetRows)){if(n.cellStyles&&t.XF&&t.XF.data&&function(e,t,r){var n,a=t.XF.data;a&&a.patternType&&r&&r.cellStyles&&(t.s={},t.s.patternType=a.patternType,(n=ni(C(a.icvFore)))&&(t.s.fgColor={rgb:n}),(n=ni(C(a.icvBack)))&&(t.s.bgColor={rgb:n}))}(0,t,n),delete t.ixfe,delete t.XF,r=e,y=Jr(e),m&&m.s&&m.e||(m={s:{r:0,c:0},e:{r:0,c:0}}),e.r<m.s.r&&(m.s.r=e.r),e.c<m.s.c&&(m.s.c=e.c),e.r+1>m.e.r&&(m.e.r=e.r+1),e.c+1>m.e.c&&(m.e.c=e.c+1),n.cellFormula&&t.f)for(var a=0;a<T.length;++a)if(!(T[a][0].s.c>e.c||T[a][0].s.r>e.r||T[a][0].e.c<e.c||T[a][0].e.r<e.r)){t.F=en(T[a][0]),T[a][0].s.c==e.c&&T[a][0].s.r==e.r||delete t.f,t.f&&(t.f=""+Co(T[a][1],0,e,F,O));break}n.dense?(d[e.r]||(d[e.r]=[]),d[e.r][e.c]=t):d[y]=t}},O={enc:!1,sbcch:0,snames:[],sharedf:k,arrayf:T,rrtabid:[],lastuser:"",biff:8,codepage:0,winlocked:0,cellStyles:!!t&&!!t.cellStyles,WTF:!!t&&!!t.wtf};t.password&&(O.password=t.password);var R=[],N=[],I=[],P=[],D=!1,F=[];F.SheetNames=O.snames,F.sharedf=O.sharedf,F.arrayf=O.arrayf,F.names=[],F.XTI=[];var L,M=0,U=0,B=0,z=[],H=[];O.codepage=1200,c(1200);for(var j=!1;e.l<e.length-1;){var V=e.l,$=e.read_shift(2);if(0===$&&10===M)break;var G=e.l===e.length?0:e.read_shift(2),X=cc[$];if(X&&X.f){if(t.bookSheets&&133===M&&133!==$)break;if(M=$,2===X.r||12==X.r){var Y=e.read_shift(2);if(G-=2,!O.enc&&Y!==$&&((255&Y)<<8|Y>>8)!==$)throw new Error("rt mismatch: "+Y+"!="+$);12==X.r&&(e.l+=10,G-=10)}var K={};if(K=10===$?X.f(e,G,O):rc($,X,e,G,O),0==U&&-1===[9,521,1033,2057].indexOf(M))continue;switch($){case 34:u.opts.Date1904=x.WBProps.date1904=K;break;case 134:u.opts.WriteProtect=!0;break;case 47:if(O.enc||(e.l=0),O.enc=K,!t.password)throw new Error("File is password-protected");if(null==K.valid)throw new Error("Encryption scheme unsupported");if(!K.valid)throw new Error("Password is incorrect");break;case 92:O.lastuser=K;break;case 66:var q=Number(K);switch(q){case 21010:q=1200;break;case 32768:q=1e4;break;case 32769:q=1252}c(O.codepage=q),j=!0;break;case 317:O.rrtabid=K;break;case 25:O.winlocked=K;break;case 439:u.opts.RefreshAll=K;break;case 12:u.opts.CalcCount=K;break;case 16:u.opts.CalcDelta=K;break;case 17:u.opts.CalcIter=K;break;case 13:u.opts.CalcMode=K;break;case 14:u.opts.CalcPrecision=K;break;case 95:u.opts.CalcSaveRecalc=K;break;case 15:O.CalcRefMode=K;break;case 2211:u.opts.FullCalc=K;break;case 129:K.fDialog&&(d["!type"]="dialog"),K.fBelow||((d["!outline"]||(d["!outline"]={})).above=!0),K.fRight||((d["!outline"]||(d["!outline"]={})).left=!0);break;case 224:S.push(K);break;case 430:F.push([K]),F[F.length-1].XTI=[];break;case 35:case 547:F[F.length-1].push(K);break;case 24:case 536:L={Name:K.Name,Ref:Co(K.rgce,0,null,F,O)},K.itab>0&&(L.Sheet=K.itab-1),F.names.push(L),F[0]||(F[0]=[],F[0].XTI=[]),F[F.length-1].push(K),"_xlnm._FilterDatabase"==K.Name&&K.itab>0&&K.rgce&&K.rgce[0]&&K.rgce[0][0]&&"PtgArea3d"==K.rgce[0][0][0]&&(H[K.itab-1]={ref:en(K.rgce[0][0][1][2])});break;case 22:O.ExternCount=K;break;case 23:0==F.length&&(F[0]=[],F[0].XTI=[]),F[F.length-1].XTI=F[F.length-1].XTI.concat(K),F.XTI=F.XTI.concat(K);break;case 2196:if(O.biff<8)break;null!=L&&(L.Comment=K[1]);break;case 18:d["!protect"]=K;break;case 19:0!==K&&O.WTF&&console.error("Password verifier: "+K);break;case 133:p[K.pos]=K,O.snames.push(K.name);break;case 10:if(--U)break;if(m.e){if(m.e.r>0&&m.e.c>0){if(m.e.r--,m.e.c--,d["!ref"]=en(m),t.sheetRows&&t.sheetRows<=m.e.r){var Q=m.e.r;m.e.r=t.sheetRows-1,d["!fullref"]=d["!ref"],d["!ref"]=en(m),m.e.r=Q}m.e.r++,m.e.c++}R.length>0&&(d["!merges"]=R),N.length>0&&(d["!objects"]=N),I.length>0&&(d["!cols"]=I),P.length>0&&(d["!rows"]=P),x.Sheets.push(_)}""===b?w=d:h[b]=d,d=t.dense?[]:{};break;case 9:case 521:case 1033:case 2057:if(8===O.biff&&(O.biff={9:2,521:3,1033:4}[$]||{512:2,768:3,1024:4,1280:5,1536:8,2:2,7:2}[K.BIFFVer]||8),O.biffguess=0==K.BIFFVer,0==K.BIFFVer&&4096==K.dt&&(O.biff=5,j=!0,c(O.codepage=28591)),8==O.biff&&0==K.BIFFVer&&16==K.dt&&(O.biff=2),U++)break;if(d=t.dense?[]:{},O.biff<8&&!j&&(j=!0,c(O.codepage=t.codepage||1252)),O.biff<5||0==K.BIFFVer&&4096==K.dt){""===b&&(b="Sheet1"),m={s:{r:0,c:0},e:{r:0,c:0}};var J={pos:e.l-G,name:b};p[J.pos]=J,O.snames.push(b)}else b=(p[V]||{name:""}).name;32==K.dt&&(d["!type"]="chart"),64==K.dt&&(d["!type"]="macro"),R=[],N=[],O.arrayf=T=[],I=[],P=[],D=!1,_={Hidden:(p[V]||{hs:0}).hs,name:b};break;case 515:case 3:case 2:"chart"==d["!type"]&&(t.dense?(d[K.r]||[])[K.c]:d[Jr({c:K.c,r:K.r})])&&++K.c,o={ixfe:K.ixfe,XF:S[K.ixfe]||{},v:K.val,t:"n"},B>0&&(o.z=z[o.ixfe>>8&63]),nc(o,t,u.opts.Date1904),A({c:K.c,r:K.r},o,t);break;case 5:case 517:o={ixfe:K.ixfe,XF:S[K.ixfe],v:K.val,t:K.t},B>0&&(o.z=z[o.ixfe>>8&63]),nc(o,t,u.opts.Date1904),A({c:K.c,r:K.r},o,t);break;case 638:o={ixfe:K.ixfe,XF:S[K.ixfe],v:K.rknum,t:"n"},B>0&&(o.z=z[o.ixfe>>8&63]),nc(o,t,u.opts.Date1904),A({c:K.c,r:K.r},o,t);break;case 189:for(var Z=K.c;Z<=K.C;++Z){var ee=K.rkrec[Z-K.c][0];o={ixfe:ee,XF:S[ee],v:K.rkrec[Z-K.c][1],t:"n"},B>0&&(o.z=z[o.ixfe>>8&63]),nc(o,t,u.opts.Date1904),A({c:Z,r:K.r},o,t)}break;case 6:case 518:case 1030:if("String"==K.val){g=K;break}if((o=ac(K.val,K.cell.ixfe,K.tt)).XF=S[o.ixfe],t.cellFormula){var te=K.formula;if(te&&te[0]&&te[0][0]&&"PtgExp"==te[0][0][0]){var re=te[0][0][1][0],ne=te[0][0][1][1],ae=Jr({r:re,c:ne});k[ae]?o.f=""+Co(K.formula,0,K.cell,F,O):o.F=((t.dense?(d[re]||[])[ne]:d[ae])||{}).F}else o.f=""+Co(K.formula,0,K.cell,F,O)}B>0&&(o.z=z[o.ixfe>>8&63]),nc(o,t,u.opts.Date1904),A(K.cell,o,t),g=K;break;case 7:case 519:if(!g)throw new Error("String record expects Formula");g.val=K,(o=ac(K,g.cell.ixfe,"s")).XF=S[o.ixfe],t.cellFormula&&(o.f=""+Co(g.formula,0,g.cell,F,O)),B>0&&(o.z=z[o.ixfe>>8&63]),nc(o,t,u.opts.Date1904),A(g.cell,o,t),g=null;break;case 33:case 545:T.push(K);var se=Jr(K[0].s);if(n=t.dense?(d[K[0].s.r]||[])[K[0].s.c]:d[se],t.cellFormula&&n){if(!g)break;if(!se||!n)break;n.f=""+Co(K[1],0,K[0],F,O),n.F=en(K[0])}break;case 1212:if(!t.cellFormula)break;if(y){if(!g)break;k[Jr(g.cell)]=K[0],((n=t.dense?(d[g.cell.r]||[])[g.cell.c]:d[Jr(g.cell)])||{}).f=""+Co(K[0],0,r,F,O)}break;case 253:o=ac(v[K.isst].t,K.ixfe,"s"),v[K.isst].h&&(o.h=v[K.isst].h),o.XF=S[o.ixfe],B>0&&(o.z=z[o.ixfe>>8&63]),nc(o,t,u.opts.Date1904),A({c:K.c,r:K.r},o,t);break;case 513:t.sheetStubs&&(o={ixfe:K.ixfe,XF:S[K.ixfe],t:"z"},B>0&&(o.z=z[o.ixfe>>8&63]),nc(o,t,u.opts.Date1904),A({c:K.c,r:K.r},o,t));break;case 190:if(t.sheetStubs)for(var ie=K.c;ie<=K.C;++ie){var oe=K.ixfe[ie-K.c];o={ixfe:oe,XF:S[oe],t:"z"},B>0&&(o.z=z[o.ixfe>>8&63]),nc(o,t,u.opts.Date1904),A({c:ie,r:K.r},o,t)}break;case 214:case 516:case 4:(o=ac(K.val,K.ixfe,"s")).XF=S[o.ixfe],B>0&&(o.z=z[o.ixfe>>8&63]),nc(o,t,u.opts.Date1904),A({c:K.c,r:K.r},o,t);break;case 0:case 512:1===U&&(m=K);break;case 252:v=K;break;case 1054:if(4==O.biff){z[B++]=K[1];for(var le=0;le<B+163&&W[le]!=K[1];++le);le>=163&&ye(K[1],B+163)}else ye(K[1],K[0]);break;case 30:z[B++]=K;for(var ce=0;ce<B+163&&W[ce]!=K;++ce);ce>=163&&ye(K,B+163);break;case 229:R=R.concat(K);break;case 93:N[K.cmo[0]]=O.lastobj=K;break;case 438:O.lastobj.TxO=K;break;case 127:O.lastobj.ImData=K;break;case 440:for(i=K[0].s.r;i<=K[0].e.r;++i)for(s=K[0].s.c;s<=K[0].e.c;++s)(n=t.dense?(d[i]||[])[s]:d[Jr({c:s,r:i})])&&(n.l=K[1]);break;case 2048:for(i=K[0].s.r;i<=K[0].e.r;++i)for(s=K[0].s.c;s<=K[0].e.c;++s)(n=t.dense?(d[i]||[])[s]:d[Jr({c:s,r:i})])&&n.l&&(n.l.Tooltip=K[1]);break;case 28:if(O.biff<=5&&O.biff>=2)break;n=t.dense?(d[K[0].r]||[])[K[0].c]:d[Jr(K[0])];var fe=N[K[2]];n||(t.dense?(d[K[0].r]||(d[K[0].r]=[]),n=d[K[0].r][K[0].c]={t:"z"}):n=d[Jr(K[0])]={t:"z"},m.e.r=Math.max(m.e.r,K[0].r),m.s.r=Math.min(m.s.r,K[0].r),m.e.c=Math.max(m.e.c,K[0].c),m.s.c=Math.min(m.s.c,K[0].c)),n.c||(n.c=[]),a={a:K[1],t:fe.TxO.t},n.c.push(a);break;case 2173:S[K.ixfe],K.ext.forEach((function(e){e[0]}));break;case 125:if(!O.cellStyles)break;for(;K.e>=K.s;)I[K.e--]={width:K.w/256,level:K.level||0,hidden:!!(1&K.flags)},D||(D=!0,fi(K.w/256)),ui(I[K.e+1]);break;case 520:var ue={};null!=K.level&&(P[K.r]=ue,ue.level=K.level),K.hidden&&(P[K.r]=ue,ue.hidden=!0),K.hpt&&(P[K.r]=ue,ue.hpt=K.hpt,ue.hpx=di(K.hpt));break;case 38:case 39:case 40:case 41:d["!margins"]||Go(d["!margins"]={}),d["!margins"][{38:"left",39:"right",40:"top",41:"bottom"}[$]]=K;break;case 161:d["!margins"]||Go(d["!margins"]={}),d["!margins"].header=K.header,d["!margins"].footer=K.footer;break;case 574:K.RTL&&(x.Views[0].RTL=!0);break;case 146:E=K;break;case 2198:f=K;break;case 140:l=K;break;case 442:b?_.CodeName=K||_.name:x.WBProps.CodeName=K||"ThisWorkbook"}}else X||console.error("Missing Info for XLS Record 0x"+$.toString(16)),e.l+=G}return u.SheetNames=Ie(p).sort((function(e,t){return Number(e)-Number(t)})).map((function(e){return p[e].name})),t.bookSheets||(u.Sheets=h),!u.SheetNames.length&&w["!ref"]?(u.SheetNames.push("Sheet1"),u.Sheets&&(u.Sheets.Sheet1=w)):u.Preamble=w,u.Sheets&&H.forEach((function(e,t){u.Sheets[u.SheetNames[t]]["!autofilter"]=e})),u.Strings=v,u.SSF=Ye(W),O.enc&&(u.Encryption=O.enc),f&&(u.Themes=f),u.Metadata={},void 0!==l&&(u.Metadata.Country=l),F.names.length>0&&(x.Names=F.names),u.Workbook=x,u}(n.content,t);else if((s=Ce.find(e,"PerfectOffice_MAIN"))&&s.content)a=Ps.to_workbook(s.content,(t.type=i,t));else{if(!(s=Ce.find(e,"NativeContent_MAIN"))||!s.content)throw(s=Ce.find(e,"MN0"))&&s.content?new Error("Unsupported Works 4 for Mac file"):new Error("Cannot find Workbook stream");a=Ps.to_workbook(s.content,(t.type=i,t))}t.bookVBA&&e.FullPaths&&Ce.find(e,"/_VBA_PROJECT_CUR/VBA/dir")&&(a.vbaraw=function(e){var t=Ce.utils.cfb_new({root:"R"});return e.FullPaths.forEach((function(r,n){if("/"!==r.slice(-1)&&r.match(/_VBA_PROJECT_CUR/)){var a=r.replace(/^[^\/]*/,"R").replace(/\/_VBA_PROJECT_CUR\u0000*/,"");Ce.utils.cfb_add(t,a,e.FileIndex[n].content)}})),Ce.write(t)}(e))}var o={};return e.FullPaths&&function(e,t,r){var n=Ce.find(e,"/!DocumentSummaryInformation");if(n&&n.size>0)try{var a=Ca(n,Fn,ic);for(var s in a)t[s]=a[s]}catch(e){if(r.WTF)throw e}var i=Ce.find(e,"/!SummaryInformation");if(i&&i.size>0)try{var o=Ca(i,Ln,sc);for(var l in o)null==t[l]&&(t[l]=o[l])}catch(e){if(r.WTF)throw e}t.HeadingPairs&&t.TitlesOfParts&&(ia(t.HeadingPairs,t.TitlesOfParts,t,r),delete t.HeadingPairs,delete t.TitlesOfParts)}(e,o,t),a.Props=a.Custprops=o,t.bookFiles&&(a.cfb=e),a}var lc={0:{f:function(e,t){var r={},n=e.l+t;r.r=e.read_shift(4),e.l+=4;var a=e.read_shift(2);e.l+=1;var s=e.read_shift(1);return e.l=n,7&s&&(r.level=7&s),16&s&&(r.hidden=!0),32&s&&(r.hpt=a/20),r}},1:{f:function(e){return[dn(e)]}},2:{f:function(e){return[dn(e),En(e),"n"]}},3:{f:function(e){return[dn(e),e.read_shift(1),"e"]}},4:{f:function(e){return[dn(e),e.read_shift(1),"b"]}},5:{f:function(e){return[dn(e),On(e),"n"]}},6:{f:function(e){return[dn(e),ln(e),"str"]}},7:{f:function(e){return[dn(e),e.read_shift(4),"s"]}},8:{f:function(e,t,r){var n=e.l+t,a=dn(e);a.r=r["!row"];var s=[a,ln(e),"str"];if(r.cellFormula){e.l+=2;var i=Po(e,n-e.l,r);s[3]=Co(i,0,a,r.supbooks,r)}else e.l=n;return s}},9:{f:function(e,t,r){var n=e.l+t,a=dn(e);a.r=r["!row"];var s=[a,On(e),"n"];if(r.cellFormula){e.l+=2;var i=Po(e,n-e.l,r);s[3]=Co(i,0,a,r.supbooks,r)}else e.l=n;return s}},10:{f:function(e,t,r){var n=e.l+t,a=dn(e);a.r=r["!row"];var s=[a,e.read_shift(1),"b"];if(r.cellFormula){e.l+=2;var i=Po(e,n-e.l,r);s[3]=Co(i,0,a,r.supbooks,r)}else e.l=n;return s}},11:{f:function(e,t,r){var n=e.l+t,a=dn(e);a.r=r["!row"];var s=[a,e.read_shift(1),"e"];if(r.cellFormula){e.l+=2;var i=Po(e,n-e.l,r);s[3]=Co(i,0,a,r.supbooks,r)}else e.l=n;return s}},12:{f:function(e){return[mn(e)]}},13:{f:function(e){return[mn(e),En(e),"n"]}},14:{f:function(e){return[mn(e),e.read_shift(1),"e"]}},15:{f:function(e){return[mn(e),e.read_shift(1),"b"]}},16:{f:gl},17:{f:function(e){return[mn(e),ln(e),"str"]}},18:{f:function(e){return[mn(e),e.read_shift(4),"s"]}},19:{f:un},20:{},21:{},22:{},23:{},24:{},25:{},26:{},27:{},28:{},29:{},30:{},31:{},32:{},33:{},34:{},35:{T:1},36:{T:-1},37:{T:1},38:{T:-1},39:{f:function(e,t,r){var n=e.l+t;e.l+=4,e.l+=1;var a=e.read_shift(4),s=kn(e),i=Do(e,0,r),o=wn(e);e.l=n;var l={Name:s,Ptg:i};return a<268435455&&(l.Sheet=a),o&&(l.Comment=o),l}},40:{},42:{},43:{f:function(e,t,r){var n={};n.sz=e.read_shift(2)/20;var a=function(e){var t=e.read_shift(1);return e.l++,{fBold:1&t,fItalic:2&t,fUnderline:4&t,fStrikeout:8&t,fOutline:16&t,fShadow:32&t,fCondense:64&t,fExtend:128&t}}(e);switch(a.fItalic&&(n.italic=1),a.fCondense&&(n.condense=1),a.fExtend&&(n.extend=1),a.fShadow&&(n.shadow=1),a.fOutline&&(n.outline=1),a.fStrikeout&&(n.strike=1),700===e.read_shift(2)&&(n.bold=1),e.read_shift(2)){case 1:n.vertAlign="superscript";break;case 2:n.vertAlign="subscript"}var s=e.read_shift(1);0!=s&&(n.underline=s);var i=e.read_shift(1);i>0&&(n.family=i);var o=e.read_shift(1);switch(o>0&&(n.charset=o),e.l++,n.color=function(e){var t={},r=e.read_shift(1)>>>1,n=e.read_shift(1),a=e.read_shift(2,"i"),s=e.read_shift(1),i=e.read_shift(1),o=e.read_shift(1);switch(e.l++,r){case 0:t.auto=1;break;case 1:t.index=n;var l=zn[n];l&&(t.rgb=ni(l));break;case 2:t.rgb=ni([s,i,o]);break;case 3:t.theme=n}return 0!=a&&(t.tint=a>0?a/32767:a/32768),t}(e),e.read_shift(1)){case 1:n.scheme="major";break;case 2:n.scheme="minor"}return n.name=ln(e),n}},44:{f:function(e,t){return[e.read_shift(2),ln(e)]}},45:{f:Ti},46:{f:_i},47:{f:function(e,t){var r=e.l+t,n=e.read_shift(2),a=e.read_shift(2);return e.l=r,{ixfe:n,numFmtId:a}}},48:{},49:{f:function(e){return e.read_shift(4,"i")}},50:{},51:{f:function(e){for(var t=[],r=e.read_shift(4);r-- >0;)t.push([e.read_shift(4),e.read_shift(4)]);return t}},52:{T:1},53:{T:-1},54:{T:1},55:{T:-1},56:{T:1},57:{T:-1},58:{},59:{},60:{f:Ss},62:{f:function(e){return[dn(e),un(e),"is"]}},63:{f:function(e){var t={};t.i=e.read_shift(4);var r={};r.r=e.read_shift(4),r.c=e.read_shift(4),t.r=Jr(r);var n=e.read_shift(1);return 2&n&&(t.l="1"),8&n&&(t.a="1"),t}},64:{f:function(){}},65:{},66:{},67:{},68:{},69:{},70:{},128:{},129:{T:1},130:{T:-1},131:{T:1,f:Ur,p:0},132:{T:-1},133:{T:1},134:{T:-1},135:{T:1},136:{T:-1},137:{T:1,f:function(e){var t=e.read_shift(2);return e.l+=28,{RTL:32&t}}},138:{T:-1},139:{T:1},140:{T:-1},141:{T:1},142:{T:-1},143:{T:1},144:{T:-1},145:{T:1},146:{T:-1},147:{f:function(e,t){var r={},n=e[e.l];return++e.l,r.above=!(64&n),r.left=!(128&n),e.l+=18,r.name=vn(e,t-19),r}},148:{f:pl,p:16},151:{f:function(){}},152:{},153:{f:function(e,t){var r={},n=e.read_shift(4);r.defaultThemeVersion=e.read_shift(4);var a=t>8?ln(e):"";return a.length>0&&(r.CodeName=a),r.autoCompressPictures=!!(65536&n),r.backupFile=!!(64&n),r.checkCompatibility=!!(4096&n),r.date1904=!!(1&n),r.filterPrivacy=!!(8&n),r.hidePivotFieldList=!!(1024&n),r.promptedSolutions=!!(16&n),r.publishItems=!!(2048&n),r.refreshAllConnections=!!(262144&n),r.saveExternalLinkValues=!!(128&n),r.showBorderUnselectedTables=!!(4&n),r.showInkAnnotation=!!(32&n),r.showObjects=["all","placeholders","none"][n>>13&3],r.showPivotChartFilter=!!(32768&n),r.updateLinks=["userSet","never","always"][n>>8&3],r}},154:{},155:{},156:{f:function(e,t){var r={};return r.Hidden=e.read_shift(4),r.iTabID=e.read_shift(4),r.strRelID=Tn(e,t-8),r.name=ln(e),r}},157:{},158:{},159:{T:1,f:function(e){return[e.read_shift(4),e.read_shift(4)]}},160:{T:-1},161:{T:1,f:Cn},162:{T:-1},163:{T:1},164:{T:-1},165:{T:1},166:{T:-1},167:{},168:{},169:{},170:{},171:{},172:{T:1},173:{T:-1},174:{},175:{},176:{f:vl},177:{T:1},178:{T:-1},179:{T:1},180:{T:-1},181:{T:1},182:{T:-1},183:{T:1},184:{T:-1},185:{T:1},186:{T:-1},187:{T:1},188:{T:-1},189:{T:1},190:{T:-1},191:{T:1},192:{T:-1},193:{T:1},194:{T:-1},195:{T:1},196:{T:-1},197:{T:1},198:{T:-1},199:{T:1},200:{T:-1},201:{T:1},202:{T:-1},203:{T:1},204:{T:-1},205:{T:1},206:{T:-1},207:{T:1},208:{T:-1},209:{T:1},210:{T:-1},211:{T:1},212:{T:-1},213:{T:1},214:{T:-1},215:{T:1},216:{T:-1},217:{T:1},218:{T:-1},219:{T:1},220:{T:-1},221:{T:1},222:{T:-1},223:{T:1},224:{T:-1},225:{T:1},226:{T:-1},227:{T:1},228:{T:-1},229:{T:1},230:{T:-1},231:{T:1},232:{T:-1},233:{T:1},234:{T:-1},235:{T:1},236:{T:-1},237:{T:1},238:{T:-1},239:{T:1},240:{T:-1},241:{T:1},242:{T:-1},243:{T:1},244:{T:-1},245:{T:1},246:{T:-1},247:{T:1},248:{T:-1},249:{T:1},250:{T:-1},251:{T:1},252:{T:-1},253:{T:1},254:{T:-1},255:{T:1},256:{T:-1},257:{T:1},258:{T:-1},259:{T:1},260:{T:-1},261:{T:1},262:{T:-1},263:{T:1},264:{T:-1},265:{T:1},266:{T:-1},267:{T:1},268:{T:-1},269:{T:1},270:{T:-1},271:{T:1},272:{T:-1},273:{T:1},274:{T:-1},275:{T:1},276:{T:-1},277:{},278:{T:1},279:{T:-1},280:{T:1},281:{T:-1},282:{T:1},283:{T:1},284:{T:-1},285:{T:1},286:{T:-1},287:{T:1},288:{T:-1},289:{T:1},290:{T:-1},291:{T:1},292:{T:-1},293:{T:1},294:{T:-1},295:{T:1},296:{T:-1},297:{T:1},298:{T:-1},299:{T:1},300:{T:-1},301:{T:1},302:{T:-1},303:{T:1},304:{T:-1},305:{T:1},306:{T:-1},307:{T:1},308:{T:-1},309:{T:1},310:{T:-1},311:{T:1},312:{T:-1},313:{T:-1},314:{T:1},315:{T:-1},316:{T:1},317:{T:-1},318:{T:1},319:{T:-1},320:{T:1},321:{T:-1},322:{T:1},323:{T:-1},324:{T:1},325:{T:-1},326:{T:1},327:{T:-1},328:{T:1},329:{T:-1},330:{T:1},331:{T:-1},332:{T:1},333:{T:-1},334:{T:1},335:{f:function(e,t){return{flags:e.read_shift(4),version:e.read_shift(4),name:ln(e)}}},336:{T:-1},337:{f:function(e){return e.l+=4,0!=e.read_shift(4)},T:1},338:{T:-1},339:{T:1},340:{T:-1},341:{T:1},342:{T:-1},343:{T:1},344:{T:-1},345:{T:1},346:{T:-1},347:{T:1},348:{T:-1},349:{T:1},350:{T:-1},351:{},352:{},353:{T:1},354:{T:-1},355:{f:Tn},357:{},358:{},359:{},360:{T:1},361:{},362:{f:bs},363:{},364:{},366:{},367:{},368:{},369:{},370:{},371:{},372:{T:1},373:{T:-1},374:{T:1},375:{T:-1},376:{T:1},377:{T:-1},378:{T:1},379:{T:-1},380:{T:1},381:{T:-1},382:{T:1},383:{T:-1},384:{T:1},385:{T:-1},386:{T:1},387:{T:-1},388:{T:1},389:{T:-1},390:{T:1},391:{T:-1},392:{T:1},393:{T:-1},394:{T:1},395:{T:-1},396:{},397:{},398:{},399:{},400:{},401:{T:1},403:{},404:{},405:{},406:{},407:{},408:{},409:{},410:{},411:{},412:{},413:{},414:{},415:{},416:{},417:{},418:{},419:{},420:{},421:{},422:{T:1},423:{T:1},424:{T:-1},425:{T:-1},426:{f:function(e,t,r){var n=e.l+t,a=_n(e),s=e.read_shift(1),i=[a];if(i[2]=s,r.cellFormula){var o=Io(e,n-e.l,r);i[1]=o}else e.l=n;return i}},427:{f:function(e,t,r){var n=e.l+t,a=[Cn(e,16)];if(r.cellFormula){var s=Fo(e,n-e.l,r);a[1]=s,e.l=n}else e.l=n;return a}},428:{},429:{T:1},430:{T:-1},431:{T:1},432:{T:-1},433:{T:1},434:{T:-1},435:{T:1},436:{T:-1},437:{T:1},438:{T:-1},439:{T:1},440:{T:-1},441:{T:1},442:{T:-1},443:{T:1},444:{T:-1},445:{T:1},446:{T:-1},447:{T:1},448:{T:-1},449:{T:1},450:{T:-1},451:{T:1},452:{T:-1},453:{T:1},454:{T:-1},455:{T:1},456:{T:-1},457:{T:1},458:{T:-1},459:{T:1},460:{T:-1},461:{T:1},462:{T:-1},463:{T:1},464:{T:-1},465:{T:1},466:{T:-1},467:{T:1},468:{T:-1},469:{T:1},470:{T:-1},471:{},472:{},473:{T:1},474:{T:-1},475:{},476:{f:function(e){var t={};return wl.forEach((function(r){t[r]=On(e)})),t}},477:{},478:{},479:{T:1},480:{T:-1},481:{T:1},482:{T:-1},483:{T:1},484:{T:-1},485:{f:function(){}},486:{T:1},487:{T:-1},488:{T:1},489:{T:-1},490:{T:1},491:{T:-1},492:{T:1},493:{T:-1},494:{f:function(e,t){var r=e.l+t,n=Cn(e,16),a=wn(e),s=ln(e),i=ln(e),o=ln(e);e.l=r;var l={rfx:n,relId:a,loc:s,display:o};return i&&(l.Tooltip=i),l}},495:{T:1},496:{T:-1},497:{T:1},498:{T:-1},499:{},500:{T:1},501:{T:-1},502:{T:1},503:{T:-1},504:{},505:{T:1},506:{T:-1},507:{},508:{T:1},509:{T:-1},510:{T:1},511:{T:-1},512:{},513:{},514:{T:1},515:{T:-1},516:{T:1},517:{T:-1},518:{T:1},519:{T:-1},520:{T:1},521:{T:-1},522:{},523:{},524:{},525:{},526:{},527:{},528:{T:1},529:{T:-1},530:{T:1},531:{T:-1},532:{T:1},533:{T:-1},534:{},535:{},536:{},537:{},538:{T:1},539:{T:-1},540:{T:1},541:{T:-1},542:{T:1},548:{},549:{},550:{f:Tn},551:{},552:{},553:{},554:{T:1},555:{T:-1},556:{T:1},557:{T:-1},558:{T:1},559:{T:-1},560:{T:1},561:{T:-1},562:{},564:{},565:{T:1},566:{T:-1},569:{T:1},570:{T:-1},572:{},573:{T:1},574:{T:-1},577:{},578:{},579:{},580:{},581:{},582:{},583:{},584:{},585:{},586:{},587:{},588:{T:-1},589:{},590:{T:1},591:{T:-1},592:{T:1},593:{T:-1},594:{T:1},595:{T:-1},596:{},597:{T:1},598:{T:-1},599:{T:1},600:{T:-1},601:{T:1},602:{T:-1},603:{T:1},604:{T:-1},605:{T:1},606:{T:-1},607:{},608:{T:1},609:{T:-1},610:{},611:{T:1},612:{T:-1},613:{T:1},614:{T:-1},615:{T:1},616:{T:-1},617:{T:1},618:{T:-1},619:{T:1},620:{T:-1},625:{},626:{T:1},627:{T:-1},628:{T:1},629:{T:-1},630:{T:1},631:{T:-1},632:{f:Gi},633:{T:1},634:{T:-1},635:{T:1,f:function(e){var t={};t.iauthor=e.read_shift(4);var r=Cn(e,16);return t.rfx=r.s,t.ref=Jr(r.s),e.l+=16,t}},636:{T:-1},637:{f:hn},638:{T:1},639:{},640:{T:-1},641:{T:1},642:{T:-1},643:{T:1},644:{},645:{T:-1},646:{T:1},648:{T:1},649:{},650:{T:-1},651:{f:function(e,t){return e.l+=10,{name:ln(e)}}},652:{},653:{T:1},654:{T:-1},655:{T:1},656:{T:-1},657:{T:1},658:{T:-1},659:{},660:{T:1},661:{},662:{T:-1},663:{},664:{T:1},665:{},666:{T:-1},667:{},668:{},669:{},671:{T:1},672:{T:-1},673:{T:1},674:{T:-1},675:{},676:{},677:{},678:{},679:{},680:{},681:{},1024:{},1025:{},1026:{T:1},1027:{T:-1},1028:{T:1},1029:{T:-1},1030:{},1031:{T:1},1032:{T:-1},1033:{T:1},1034:{T:-1},1035:{},1036:{},1037:{},1038:{T:1},1039:{T:-1},1040:{},1041:{T:1},1042:{T:-1},1043:{},1044:{},1045:{},1046:{T:1},1047:{T:-1},1048:{T:1},1049:{T:-1},1050:{},1051:{T:1},1052:{T:1},1053:{f:function(){}},1054:{T:1},1055:{},1056:{T:1},1057:{T:-1},1058:{T:1},1059:{T:-1},1061:{},1062:{T:1},1063:{T:-1},1064:{T:1},1065:{T:-1},1066:{T:1},1067:{T:-1},1068:{T:1},1069:{T:-1},1070:{T:1},1071:{T:-1},1072:{T:1},1073:{T:-1},1075:{T:1},1076:{T:-1},1077:{T:1},1078:{T:-1},1079:{T:1},1080:{T:-1},1081:{T:1},1082:{T:-1},1083:{T:1},1084:{T:-1},1085:{},1086:{T:1},1087:{T:-1},1088:{T:1},1089:{T:-1},1090:{T:1},1091:{T:-1},1092:{T:1},1093:{T:-1},1094:{T:1},1095:{T:-1},1096:{},1097:{T:1},1098:{},1099:{T:-1},1100:{T:1},1101:{T:-1},1102:{},1103:{},1104:{},1105:{},1111:{},1112:{},1113:{T:1},1114:{T:-1},1115:{T:1},1116:{T:-1},1117:{},1118:{T:1},1119:{T:-1},1120:{T:1},1121:{T:-1},1122:{T:1},1123:{T:-1},1124:{T:1},1125:{T:-1},1126:{},1128:{T:1},1129:{T:-1},1130:{},1131:{T:1},1132:{T:-1},1133:{T:1},1134:{T:-1},1135:{T:1},1136:{T:-1},1137:{T:1},1138:{T:-1},1139:{T:1},1140:{T:-1},1141:{},1142:{T:1},1143:{T:-1},1144:{T:1},1145:{T:-1},1146:{},1147:{T:1},1148:{T:-1},1149:{T:1},1150:{T:-1},1152:{T:1},1153:{T:-1},1154:{T:-1},1155:{T:-1},1156:{T:-1},1157:{T:1},1158:{T:-1},1159:{T:1},1160:{T:-1},1161:{T:1},1162:{T:-1},1163:{T:1},1164:{T:-1},1165:{T:1},1166:{T:-1},1167:{T:1},1168:{T:-1},1169:{T:1},1170:{T:-1},1171:{},1172:{T:1},1173:{T:-1},1177:{},1178:{T:1},1180:{},1181:{},1182:{},2048:{T:1},2049:{T:-1},2050:{},2051:{T:1},2052:{T:-1},2053:{},2054:{},2055:{T:1},2056:{T:-1},2057:{T:1},2058:{T:-1},2060:{},2067:{},2068:{T:1},2069:{T:-1},2070:{},2071:{},2072:{T:1},2073:{T:-1},2075:{},2076:{},2077:{T:1},2078:{T:-1},2079:{},2080:{T:1},2081:{T:-1},2082:{},2083:{T:1},2084:{T:-1},2085:{T:1},2086:{T:-1},2087:{T:1},2088:{T:-1},2089:{T:1},2090:{T:-1},2091:{},2092:{},2093:{T:1},2094:{T:-1},2095:{},2096:{T:1},2097:{T:-1},2098:{T:1},2099:{T:-1},2100:{T:1},2101:{T:-1},2102:{},2103:{T:1},2104:{T:-1},2105:{},2106:{T:1},2107:{T:-1},2108:{},2109:{T:1},2110:{T:-1},2111:{T:1},2112:{T:-1},2113:{T:1},2114:{T:-1},2115:{},2116:{},2117:{},2118:{T:1},2119:{T:-1},2120:{},2121:{T:1},2122:{T:-1},2123:{T:1},2124:{T:-1},2125:{},2126:{T:1},2127:{T:-1},2128:{},2129:{T:1},2130:{T:-1},2131:{T:1},2132:{T:-1},2133:{T:1},2134:{},2135:{},2136:{},2137:{T:1},2138:{T:-1},2139:{T:1},2140:{T:-1},2141:{},3072:{},3073:{},4096:{T:1},4097:{T:-1},5002:{T:1},5003:{T:-1},5081:{T:1},5082:{T:-1},5083:{},5084:{T:1},5085:{T:-1},5086:{T:1},5087:{T:-1},5088:{},5089:{},5090:{},5092:{T:1},5093:{T:-1},5094:{},5095:{T:1},5096:{T:-1},5097:{},5099:{},65535:{n:""}},cc={6:{f:Ro},10:{f:Oa},12:{f:Ia},13:{f:Ia},14:{f:Ra},15:{f:Ra},16:{f:On},17:{f:Ra},18:{f:Ra},19:{f:Ia},20:{f:ps},21:{f:ps},23:{f:bs},24:{f:vs},25:{f:Ra},26:{},27:{},28:{f:function(e,t,r){return function(e,t,r){if(!(r.biff<8)){var n=e.read_shift(2),a=e.read_shift(2),s=e.read_shift(2),i=e.read_shift(2),o=Wa(e,0,r);return r.biff<8&&e.read_shift(1),[{r:n,c:a},o,i,s]}}(e,0,r)}},29:{},34:{f:Ra},35:{f:ms},38:{f:On},39:{f:On},40:{f:On},41:{f:On},42:{f:Ra},43:{f:Ra},47:{f:function(e,t,r){var n={Type:r.biff>=8?e.read_shift(2):0};return n.Type?function(e,t,r){var n=r||{};n.Info=e.read_shift(2),e.l-=2,1===n.Info?n.Data=function(e){var t={},r=t.EncryptionVersionInfo=Xs(e,4);if(1!=r.Major||1!=r.Minor)throw"unrecognized version code "+r.Major+" : "+r.Minor;return t.Salt=e.read_shift(16),t.EncryptedVerifier=e.read_shift(16),t.EncryptedVerifierHash=e.read_shift(16),t}(e):n.Data=function(e,t){var r={},n=r.EncryptionVersionInfo=Xs(e,4);if(t-=4,2!=n.Minor)throw new Error("unrecognized minor version code: "+n.Minor);if(n.Major>4||n.Major<2)throw new Error("unrecognized major version code: "+n.Major);r.Flags=e.read_shift(4),t-=4;var a=e.read_shift(4);return t-=4,r.EncryptionHeader=Ks(e,a),t-=a,r.EncryptionVerifier=qs(e,t),r}(e,t)}(e,t-2,n):function(e,t,r,n){var a,s,i,o={key:Ia(e),verificationBytes:Ia(e)};r.password&&(o.verifier=ei(r.password)),n.valid=o.verificationBytes===o.verifier,n.valid&&(n.insitu=(a=r.password,s=0,i=ti(a),function(e){var t=function(e,t,r,n,a){var s,i;for(a||(a=t),n||(n=ti("")),s=0;s!=t.length;++s)i=t[s],i=255&((i^=n[r])>>5|i<<3),a[s]=i,++r;return[a,r,n]}(0,e,s,i);return s=t[1],t[0]}))}(e,r.biff,r,n),n}},49:{f:function(e,t,r){var n={dyHeight:e.read_shift(2),fl:e.read_shift(2)};switch(r&&r.biff||8){case 2:break;case 3:case 4:e.l+=2;break;default:e.l+=10}return n.name=La(e,0,r),n}},51:{f:Ia},60:{},61:{f:function(e){return{Pos:[e.read_shift(2),e.read_shift(2)],Dim:[e.read_shift(2),e.read_shift(2)],Flags:e.read_shift(2),CurTab:e.read_shift(2),FirstTab:e.read_shift(2),Selected:e.read_shift(2),TabRatio:e.read_shift(2)}}},64:{f:Ra},65:{f:function(){}},66:{f:Ia},77:{},80:{},81:{},82:{},85:{f:Ia},89:{},90:{},91:{},92:{f:function(e,t,r){if(r.enc)return e.l+=t,"";var n=e.l,a=Wa(e,0,r);return e.read_shift(t+n-e.l),a}},93:{f:function(e,t,r){if(r&&r.biff<8)return function(e,t,r){e.l+=4;var n=e.read_shift(2),a=e.read_shift(2),s=e.read_shift(2);e.l+=2,e.l+=2,e.l+=2,e.l+=2,e.l+=2,e.l+=2,e.l+=2,e.l+=2,e.l+=2,e.l+=6,t-=36;var i=[];return i.push((ys[n]||Ur)(e,t,r)),{cmo:[a,n,s],ft:i}}(e,t,r);var n=rs(e),a=function(e,t){for(var r=e.l+t,n=[];e.l<r;){var a=e.read_shift(2);e.l-=2;try{n.push(as[a](e,r-e.l))}catch(t){return e.l=r,n}}return e.l!=r&&(e.l=r),n}(e,t-22,n[1]);return{cmo:n,ft:a}}},94:{},95:{f:Ra},96:{},97:{},99:{f:Ra},125:{f:Ss},128:{f:function(e){e.l+=4;var t=[e.read_shift(2),e.read_shift(2)];if(0!==t[0]&&t[0]--,0!==t[1]&&t[1]--,t[0]>7||t[1]>7)throw new Error("Bad Gutters: "+t.join("|"));return t}},129:{f:function(e,t,r){var n=r&&8==r.biff||2==t?e.read_shift(2):(e.l+=t,0);return{fDialog:16&n,fBelow:64&n,fRight:128&n}}},130:{f:Ia},131:{f:Ra},132:{f:Ra},133:{f:function(e,t,r){var n=e.read_shift(4),a=3&e.read_shift(1),s=e.read_shift(1);switch(s){case 0:s="Worksheet";break;case 1:s="Macrosheet";break;case 2:s="Chartsheet";break;case 6:s="VBAModule"}var i=La(e,0,r);return 0===i.length&&(i="Sheet1"),{pos:n,hs:a,dt:s,name:i}}},134:{},140:{f:function(e){var t,r=[0,0];return t=e.read_shift(2),r[0]=Mn[t]||t,t=e.read_shift(2),r[1]=Mn[t]||t,r}},141:{f:Ia},144:{},146:{f:function(e){for(var t=e.read_shift(2),r=[];t-- >0;)r.push(Xa(e));return r}},151:{},152:{},153:{},154:{},155:{},156:{f:Ia},157:{},158:{},160:{f:xs},161:{f:function(e,t){var r={};return t<32||(e.l+=16,r.header=On(e),r.footer=On(e),e.l+=2),r}},174:{},175:{},176:{},177:{},178:{},180:{},181:{},182:{},184:{},185:{},189:{f:function(e,t){for(var r=e.l+t-2,n=e.read_shift(2),a=e.read_shift(2),s=[];e.l<r;)s.push(Qa(e));if(e.l!==r)throw new Error("MulRK read error");var i=e.read_shift(2);if(s.length!=i-a+1)throw new Error("MulRK length mismatch");return{r:n,c:a,C:i,rkrec:s}}},190:{f:function(e,t){for(var r=e.l+t-2,n=e.read_shift(2),a=e.read_shift(2),s=[];e.l<r;)s.push(e.read_shift(2));if(e.l!==r)throw new Error("MulBlank read error");var i=e.read_shift(2);if(s.length!=i-a+1)throw new Error("MulBlank length mismatch");return{r:n,c:a,C:i,ixfe:s}}},193:{f:Oa},197:{},198:{},199:{},200:{},201:{},202:{f:Ra},203:{},204:{},205:{},206:{},207:{},208:{},209:{},210:{},211:{},213:{},215:{},216:{},217:{},218:{f:Ia},220:{},221:{f:Ra},222:{},224:{f:function(e,t,r){var n={};return n.ifnt=e.read_shift(2),n.numFmtId=e.read_shift(2),n.flags=e.read_shift(2),n.fStyle=n.flags>>2&1,n.data=function(e,t,r,n){var a={},s=e.read_shift(4),i=e.read_shift(4),o=e.read_shift(4),l=e.read_shift(2);return a.patternType=Un[o>>26],n.cellStyles?(a.alc=7&s,a.fWrap=s>>3&1,a.alcV=s>>4&7,a.fJustLast=s>>7&1,a.trot=s>>8&255,a.cIndent=s>>16&15,a.fShrinkToFit=s>>20&1,a.iReadOrder=s>>22&2,a.fAtrNum=s>>26&1,a.fAtrFnt=s>>27&1,a.fAtrAlc=s>>28&1,a.fAtrBdr=s>>29&1,a.fAtrPat=s>>30&1,a.fAtrProt=s>>31&1,a.dgLeft=15&i,a.dgRight=i>>4&15,a.dgTop=i>>8&15,a.dgBottom=i>>12&15,a.icvLeft=i>>16&127,a.icvRight=i>>23&127,a.grbitDiag=i>>30&3,a.icvTop=127&o,a.icvBottom=o>>7&127,a.icvDiag=o>>14&127,a.dgDiag=o>>21&15,a.icvFore=127&l,a.icvBack=l>>7&127,a.fsxButton=l>>14&1,a):a}(e,0,n.fStyle,r),n}},225:{f:function(e,t){return 0===t||e.read_shift(2),1200}},226:{f:Oa},227:{},229:{f:function(e,t){for(var r=[],n=e.read_shift(2);n--;)r.push(Ja(e));return r}},233:{},235:{},236:{},237:{},239:{},240:{},241:{},242:{},244:{},245:{},246:{},247:{},248:{},249:{},251:{},252:{f:function(e,t){for(var r=e.l+t,n=e.read_shift(4),a=e.read_shift(4),s=[],i=0;i!=a&&e.l<r;++i)s.push(Ma(e));return s.Count=n,s.Unique=a,s}},253:{f:function(e){var t=Ya(e);return t.isst=e.read_shift(4),t}},255:{f:function(e,t){var r={};return r.dsst=e.read_shift(2),e.l+=t-2,r}},256:{},259:{},290:{},311:{},312:{},315:{},317:{f:Da},318:{},319:{},320:{},330:{},331:{},333:{},334:{},335:{},336:{},337:{},338:{},339:{},340:{},351:{},352:{f:Ra},353:{f:Oa},401:{},402:{},403:{},404:{},405:{},406:{},407:{},408:{},425:{},426:{},427:{},428:{},429:{},430:{f:function(e,t,r){var n=e.l+t,a=e.read_shift(2),s=e.read_shift(2);if(r.sbcch=s,1025==s||14849==s)return[s,a];if(s<1||s>255)throw new Error("Unexpected SupBook type: "+s);for(var i=Ba(e,s),o=[];n>e.l;)o.push(za(e));return[s,a,i,o]}},431:{f:Ra},432:{},433:{},434:{},437:{},438:{f:function(e,t,r){var n=e.l,a="";try{e.l+=4;var s=(r.lastobj||{cmo:[0,0]}).cmo[1];-1==[0,5,7,11,12,14].indexOf(s)?e.l+=6:function(e){var t=e.read_shift(1);e.l++;var r=e.read_shift(2);e.l+=2}(e);var i=e.read_shift(2);e.read_shift(2),Ia(e);var o=e.read_shift(2);e.l+=o;for(var l=1;l<e.lens.length-1;++l){if(e.l-n!=e.lens[l])throw new Error("TxO: bad continue record");var c=e[e.l];if((a+=Ba(e,e.lens[l+1]-e.lens[l]-1)).length>=(c?i:2*i))break}if(a.length!==i&&a.length!==2*i)throw new Error("cchText: "+i+" != "+a.length);return e.l=n+t,{t:a}}catch(r){return e.l=n+t,{t:a}}}},439:{f:Ra},440:{f:function(e,t){var r=Ja(e);e.l+=16;var n=function(e,t){var r=e.l+t,n=e.read_shift(4);if(2!==n)throw new Error("Unrecognized streamVersion: "+n);var a=e.read_shift(2);e.l+=2;var s,i,o,l,c,f,u="";16&a&&(s=ja(e,e.l)),128&a&&(i=ja(e,e.l)),257==(257&a)&&(o=ja(e,e.l)),1==(257&a)&&(l=function(e,t){var r=e.read_shift(16);switch(r){case"e0c9ea79f9bace118c8200aa004ba90b":return function(e){var t=e.read_shift(4),r=e.l,n=!1;t>24&&(e.l+=t-24,"795881f43b1d7f48af2c825dc4852763"===e.read_shift(16)&&(n=!0),e.l=r);var a=e.read_shift((n?t-24:t)>>1,"utf16le").replace(R,"");return n&&(e.l+=24),a}(e);case"0303000000000000c000000000000046":return function(e){for(var t=e.read_shift(2),r="";t-- >0;)r+="../";var n=e.read_shift(0,"lpstr-ansi");if(e.l+=2,57005!=e.read_shift(2))throw new Error("Bad FileMoniker");if(0===e.read_shift(4))return r+n.replace(/\\/g,"/");var a=e.read_shift(4);if(3!=e.read_shift(2))throw new Error("Bad FileMoniker");return r+e.read_shift(a>>1,"utf16le").replace(R,"")}(e);default:throw new Error("Unsupported Moniker "+r)}}(e,e.l)),8&a&&(u=ja(e,e.l)),32&a&&(c=e.read_shift(16)),64&a&&(f=da(e)),e.l=r;var h=i||o||l||"";h&&u&&(h+="#"+u),h||(h="#"+u),2&a&&"/"==h.charAt(0)&&"/"!=h.charAt(1)&&(h="file://"+h);var d={Target:h};return c&&(d.guid=c),f&&(d.time=f),s&&(d.Tooltip=s),d}(e,t-24);return[r,n]}},441:{},442:{f:za},443:{},444:{f:Ia},445:{},446:{},448:{f:Oa},449:{f:function(e){return e.read_shift(2),e.read_shift(4)},r:2},450:{f:Oa},512:{f:us},513:{f:Es},515:{f:function(e,t,r){r.biffguess&&2==r.biff&&(r.biff=5);var n=Ya(e),a=On(e);return n.val=a,n}},516:{f:function(e,t,r){r.biffguess&&2==r.biff&&(r.biff=5),e.l;var n=Ya(e);2==r.biff&&e.l++;var a=za(e,e.l,r);return n.val=a,n}},517:{f:ds},519:{f:_s},520:{f:function(e){var t={};t.r=e.read_shift(2),t.c=e.read_shift(2),t.cnt=e.read_shift(2)-t.c;var r=e.read_shift(2);e.l+=4;var n=e.read_shift(1);return e.l+=3,7&n&&(t.level=7&n),32&n&&(t.hidden=!0),64&n&&(t.hpt=r/20),t}},523:{},545:{f:ws},549:{f:ls},566:{},574:{f:function(e,t,r){return r&&r.biff>=2&&r.biff<5?{}:{RTL:64&e.read_shift(2)}}},638:{f:function(e){var t=e.read_shift(2),r=e.read_shift(2),n=Qa(e);return{r:t,c:r,ixfe:n[0],rknum:n[1]}}},659:{},1048:{},1054:{f:function(e,t,r){return[e.read_shift(2),Wa(e,0,r)]}},1084:{},1212:{f:function(e,t,r){var n=es(e);e.l++;var a=e.read_shift(1);return[Oo(e,t-=8,r),a,n]}},2048:{f:function(e,t){e.read_shift(2);var r=Ja(e),n=e.read_shift((t-10)/2,"dbcs-cont");return[r,n=n.replace(R,"")]}},2049:{},2050:{},2051:{},2052:{},2053:{},2054:{},2055:{},2056:{},2057:{f:ss},2058:{},2059:{},2060:{},2061:{},2062:{},2063:{},2064:{},2066:{},2067:{},2128:{},2129:{},2130:{},2131:{},2132:{},2133:{},2134:{},2135:{},2136:{},2137:{},2138:{},2146:{},2147:{r:12},2148:{},2149:{},2150:{},2151:{f:Oa},2152:{},2154:{},2155:{},2156:{},2161:{},2162:{},2164:{},2165:{},2166:{},2167:{},2168:{},2169:{},2170:{},2171:{},2172:{f:function(e){e.l+=2;var t={cxfs:0,crc:0};return t.cxfs=e.read_shift(2),t.crc=e.read_shift(4),t},r:12},2173:{f:function(e,t){e.l,e.l+=2;var r=e.read_shift(2);e.l+=2;for(var n=e.read_shift(2),a=[];n-- >0;)a.push(Ui(e,e.l));return{ixfe:r,ext:a}},r:12},2174:{},2175:{},2180:{},2181:{},2182:{},2183:{},2184:{},2185:{},2186:{},2187:{},2188:{f:Ra,r:12},2189:{},2190:{r:12},2191:{},2192:{},2194:{},2195:{},2196:{f:function(e,t,r){if(!(r.biff<8)){var n=e.read_shift(2),a=e.read_shift(2);return[Ba(e,n,r),Ba(e,a,r)]}e.l+=t},r:12},2197:{},2198:{f:function(e,t,r){var n=e.l+t;if(124226!==e.read_shift(4))if(r.cellStyles){var a,s=e.slice(e.l);e.l=n;try{a=ft(s,{type:"array"})}catch(e){return}var i=st(a,"theme/theme/theme1.xml",!0);if(i)return Li(i,r)}else e.l=n},r:12},2199:{},2200:{},2201:{},2202:{f:function(e){return[0!==e.read_shift(4),0!==e.read_shift(4),e.read_shift(4)]},r:12},2203:{f:Oa},2204:{},2205:{},2206:{},2207:{},2211:{f:function(e){var t=function(e){var t=e.read_shift(2),r=e.read_shift(2);return e.l+=8,{type:t,flags:r}}(e);if(2211!=t.type)throw new Error("Invalid Future Record "+t.type);return 0!==e.read_shift(4)}},2212:{},2213:{},2214:{},2215:{},4097:{},4098:{},4099:{},4102:{},4103:{},4105:{},4106:{},4107:{},4108:{},4109:{},4116:{},4117:{},4118:{},4119:{},4120:{},4121:{},4122:{},4123:{},4124:{},4125:{},4126:{},4127:{},4128:{},4129:{},4130:{},4132:{},4133:{},4134:{f:Ia},4135:{},4146:{},4147:{},4148:{},4149:{},4154:{},4156:{},4157:{},4158:{},4159:{},4160:{},4161:{},4163:{},4164:{f:function(e,t,r){var n={area:!1};if(5!=r.biff)return e.l+=t,n;var a=e.read_shift(1);return e.l+=3,16&a&&(n.area=!0),n}},4165:{},4166:{},4168:{},4170:{},4171:{},4174:{},4175:{},4176:{},4177:{},4187:{},4188:{f:function(e){for(var t=e.read_shift(2),r=[];t-- >0;)r.push(Xa(e));return r}},4189:{},4191:{},4192:{},4193:{},4194:{},4195:{},4196:{},4197:{},4198:{},4199:{},4200:{},0:{f:us},1:{},2:{f:function(e){var t=Ya(e);++e.l;var r=e.read_shift(2);return t.t="n",t.val=r,t}},3:{f:function(e){var t=Ya(e);++e.l;var r=On(e);return t.t="n",t.val=r,t}},4:{f:function(e,t,r){r.biffguess&&5==r.biff&&(r.biff=2);var n=Ya(e);++e.l;var a=Wa(e,0,r);return n.t="str",n.val=a,n}},5:{f:ds},7:{f:function(e){var t=e.read_shift(1);return 0===t?(e.l++,""):e.read_shift(t,"sbcs-cont")}},8:{},9:{f:ss},11:{},22:{f:Ia},30:{f:fs},31:{},32:{},33:{f:ws},36:{},37:{f:ls},50:{f:function(e,t){e.l+=6,e.l+=2,e.l+=1,e.l+=3,e.l+=1,e.l+=t-13}},62:{},52:{},67:{},68:{f:Ia},69:{},86:{},126:{},127:{f:function(e){var t=e.read_shift(2),r=e.read_shift(2),n=e.read_shift(4),a={fmt:t,env:r,len:n,data:e.slice(e.l,e.l+n)};return e.l+=n,a}},135:{},136:{},137:{},145:{},148:{},149:{},150:{},169:{},171:{},188:{},191:{},192:{},194:{},195:{},214:{f:function(e,t,r){var n=e.l+t,a=Ya(e),s=e.read_shift(2),i=Ba(e,s,r);return e.l=n,a.t="str",a.val=i,a}},223:{},234:{},354:{},421:{},518:{f:Ro},521:{f:ss},536:{f:vs},547:{f:ms},561:{},579:{},1030:{f:Ro},1033:{f:ss},1091:{},2157:{},2163:{},2177:{},2240:{},2241:{},2242:{},2243:{},2244:{},2245:{},2246:{},2247:{},2248:{},2249:{},2250:{},2251:{},2262:{r:12},29282:{}};function fc(e,t,r,n){var a=t;if(!isNaN(a)){var s=n||(r||[]).length||0,i=e.next(4);i.write_shift(2,a),i.write_shift(2,s),s>0&&xr(r)&&e.push(r)}}function uc(e,t,r){return e||(e=Br(7)),e.write_shift(2,t),e.write_shift(2,r),e.write_shift(2,0),e.write_shift(1,0),e}function hc(e,t,r,n){if(null!=t.v)switch(t.t){case"d":case"n":var a="d"==t.t?Me(Ge(t.v)):t.v;return void(a==(0|a)&&a>=0&&a<65536?fc(e,2,(s=r,i=n,o=a,l=Br(9),uc(l,s,i),l.write_shift(2,o),l)):fc(e,3,function(e,t,r){var n=Br(15);return uc(n,e,t),n.write_shift(8,r,"f"),n}(r,n,a)));case"b":case"e":return void fc(e,5,function(e,t,r,n){var a=Br(9);return uc(a,e,t),Fa(r,n||"b",a),a}(r,n,t.v,t.t));case"s":case"str":return void fc(e,4,function(e,t,r){var n=Br(8+2*r.length);return uc(n,e,t),n.write_shift(1,r.length),n.write_shift(r.length,r,"sbcs"),n.l<n.length?n.slice(0,n.l):n}(r,n,(t.v||"").slice(0,255)))}var s,i,o,l;fc(e,1,uc(null,r,n))}function dc(e,t,r,n,a){var s=16+Xo(a.cellXfs,t,a);if(null!=t.v||t.bf)if(t.bf)fc(e,6,function(e,t,r,n,a){var s=Ka(t,r,a),i=function(e){if(null==e){var t=Br(8);return t.write_shift(1,3),t.write_shift(1,0),t.write_shift(2,0),t.write_shift(2,0),t.write_shift(2,65535),t}return Rn("number"==typeof e?e:0)}(e.v),o=Br(6);o.write_shift(2,33),o.write_shift(4,0);for(var l=Br(e.bf.length),c=0;c<e.bf.length;++c)l[c]=e.bf[c];return O([s,i,o,l])}(t,r,n,0,s));else switch(t.t){case"d":case"n":fc(e,515,function(e,t,r,n){var a=Br(14);return Ka(e,t,n,a),Rn(r,a),a}(r,n,"d"==t.t?Me(Ge(t.v)):t.v,s));break;case"b":case"e":fc(e,517,function(e,t,r,n,a,s){var i=Br(8);return Ka(e,t,n,i),Fa(r,s,i),i}(r,n,t.v,s,0,t.t));break;case"s":case"str":a.bookSST?fc(e,253,function(e,t,r,n){var a=Br(10);return Ka(e,t,n,a),a.write_shift(4,r),a}(r,n,Vo(a.Strings,t.v,a.revStrings),s)):fc(e,516,function(e,t,r,n,a){var s=!a||8==a.biff,i=Br(+s+8+(1+s)*r.length);return Ka(e,t,n,i),i.write_shift(2,r.length),s&&i.write_shift(1,1),i.write_shift((1+s)*r.length,r,s?"utf16le":"sbcs"),i}(r,n,(t.v||"").slice(0,255),s,a));break;default:fc(e,513,Ka(r,n,s))}else fc(e,513,Ka(r,n,s))}function pc(e,t,r){var n,a,s,i=Wr(),o=r.SheetNames[e],l=r.Sheets[o]||{},c=(r||{}).Workbook||{},f=(c.Sheets||[])[e]||{},u=Array.isArray(l),h=8==t.biff,d="",p=[],m=tn(l["!ref"]||"A1"),g=h?65536:16384;if(m.e.c>255||m.e.r>=g){if(t.WTF)throw new Error("Range "+(l["!ref"]||"A1")+" exceeds format limit A1:IV16384");m.e.c=Math.min(m.e.c,255),m.e.r=Math.min(m.e.c,g-1)}fc(i,2057,is(0,16,t)),fc(i,13,Pa(1)),fc(i,12,Pa(100)),fc(i,15,Na(!0)),fc(i,17,Na(!1)),fc(i,16,Rn(.001)),fc(i,95,Na(!0)),fc(i,42,Na(!1)),fc(i,43,Na(!1)),fc(i,130,Pa(1)),fc(i,128,(a=[0,0],(s=Br(8)).write_shift(4,0),s.write_shift(2,a[0]?a[0]+1:0),s.write_shift(2,a[1]?a[1]+1:0),s)),fc(i,131,Na(!1)),fc(i,132,Na(!1)),h&&function(e,t){if(t){var r=0;t.forEach((function(t,n){++r<=256&&t&&fc(e,125,function(e,t){var r=Br(12);r.write_shift(2,t),r.write_shift(2,t),r.write_shift(2,256*e.width),r.write_shift(2,0);var n=0;return e.hidden&&(n|=1),r.write_shift(1,n),n=e.level||0,r.write_shift(1,n),r.write_shift(2,0),r}($o(n,t),n))}))}}(i,l["!cols"]),fc(i,512,function(e,t){var r=8!=t.biff&&t.biff?2:4,n=Br(2*r+6);return n.write_shift(r,e.s.r),n.write_shift(r,e.e.r+1),n.write_shift(2,e.s.c),n.write_shift(2,e.e.c+1),n.write_shift(2,0),n}(m,t)),h&&(l["!links"]=[]);for(var v=m.s.r;v<=m.e.r;++v){d=Yr(v);for(var b=m.s.c;b<=m.e.c;++b){v===m.s.r&&(p[b]=qr(b)),n=p[b]+d;var w=u?(l[v]||[])[b]:l[n];w&&(dc(i,w,v,b,t),h&&w.l&&l["!links"].push([n,w.l]))}}var y=f.CodeName||f.name||o;return h&&fc(i,574,function(e){var t=Br(18),r=1718;return e&&e.RTL&&(r|=64),t.write_shift(2,r),t.write_shift(4,0),t.write_shift(4,64),t.write_shift(4,0),t.write_shift(4,0),t}((c.Views||[])[0])),h&&(l["!merges"]||[]).length&&fc(i,229,function(e){var t=Br(2+8*e.length);t.write_shift(2,e.length);for(var r=0;r<e.length;++r)Za(e[r],t);return t}(l["!merges"])),h&&function(e,t){for(var r=0;r<t["!links"].length;++r){var n=t["!links"][r];fc(e,440,ks(n)),n[1].Tooltip&&fc(e,2048,Ts(n))}delete t["!links"]}(i,l),fc(i,442,Ha(y)),h&&function(e,t){var r=Br(19);r.write_shift(4,2151),r.write_shift(4,0),r.write_shift(4,0),r.write_shift(2,3),r.write_shift(1,1),r.write_shift(4,0),fc(e,2151,r),(r=Br(39)).write_shift(4,2152),r.write_shift(4,0),r.write_shift(4,0),r.write_shift(2,3),r.write_shift(1,0),r.write_shift(4,0),r.write_shift(2,1),r.write_shift(4,4),r.write_shift(2,0),Za(tn(t["!ref"]||"A1"),r),r.write_shift(4,4),fc(e,2152,r)}(i,l),fc(i,10),i.end()}function mc(e,t,r){var n,a=Wr(),s=(e||{}).Workbook||{},i=s.Sheets||[],o=s.WBProps||{},l=8==r.biff,c=5==r.biff;fc(a,2057,is(0,5,r)),"xla"==r.bookType&&fc(a,135),fc(a,225,l?Pa(1200):null),fc(a,193,function(e,t){t||(t=Br(2));for(var r=0;r<2;++r)t.write_shift(1,0);return t}()),c&&fc(a,191),c&&fc(a,192),fc(a,226),fc(a,92,function(e,t){var r=!t||8==t.biff,n=Br(r?112:54);for(n.write_shift(8==t.biff?2:1,7),r&&n.write_shift(1,0),n.write_shift(4,859007059),n.write_shift(4,5458548|(r?0:536870912));n.l<n.length;)n.write_shift(1,r?0:32);return n}(0,r)),fc(a,66,Pa(l?1200:1252)),l&&fc(a,353,Pa(0)),l&&fc(a,448),fc(a,317,function(e){for(var t=Br(2*e),r=0;r<e;++r)t.write_shift(2,r+1);return t}(e.SheetNames.length)),l&&e.vbaraw&&fc(a,211),l&&e.vbaraw&&fc(a,442,Ha(o.CodeName||"ThisWorkbook")),fc(a,156,Pa(17)),fc(a,25,Na(!1)),fc(a,18,Na(!1)),fc(a,19,Pa(0)),l&&fc(a,431,Na(!1)),l&&fc(a,444,Pa(0)),fc(a,61,((n=Br(18)).write_shift(2,0),n.write_shift(2,0),n.write_shift(2,29280),n.write_shift(2,17600),n.write_shift(2,56),n.write_shift(2,0),n.write_shift(2,0),n.write_shift(2,1),n.write_shift(2,500),n)),fc(a,64,Na(!1)),fc(a,141,Pa(0)),fc(a,34,Na("true"==function(e){return e.Workbook&&e.Workbook.WBProps&&Rt(e.Workbook.WBProps.date1904)?"true":"false"}(e))),fc(a,14,Na(!0)),l&&fc(a,439,Na(!1)),fc(a,218,Pa(0)),function(e,t,r){fc(e,49,function(e,t){var r=e.name||"Arial",n=t&&5==t.biff,a=Br(n?15+r.length:16+2*r.length);return a.write_shift(2,20*(e.sz||12)),a.write_shift(4,0),a.write_shift(2,400),a.write_shift(4,0),a.write_shift(2,0),a.write_shift(1,r.length),n||a.write_shift(1,1),a.write_shift((n?1:2)*r.length,r,n?"sbcs":"utf16le"),a}({sz:12,color:{theme:1},name:"Arial",family:2,scheme:"minor"},r))}(a,0,r),function(e,t,r){t&&[[5,8],[23,26],[41,44],[50,392]].forEach((function(n){for(var a=n[0];a<=n[1];++a)null!=t[a]&&fc(e,1054,cs(a,t[a],r))}))}(a,e.SSF,r),function(e,t){for(var r=0;r<16;++r)fc(e,224,hs({numFmtId:0,style:!0},0,t));t.cellXfs.forEach((function(r){fc(e,224,hs(r,0,t))}))}(a,r),l&&fc(a,352,Na(!1));var f=a.end(),u=Wr();l&&fc(u,140,function(e){return e||(e=Br(4)),e.write_shift(2,1),e.write_shift(2,1),e}()),l&&r.Strings&&function(e,t,r,n){var a=(r||[]).length||0;if(a<=8224)return fc(e,252,r,a);if(!isNaN(252)){for(var s=r.parts||[],i=0,o=0,l=0;l+(s[i]||8224)<=8224;)l+=s[i]||8224,i++;var c=e.next(4);for(c.write_shift(2,252),c.write_shift(2,l),e.push(r.slice(o,o+l)),o+=l;o<a;){for((c=e.next(4)).write_shift(2,60),l=0;l+(s[i]||8224)<=8224;)l+=s[i]||8224,i++;c.write_shift(2,l),e.push(r.slice(o,o+l)),o+=l}}}(u,0,function(e,t){var r=Br(8);r.write_shift(4,e.Count),r.write_shift(4,e.Unique);for(var n=[],a=0;a<e.length;++a)n[a]=Ua(e[a]);var s=O([r].concat(n));return s.parts=[r.length].concat(n.map((function(e){return e.length}))),s}(r.Strings)),fc(u,10);var h=u.end(),d=Wr(),p=0,m=0;for(m=0;m<e.SheetNames.length;++m)p+=(l?12:11)+(l?2:1)*e.SheetNames[m].length;var g=f.length+p+h.length;for(m=0;m<e.SheetNames.length;++m)fc(d,133,os({pos:g,hs:(i[m]||{}).Hidden||0,dt:0,name:e.SheetNames[m]},r)),g+=t[m].length;var v=d.end();if(p!=v.length)throw new Error("BS8 "+p+" != "+v.length);var b=[];return f.length&&b.push(f),v.length&&b.push(v),h.length&&b.push(h),O(b)}function gc(e,t){for(var r=0;r<=e.SheetNames.length;++r){var n=e.Sheets[e.SheetNames[r]];n&&n["!ref"]&&Zr(n["!ref"]).e.c>255&&"undefined"!=typeof console&&console.error&&console.error("Worksheet '"+e.SheetNames[r]+"' extends beyond column IV (255).  Data may be lost.")}var a=t||{};switch(a.biff||2){case 8:case 5:return function(e,t){var r=t||{},n=[];e&&!e.SSF&&(e.SSF=Ye(W)),e&&e.SSF&&(Te(),ke(e.SSF),r.revssf=Fe(e.SSF),r.revssf[e.SSF[65535]]=0,r.ssf=e.SSF),r.Strings=[],r.Strings.Count=0,r.Strings.Unique=0,sf(r),r.cellXfs=[],Xo(r.cellXfs,{},{revssf:{General:0}}),e.Props||(e.Props={});for(var a=0;a<e.SheetNames.length;++a)n[n.length]=pc(a,r,e);return n.unshift(mc(e,n,r)),O(n)}(e,t);case 4:case 3:case 2:return function(e,t){for(var r=t||{},n=Wr(),a=0,s=0;s<e.SheetNames.length;++s)e.SheetNames[s]==r.sheet&&(a=s);if(0==a&&r.sheet&&e.SheetNames[0]!=r.sheet)throw new Error("Sheet not found: "+r.sheet);return fc(n,4==r.biff?1033:3==r.biff?521:9,is(0,16,r)),function(e,t,r,n){var a,s=Array.isArray(t),i=tn(t["!ref"]||"A1"),o="",l=[];if(i.e.c>255||i.e.r>16383){if(n.WTF)throw new Error("Range "+(t["!ref"]||"A1")+" exceeds format limit A1:IV16384");i.e.c=Math.min(i.e.c,255),i.e.r=Math.min(i.e.c,16383),a=en(i)}for(var c=i.s.r;c<=i.e.r;++c){o=Yr(c);for(var f=i.s.c;f<=i.e.c;++f){c===i.s.r&&(l[f]=qr(f)),a=l[f]+o;var u=s?(t[c]||[])[f]:t[a];u&&hc(e,u,c,f)}}}(n,e.Sheets[e.SheetNames[a]],0,r),fc(n,10),n.end()}(e,t)}throw new Error("invalid type "+a.bookType+" for BIFF")}function vc(e,t){var r=t||{},n=r.dense?[]:{},a=(e=e.replace(/<!--.*?-->/g,"")).match(/<table/i);if(!a)throw new Error("Invalid HTML: could not find <table>");var s=e.match(/<\/table/i),i=a.index,o=s&&s.index||e.length,l=Ze(e.slice(i,o),/(:?<tr[^>]*>)/i,"<tr>"),c=-1,f=0,u=0,h=0,d={s:{r:1e7,c:1e7},e:{r:0,c:0}},p=[];for(i=0;i<l.length;++i){var m=l[i].trim(),g=m.slice(0,3).toLowerCase();if("<tr"!=g){if("<td"==g||"<th"==g){var v=m.split(/<\/t[dh]>/i);for(o=0;o<v.length;++o){var b=v[o].trim();if(b.match(/<t[dh]/i)){for(var w=b,y=0;"<"==w.charAt(0)&&(y=w.indexOf(">"))>-1;)w=w.slice(y+1);for(var k=0;k<p.length;++k){var T=p[k];T.s.c==f&&T.s.r<c&&c<=T.e.r&&(f=T.e.c+1,k=-1)}var S=bt(b.slice(0,b.indexOf(">")));h=S.colspan?+S.colspan:1,((u=+S.rowspan)>1||h>1)&&p.push({s:{r:c,c:f},e:{r:c+(u||1)-1,c:f+h-1}});var E=S.t||S["data-t"]||"";if(w.length)if(w=Ut(w),d.s.r>c&&(d.s.r=c),d.e.r<c&&(d.e.r=c),d.s.c>f&&(d.s.c=f),d.e.c<f&&(d.e.c=f),w.length){var x={t:"s",v:w};r.raw||!w.trim().length||"s"==E||("TRUE"===w?x={t:"b",v:!0}:"FALSE"===w?x={t:"b",v:!1}:isNaN(qe(w))?isNaN(Je(w).getDate())||(x={t:"d",v:Ge(w)},r.cellDates||(x={t:"n",v:Me(x.v)}),x.z=r.dateNF||W[14]):x={t:"n",v:qe(w)}),r.dense?(n[c]||(n[c]=[]),n[c][f]=x):n[Jr({r:c,c:f})]=x,f+=h}else f+=h;else f+=h}}}}else{if(++c,r.sheetRows&&r.sheetRows<=c){--c;break}f=0}}return n["!ref"]=en(d),p.length&&(n["!merges"]=p),n}function bc(e,t,r,n){for(var a=e["!merges"]||[],s=[],i=t.s.c;i<=t.e.c;++i){for(var o=0,l=0,c=0;c<a.length;++c)if(!(a[c].s.r>r||a[c].s.c>i||a[c].e.r<r||a[c].e.c<i)){if(a[c].s.r<r||a[c].s.c<i){o=-1;break}o=a[c].e.r-a[c].s.r+1,l=a[c].e.c-a[c].s.c+1;break}if(!(o<0)){var f=Jr({r,c:i}),u=n.dense?(e[r]||[])[i]:e[f],h=u&&null!=u.v&&(u.h||At(u.w||(rn(u),u.w)||""))||"",d={};o>1&&(d.rowspan=o),l>1&&(d.colspan=l),n.editable?h='<span contenteditable="true">'+h+"</span>":u&&(d["data-t"]=u&&u.t||"z",null!=u.v&&(d["data-v"]=u.v),null!=u.z&&(d["data-z"]=u.z),u.l&&"#"!=(u.l.Target||"#").charAt(0)&&(h='<a href="'+u.l.Target+'">'+h+"</a>")),d.id=(n.id||"sjs")+"-"+f,s.push(Gt("td",h,d))}}return"<tr>"+s.join("")+"</tr>"}var wc='<html><head><meta charset="utf-8"/><title>SheetJS Table Export</title></head><body>',yc="</body></html>";function kc(e,t,r){return[].join("")+"<table"+(r&&r.id?' id="'+r.id+'"':"")+">"}function Tc(e,t){var r=t||{},n=null!=r.header?r.header:wc,a=null!=r.footer?r.footer:yc,s=[n],i=Zr(e["!ref"]);r.dense=Array.isArray(e),s.push(kc(0,0,r));for(var o=i.s.r;o<=i.e.r;++o)s.push(bc(e,i,o,r));return s.push("</table>"+a),s.join("")}function Sc(e,t,r){var n=r||{},a=0,s=0;if(null!=n.origin)if("number"==typeof n.origin)a=n.origin;else{var i="string"==typeof n.origin?Qr(n.origin):n.origin;a=i.r,s=i.c}var o=t.getElementsByTagName("tr"),l=Math.min(n.sheetRows||1e7,o.length),c={s:{r:0,c:0},e:{r:a,c:s}};if(e["!ref"]){var f=Zr(e["!ref"]);c.s.r=Math.min(c.s.r,f.s.r),c.s.c=Math.min(c.s.c,f.s.c),c.e.r=Math.max(c.e.r,f.e.r),c.e.c=Math.max(c.e.c,f.e.c),-1==a&&(c.e.r=a=f.e.r+1)}var u=[],h=0,d=e["!rows"]||(e["!rows"]=[]),p=0,m=0,g=0,v=0,b=0,w=0;for(e["!cols"]||(e["!cols"]=[]);p<o.length&&m<l;++p){var y=o[p];if(xc(y)){if(n.display)continue;d[m]={hidden:!0}}var k=y.children;for(g=v=0;g<k.length;++g){var T=k[g];if(!n.display||!xc(T)){var S=T.hasAttribute("data-v")?T.getAttribute("data-v"):T.hasAttribute("v")?T.getAttribute("v"):Ut(T.innerHTML),E=T.getAttribute("data-z")||T.getAttribute("z");for(h=0;h<u.length;++h){var x=u[h];x.s.c==v+s&&x.s.r<m+a&&m+a<=x.e.r&&(v=x.e.c+1-s,h=-1)}w=+T.getAttribute("colspan")||1,((b=+T.getAttribute("rowspan")||1)>1||w>1)&&u.push({s:{r:m+a,c:v+s},e:{r:m+a+(b||1)-1,c:v+s+(w||1)-1}});var _={t:"s",v:S},C=T.getAttribute("data-t")||T.getAttribute("t")||"";null!=S&&(0==S.length?_.t=C||"z":n.raw||0==S.trim().length||"s"==C||("TRUE"===S?_={t:"b",v:!0}:"FALSE"===S?_={t:"b",v:!1}:isNaN(qe(S))?isNaN(Je(S).getDate())||(_={t:"d",v:Ge(S)},n.cellDates||(_={t:"n",v:Me(_.v)}),_.z=n.dateNF||W[14]):_={t:"n",v:qe(S)})),void 0===_.z&&null!=E&&(_.z=E);var A="",O=T.getElementsByTagName("A");if(O&&O.length)for(var R=0;R<O.length&&(!O[R].hasAttribute("href")||"#"==(A=O[R].getAttribute("href")).charAt(0));++R);A&&"#"!=A.charAt(0)&&(_.l={Target:A}),n.dense?(e[m+a]||(e[m+a]=[]),e[m+a][v+s]=_):e[Jr({c:v+s,r:m+a})]=_,c.e.c<v+s&&(c.e.c=v+s),v+=w}}++m}return u.length&&(e["!merges"]=(e["!merges"]||[]).concat(u)),c.e.r=Math.max(c.e.r,m-1+a),e["!ref"]=en(c),m>=l&&(e["!fullref"]=en((c.e.r=o.length-p+m-1+a,c))),e}function Ec(e,t){return Sc((t||{}).dense?[]:{},e,t)}function xc(e){var t="",r=function(e){return e.ownerDocument.defaultView&&"function"==typeof e.ownerDocument.defaultView.getComputedStyle?e.ownerDocument.defaultView.getComputedStyle:"function"==typeof getComputedStyle?getComputedStyle:null}(e);return r&&(t=r(e).getPropertyValue("display")),t||(t=e.style&&e.style.display),"none"===t}var _c={day:["d","dd"],month:["m","mm"],year:["y","yy"],hours:["h","hh"],minutes:["m","mm"],seconds:["s","ss"],"am-pm":["A/P","AM/PM"],"day-of-week":["ddd","dddd"],era:["e","ee"],quarter:["\\Qm",'m\\"th quarter"']};function Cc(e,t){var r,n,a,s,i,o,l,c=t||{},f=Yt(e),u=[],h={name:""},d="",p=0,m={},g=[],v=c.dense?[]:{},b={value:""},w="",y=0,k=[],T=-1,S=-1,E={s:{r:1e6,c:1e7},e:{r:0,c:0}},x=0,_={},C=[],A={},O=[],R=1,N=1,I=[],P={Names:[]},D={},F=["",""],L=[],M={},U="",B=0,z=!1,W=!1,H=0;for(Kt.lastIndex=0,f=f.replace(/<!--([\s\S]*?)-->/gm,"").replace(/<!DOCTYPE[^\[]*\[[^\]]*\]>/gm,"");i=Kt.exec(f);)switch(i[3]=i[3].replace(/_.*$/,"")){case"table":case"工作表":"/"===i[1]?(E.e.c>=E.s.c&&E.e.r>=E.s.r?v["!ref"]=en(E):v["!ref"]="A1:A1",c.sheetRows>0&&c.sheetRows<=E.e.r&&(v["!fullref"]=v["!ref"],E.e.r=c.sheetRows-1,v["!ref"]=en(E)),C.length&&(v["!merges"]=C),O.length&&(v["!rows"]=O),a.name=a["名称"]||a.name,"undefined"!=typeof JSON&&JSON.stringify(a),g.push(a.name),m[a.name]=v,W=!1):"/"!==i[0].charAt(i[0].length-2)&&(a=bt(i[0],!1),T=S=-1,E.s.r=E.s.c=1e7,E.e.r=E.e.c=0,v=c.dense?[]:{},C=[],O=[],W=!0);break;case"table-row-group":"/"===i[1]?--x:++x;break;case"table-row":case"行":if("/"===i[1]){T+=R,R=1;break}if((s=bt(i[0],!1))["行号"]?T=s["行号"]-1:-1==T&&(T=0),(R=+s["number-rows-repeated"]||1)<10)for(H=0;H<R;++H)x>0&&(O[T+H]={level:x});S=-1;break;case"covered-table-cell":"/"!==i[1]&&++S,c.sheetStubs&&(c.dense?(v[T]||(v[T]=[]),v[T][S]={t:"z"}):v[Jr({r:T,c:S})]={t:"z"}),w="",k=[];break;case"table-cell":case"数据":if("/"===i[0].charAt(i[0].length-2))++S,b=bt(i[0],!1),N=parseInt(b["number-columns-repeated"]||"1",10),o={t:"z",v:null},b.formula&&0!=c.cellFormula&&(o.f=Bo(Tt(b.formula))),"string"==(b["数据类型"]||b["value-type"])&&(o.t="s",o.v=Tt(b["string-value"]||""),c.dense?(v[T]||(v[T]=[]),v[T][S]=o):v[Jr({r:T,c:S})]=o),S+=N-1;else if("/"!==i[1]){w="",y=0,k=[],N=1;var j=R?T+R-1:T;if(++S>E.e.c&&(E.e.c=S),S<E.s.c&&(E.s.c=S),T<E.s.r&&(E.s.r=T),j>E.e.r&&(E.e.r=j),L=[],M={},o={t:(b=bt(i[0],!1))["数据类型"]||b["value-type"],v:null},c.cellFormula)if(b.formula&&(b.formula=Tt(b.formula)),b["number-matrix-columns-spanned"]&&b["number-matrix-rows-spanned"]&&(A={s:{r:T,c:S},e:{r:T+(parseInt(b["number-matrix-rows-spanned"],10)||0)-1,c:S+(parseInt(b["number-matrix-columns-spanned"],10)||0)-1}},o.F=en(A),I.push([A,o.F])),b.formula)o.f=Bo(b.formula);else for(H=0;H<I.length;++H)T>=I[H][0].s.r&&T<=I[H][0].e.r&&S>=I[H][0].s.c&&S<=I[H][0].e.c&&(o.F=I[H][1]);switch((b["number-columns-spanned"]||b["number-rows-spanned"])&&(A={s:{r:T,c:S},e:{r:T+(parseInt(b["number-rows-spanned"],10)||0)-1,c:S+(parseInt(b["number-columns-spanned"],10)||0)-1}},C.push(A)),b["number-columns-repeated"]&&(N=parseInt(b["number-columns-repeated"],10)),o.t){case"boolean":o.t="b",o.v=Rt(b["boolean-value"]);break;case"float":case"percentage":case"currency":o.t="n",o.v=parseFloat(b.value);break;case"date":o.t="d",o.v=Ge(b["date-value"]),c.cellDates||(o.t="n",o.v=Me(o.v)),o.z="m/d/yy";break;case"time":o.t="n",o.v=He(b["time-value"])/86400,c.cellDates&&(o.t="d",o.v=We(o.v)),o.z="HH:MM:SS";break;case"number":o.t="n",o.v=parseFloat(b["数据数值"]);break;default:if("string"!==o.t&&"text"!==o.t&&o.t)throw new Error("Unsupported value type "+o.t);o.t="s",null!=b["string-value"]&&(w=Tt(b["string-value"]),k=[])}}else{if(z=!1,"s"===o.t&&(o.v=w||"",k.length&&(o.R=k),z=0==y),D.Target&&(o.l=D),L.length>0&&(o.c=L,L=[]),w&&!1!==c.cellText&&(o.w=w),z&&(o.t="z",delete o.v),(!z||c.sheetStubs)&&!(c.sheetRows&&c.sheetRows<=T))for(var V=0;V<R;++V){if(N=parseInt(b["number-columns-repeated"]||"1",10),c.dense)for(v[T+V]||(v[T+V]=[]),v[T+V][S]=0==V?o:Ye(o);--N>0;)v[T+V][S+N]=Ye(o);else for(v[Jr({r:T+V,c:S})]=o;--N>0;)v[Jr({r:T+V,c:S+N})]=Ye(o);E.e.c<=S&&(E.e.c=S)}S+=(N=parseInt(b["number-columns-repeated"]||"1",10))-1,N=0,o={},w="",k=[]}D={};break;case"document":case"document-content":case"电子表格文档":case"spreadsheet":case"主体":case"scripts":case"styles":case"font-face-decls":case"master-styles":if("/"===i[1]){if((r=u.pop())[0]!==i[3])throw"Bad state: "+r}else"/"!==i[0].charAt(i[0].length-2)&&u.push([i[3],!0]);break;case"annotation":if("/"===i[1]){if((r=u.pop())[0]!==i[3])throw"Bad state: "+r;M.t=w,k.length&&(M.R=k),M.a=U,L.push(M)}else"/"!==i[0].charAt(i[0].length-2)&&u.push([i[3],!1]);U="",B=0,w="",y=0,k=[];break;case"creator":"/"===i[1]?U=f.slice(B,i.index):B=i.index+i[0].length;break;case"meta":case"元数据":case"settings":case"config-item-set":case"config-item-map-indexed":case"config-item-map-entry":case"config-item-map-named":case"shapes":case"frame":case"text-box":case"image":case"data-pilot-tables":case"list-style":case"form":case"dde-links":case"event-listeners":case"chart":if("/"===i[1]){if((r=u.pop())[0]!==i[3])throw"Bad state: "+r}else"/"!==i[0].charAt(i[0].length-2)&&u.push([i[3],!1]);w="",y=0,k=[];break;case"scientific-number":case"currency-symbol":case"currency-style":case"script":case"libraries":case"automatic-styles":case"default-style":case"page-layout":case"style":case"map":case"font-face":case"paragraph-properties":case"table-properties":case"table-column-properties":case"table-row-properties":case"table-cell-properties":case"fraction":case"boolean-style":case"boolean":case"text-style":case"text-content":case"text-properties":case"embedded-text":case"body":case"电子表格":case"forms":case"table-column":case"table-header-rows":case"table-rows":case"table-column-group":case"table-header-columns":case"table-columns":case"null-date":case"graphic-properties":case"calculation-settings":case"named-expressions":case"label-range":case"label-ranges":case"named-expression":case"sort":case"sort-by":case"sort-groups":case"tab":case"line-break":case"span":case"s":case"date":case"object":case"title":case"标题":case"desc":case"binary-data":case"table-source":case"scenario":case"iteration":case"content-validations":case"content-validation":case"help-message":case"error-message":case"database-ranges":case"filter":case"filter-and":case"filter-or":case"filter-condition":case"list-level-style-bullet":case"list-level-style-number":case"list-level-properties":case"sender-firstname":case"sender-lastname":case"sender-initials":case"sender-title":case"sender-position":case"sender-email":case"sender-phone-private":case"sender-fax":case"sender-company":case"sender-phone-work":case"sender-street":case"sender-city":case"sender-postal-code":case"sender-country":case"sender-state-or-province":case"author-name":case"author-initials":case"chapter":case"file-name":case"template-name":case"sheet-name":case"event-listener":case"initial-creator":case"creation-date":case"print-date":case"generator":case"document-statistic":case"user-defined":case"editing-duration":case"editing-cycles":case"config-item":case"page-number":case"page-count":case"time":case"cell-range-source":case"detective":case"operation":case"highlighted-range":case"data-pilot-table":case"source-cell-range":case"source-service":case"data-pilot-field":case"data-pilot-level":case"data-pilot-subtotals":case"data-pilot-subtotal":case"data-pilot-members":case"data-pilot-member":case"data-pilot-display-info":case"data-pilot-sort-info":case"data-pilot-layout-info":case"data-pilot-field-reference":case"data-pilot-groups":case"data-pilot-group":case"data-pilot-group-member":case"rect":case"dde-connection-decls":case"dde-connection-decl":case"dde-link":case"dde-source":case"properties":case"property":case"table-protection":case"data-pilot-grand-total":case"office-document-common-attrs":break;case"number-style":case"percentage-style":case"date-style":case"time-style":if("/"===i[1]){if(_[h.name]=d,(r=u.pop())[0]!==i[3])throw"Bad state: "+r}else"/"!==i[0].charAt(i[0].length-2)&&(d="",h=bt(i[0],!1),u.push([i[3],!0]));break;case"number":case"day":case"month":case"year":case"era":case"day-of-week":case"week-of-year":case"quarter":case"hours":case"minutes":case"seconds":case"am-pm":switch(u[u.length-1][0]){case"time-style":case"date-style":n=bt(i[0],!1),d+=_c[i[3]]["long"===n.style?1:0]}break;case"text":if("/>"===i[0].slice(-2))break;if("/"===i[1])switch(u[u.length-1][0]){case"number-style":case"date-style":case"time-style":d+=f.slice(p,i.index)}else p=i.index+i[0].length;break;case"named-range":F=zo((n=bt(i[0],!1))["cell-range-address"]);var $={Name:n.name,Ref:F[0]+"!"+F[1]};W&&($.Sheet=g.length),P.Names.push($);break;case"p":case"文本串":if(["master-styles"].indexOf(u[u.length-1][0])>-1)break;if("/"!==i[1]||b&&b["string-value"])bt(i[0],!1),y=i.index+i[0].length;else{var G=(l=void 0,l=f.slice(y,i.index).replace(/[\t\r\n]/g," ").trim().replace(/ +/g," ").replace(/<text:s\/>/g," ").replace(/<text:s text:c="(\d+)"\/>/g,(function(e,t){return Array(parseInt(t,10)+1).join(" ")})).replace(/<text:tab[^>]*\/>/g,"\t").replace(/<text:line-break\/>/g,"\n"),[Tt(l.replace(/<[^>]*>/g,""))]);w=(w.length>0?w+"\n":"")+G[0]}break;case"database-range":if("/"===i[1])break;try{m[(F=zo(bt(i[0])["target-range-address"]))[0]]["!autofilter"]={ref:F[1]}}catch(e){}break;case"a":if("/"!==i[1]){if(!(D=bt(i[0],!1)).href)break;D.Target=Tt(D.href),delete D.href,"#"==D.Target.charAt(0)&&D.Target.indexOf(".")>-1?(F=zo(D.Target.slice(1)),D.Target="#"+F[0]+"!"+F[1]):D.Target.match(/^\.\.[\\\/]/)&&(D.Target=D.Target.slice(3))}break;default:switch(i[2]){case"dc:":case"calcext:":case"loext:":case"ooo:":case"chartooo:":case"draw:":case"style:":case"chart:":case"form:":case"uof:":case"表:":case"字:":break;default:if(c.WTF)throw new Error(i)}}var X={Sheets:m,SheetNames:g,Workbook:P};return c.bookSheets&&delete X.Sheets,X}function Ac(e,t){t=t||{},rt(e,"META-INF/manifest.xml")&&function(e,t){for(var r,n,a=Yt(e);r=Kt.exec(a);)switch(r[3]){case"manifest":break;case"file-entry":if("/"==(n=bt(r[0],!1)).path&&"application/vnd.oasis.opendocument.spreadsheet"!==n.type)throw new Error("This OpenDocument is not a spreadsheet");break;case"encryption-data":case"algorithm":case"start-key-generation":case"key-derivation":throw new Error("Unsupported ODS Encryption");default:if(t&&t.WTF)throw r}}(at(e,"META-INF/manifest.xml"),t);var r=st(e,"content.xml");if(!r)throw new Error("Missing content.xml in ODS / UOF file");var n=Cc(Ft(r),t);return rt(e,"meta.xml")&&(n.Props=ta(at(e,"meta.xml"))),n}function Oc(e,t){return Cc(e,t)}var Rc=function(){var e=["<office:master-styles>",'<style:master-page style:name="mp1" style:page-layout-name="mp1">',"<style:header/>",'<style:header-left style:display="false"/>',"<style:footer/>",'<style:footer-left style:display="false"/>',"</style:master-page>","</office:master-styles>"].join(""),t="<office:document-styles "+$t({"xmlns:office":"urn:oasis:names:tc:opendocument:xmlns:office:1.0","xmlns:table":"urn:oasis:names:tc:opendocument:xmlns:table:1.0","xmlns:style":"urn:oasis:names:tc:opendocument:xmlns:style:1.0","xmlns:text":"urn:oasis:names:tc:opendocument:xmlns:text:1.0","xmlns:draw":"urn:oasis:names:tc:opendocument:xmlns:drawing:1.0","xmlns:fo":"urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0","xmlns:xlink":"http://www.w3.org/1999/xlink","xmlns:dc":"http://purl.org/dc/elements/1.1/","xmlns:number":"urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0","xmlns:svg":"urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0","xmlns:of":"urn:oasis:names:tc:opendocument:xmlns:of:1.2","office:version":"1.2"})+">"+e+"</office:document-styles>";return function(){return ht+t}}(),Nc=function(){var e="          <table:table-cell />\n",t=function(t,r,n){var a=[];a.push('      <table:table table:name="'+xt(r.SheetNames[n])+'" table:style-name="ta1">\n');var s=0,i=0,o=Zr(t["!ref"]||"A1"),l=t["!merges"]||[],c=0,f=Array.isArray(t);if(t["!cols"])for(i=0;i<=o.e.c;++i)a.push("        <table:table-column"+(t["!cols"][i]?' table:style-name="co'+t["!cols"][i].ods+'"':"")+"></table:table-column>\n");var u="",h=t["!rows"]||[];for(s=0;s<o.s.r;++s)u=h[s]?' table:style-name="ro'+h[s].ods+'"':"",a.push("        <table:table-row"+u+"></table:table-row>\n");for(;s<=o.e.r;++s){for(u=h[s]?' table:style-name="ro'+h[s].ods+'"':"",a.push("        <table:table-row"+u+">\n"),i=0;i<o.s.c;++i)a.push(e);for(;i<=o.e.c;++i){var d=!1,p={},m="";for(c=0;c!=l.length;++c)if(!(l[c].s.c>i||l[c].s.r>s||l[c].e.c<i||l[c].e.r<s)){l[c].s.c==i&&l[c].s.r==s||(d=!0),p["table:number-columns-spanned"]=l[c].e.c-l[c].s.c+1,p["table:number-rows-spanned"]=l[c].e.r-l[c].s.r+1;break}if(d)a.push("          <table:covered-table-cell/>\n");else{var g=Jr({r:s,c:i}),v=f?(t[s]||[])[i]:t[g];if(v&&v.f&&(p["table:formula"]=xt(("of:="+v.f.replace(qi,"$1[.$2$3$4$5]").replace(/\]:\[/g,":")).replace(/;/g,"|").replace(/,/g,";")),v.F&&v.F.slice(0,g.length)==g)){var b=Zr(v.F);p["table:number-matrix-columns-spanned"]=b.e.c-b.s.c+1,p["table:number-matrix-rows-spanned"]=b.e.r-b.s.r+1}if(v){switch(v.t){case"b":m=v.v?"TRUE":"FALSE",p["office:value-type"]="boolean",p["office:boolean-value"]=v.v?"true":"false";break;case"n":m=v.w||String(v.v||0),p["office:value-type"]="float",p["office:value"]=v.v||0;break;case"s":case"str":m=null==v.v?"":v.v,p["office:value-type"]="string";break;case"d":m=v.w||Ge(v.v).toISOString(),p["office:value-type"]="date",p["office:date-value"]=Ge(v.v).toISOString(),p["table:style-name"]="ce1";break;default:a.push(e);continue}var w=xt(m).replace(/  +/g,(function(e){return'<text:s text:c="'+e.length+'"/>'})).replace(/\t/g,"<text:tab/>").replace(/\n/g,"</text:p><text:p>").replace(/^ /,"<text:s/>").replace(/ $/,"<text:s/>");if(v.l&&v.l.Target){var y=v.l.Target;"#"==(y="#"==y.charAt(0)?"#"+y.slice(1).replace(/\./,"!"):y).charAt(0)||y.match(/^\w+:/)||(y="../"+y),w=Gt("text:a",w,{"xlink:href":y.replace(/&/g,"&amp;")})}a.push("          "+Gt("table:table-cell",Gt("text:p",w,{}),p)+"\n")}else a.push(e)}}a.push("        </table:table-row>\n")}return a.push("      </table:table>\n"),a.join("")};return function(e,r){var n=[ht],a=$t({"xmlns:office":"urn:oasis:names:tc:opendocument:xmlns:office:1.0","xmlns:table":"urn:oasis:names:tc:opendocument:xmlns:table:1.0","xmlns:style":"urn:oasis:names:tc:opendocument:xmlns:style:1.0","xmlns:text":"urn:oasis:names:tc:opendocument:xmlns:text:1.0","xmlns:draw":"urn:oasis:names:tc:opendocument:xmlns:drawing:1.0","xmlns:fo":"urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0","xmlns:xlink":"http://www.w3.org/1999/xlink","xmlns:dc":"http://purl.org/dc/elements/1.1/","xmlns:meta":"urn:oasis:names:tc:opendocument:xmlns:meta:1.0","xmlns:number":"urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0","xmlns:presentation":"urn:oasis:names:tc:opendocument:xmlns:presentation:1.0","xmlns:svg":"urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0","xmlns:chart":"urn:oasis:names:tc:opendocument:xmlns:chart:1.0","xmlns:dr3d":"urn:oasis:names:tc:opendocument:xmlns:dr3d:1.0","xmlns:math":"http://www.w3.org/1998/Math/MathML","xmlns:form":"urn:oasis:names:tc:opendocument:xmlns:form:1.0","xmlns:script":"urn:oasis:names:tc:opendocument:xmlns:script:1.0","xmlns:ooo":"http://openoffice.org/2004/office","xmlns:ooow":"http://openoffice.org/2004/writer","xmlns:oooc":"http://openoffice.org/2004/calc","xmlns:dom":"http://www.w3.org/2001/xml-events","xmlns:xforms":"http://www.w3.org/2002/xforms","xmlns:xsd":"http://www.w3.org/2001/XMLSchema","xmlns:xsi":"http://www.w3.org/2001/XMLSchema-instance","xmlns:sheet":"urn:oasis:names:tc:opendocument:sh33tjs:1.0","xmlns:rpt":"http://openoffice.org/2005/report","xmlns:of":"urn:oasis:names:tc:opendocument:xmlns:of:1.2","xmlns:xhtml":"http://www.w3.org/1999/xhtml","xmlns:grddl":"http://www.w3.org/2003/g/data-view#","xmlns:tableooo":"http://openoffice.org/2009/table","xmlns:drawooo":"http://openoffice.org/2010/draw","xmlns:calcext":"urn:org:documentfoundation:names:experimental:calc:xmlns:calcext:1.0","xmlns:loext":"urn:org:documentfoundation:names:experimental:office:xmlns:loext:1.0","xmlns:field":"urn:openoffice:names:experimental:ooo-ms-interop:xmlns:field:1.0","xmlns:formx":"urn:openoffice:names:experimental:ooxml-odf-interop:xmlns:form:1.0","xmlns:css3t":"http://www.w3.org/TR/css3-text/","office:version":"1.2"}),s=$t({"xmlns:config":"urn:oasis:names:tc:opendocument:xmlns:config:1.0","office:mimetype":"application/vnd.oasis.opendocument.spreadsheet"});"fods"==r.bookType?(n.push("<office:document"+a+s+">\n"),n.push(Jn().replace(/office:document-meta/g,"office:meta"))):n.push("<office:document-content"+a+">\n"),function(e,t){e.push(" <office:automatic-styles>\n"),e.push('  <number:date-style style:name="N37" number:automatic-order="true">\n'),e.push('   <number:month number:style="long"/>\n'),e.push("   <number:text>/</number:text>\n"),e.push('   <number:day number:style="long"/>\n'),e.push("   <number:text>/</number:text>\n"),e.push("   <number:year/>\n"),e.push("  </number:date-style>\n");var r=0;t.SheetNames.map((function(e){return t.Sheets[e]})).forEach((function(t){if(t&&t["!cols"])for(var n=0;n<t["!cols"].length;++n)if(t["!cols"][n]){var a=t["!cols"][n];if(null==a.width&&null==a.wpx&&null==a.wch)continue;ui(a),a.ods=r;var s=t["!cols"][n].wpx+"px";e.push('  <style:style style:name="co'+r+'" style:family="table-column">\n'),e.push('   <style:table-column-properties fo:break-before="auto" style:column-width="'+s+'"/>\n'),e.push("  </style:style>\n"),++r}}));var n=0;t.SheetNames.map((function(e){return t.Sheets[e]})).forEach((function(t){if(t&&t["!rows"])for(var r=0;r<t["!rows"].length;++r)if(t["!rows"][r]){t["!rows"][r].ods=n;var a=t["!rows"][r].hpx+"px";e.push('  <style:style style:name="ro'+n+'" style:family="table-row">\n'),e.push('   <style:table-row-properties fo:break-before="auto" style:row-height="'+a+'"/>\n'),e.push("  </style:style>\n"),++n}})),e.push('  <style:style style:name="ta1" style:family="table" style:master-page-name="mp1">\n'),e.push('   <style:table-properties table:display="true" style:writing-mode="lr-tb"/>\n'),e.push("  </style:style>\n"),e.push('  <style:style style:name="ce1" style:family="table-cell" style:parent-style-name="Default" style:data-style-name="N37"/>\n'),e.push(" </office:automatic-styles>\n")}(n,e),n.push("  <office:body>\n"),n.push("    <office:spreadsheet>\n");for(var i=0;i!=e.SheetNames.length;++i)n.push(t(e.Sheets[e.SheetNames[i]],e,i));return n.push("    </office:spreadsheet>\n"),n.push("  </office:body>\n"),"fods"==r.bookType?n.push("</office:document>"):n.push("</office:document-content>"),n.join("")}}();function Ic(e,t){if("fods"==t.bookType)return Nc(e,t);var r=ct(),n="",a=[],s=[];return lt(r,n="mimetype","application/vnd.oasis.opendocument.spreadsheet"),lt(r,n="content.xml",Nc(e,t)),a.push([n,"text/xml"]),s.push([n,"ContentFile"]),lt(r,n="styles.xml",Rc(e,t)),a.push([n,"text/xml"]),s.push([n,"StylesFile"]),lt(r,n="meta.xml",ht+Jn()),a.push([n,"text/xml"]),s.push([n,"MetadataFile"]),lt(r,n="manifest.rdf",function(e){var t=[ht];t.push('<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">\n');for(var r=0;r!=e.length;++r)t.push(Qn(e[r][0],e[r][1])),t.push(("",['  <rdf:Description rdf:about="">\n','    <ns0:hasPart xmlns:ns0="http://docs.oasis-open.org/ns/office/1.2/meta/pkg#" rdf:resource="'+e[r][0]+'"/>\n',"  </rdf:Description>\n"].join("")));return t.push(Qn("","Document","pkg")),t.push("</rdf:RDF>"),t.join("")}(s)),a.push([n,"application/rdf+xml"]),lt(r,n="META-INF/manifest.xml",function(e){var t=[ht];t.push('<manifest:manifest xmlns:manifest="urn:oasis:names:tc:opendocument:xmlns:manifest:1.0" manifest:version="1.2">\n'),t.push('  <manifest:file-entry manifest:full-path="/" manifest:version="1.2" manifest:media-type="application/vnd.oasis.opendocument.spreadsheet"/>\n');for(var r=0;r<e.length;++r)t.push('  <manifest:file-entry manifest:full-path="'+e[r][0]+'" manifest:media-type="'+e[r][1]+'"/>\n');return t.push("</manifest:manifest>"),t.join("")}(a)),r}function Pc(e){return new DataView(e.buffer,e.byteOffset,e.byteLength)}function Dc(e){return"undefined"!=typeof TextDecoder?(new TextDecoder).decode(e):Ft(C(e))}function Fc(e){return"undefined"!=typeof TextEncoder?(new TextEncoder).encode(e):x(Lt(e))}function Lc(e){var t=e.reduce((function(e,t){return e+t.length}),0),r=new Uint8Array(t),n=0;return e.forEach((function(e){r.set(e,n),n+=e.length})),r}function Mc(e){return 16843009*((e=(858993459&(e-=e>>1&1431655765))+(e>>2&858993459))+(e>>4)&252645135)>>>24}function Uc(e,t){var r=t?t[0]:0,n=127&e[r];e:if(e[r++]>=128){if(n|=(127&e[r])<<7,e[r++]<128)break e;if(n|=(127&e[r])<<14,e[r++]<128)break e;if(n|=(127&e[r])<<21,e[r++]<128)break e;if(n+=(127&e[r])*Math.pow(2,28),++r,e[r++]<128)break e;if(n+=(127&e[r])*Math.pow(2,35),++r,e[r++]<128)break e;if(n+=(127&e[r])*Math.pow(2,42),++r,e[r++]<128)break e}return t&&(t[0]=r),n}function Bc(e){var t=new Uint8Array(7);t[0]=127&e;var r=1;e:if(e>127){if(t[r-1]|=128,t[r]=e>>7&127,++r,e<=16383)break e;if(t[r-1]|=128,t[r]=e>>14&127,++r,e<=2097151)break e;if(t[r-1]|=128,t[r]=e>>21&127,++r,e<=268435455)break e;if(t[r-1]|=128,t[r]=e/256>>>21&127,++r,e<=34359738367)break e;if(t[r-1]|=128,t[r]=e/65536>>>21&127,++r,e<=4398046511103)break e;t[r-1]|=128,t[r]=e/16777216>>>21&127,++r}return t.slice(0,r)}function zc(e){var t=0,r=127&e[t];e:if(e[t++]>=128){if(r|=(127&e[t])<<7,e[t++]<128)break e;if(r|=(127&e[t])<<14,e[t++]<128)break e;if(r|=(127&e[t])<<21,e[t++]<128)break e;r|=(127&e[t])<<28}return r}function Wc(e){for(var t=[],r=[0];r[0]<e.length;){var n,a=r[0],s=Uc(e,r),i=7&s,o=0;if(0==(s=Math.floor(s/8)))break;switch(i){case 0:for(var l=r[0];e[r[0]++]>=128;);n=e.slice(l,r[0]);break;case 5:o=4,n=e.slice(r[0],r[0]+o),r[0]+=o;break;case 1:o=8,n=e.slice(r[0],r[0]+o),r[0]+=o;break;case 2:o=Uc(e,r),n=e.slice(r[0],r[0]+o),r[0]+=o;break;default:throw new Error("PB Type ".concat(i," for Field ").concat(s," at offset ").concat(a))}var c={data:n,type:i};null==t[s]?t[s]=[c]:t[s].push(c)}return t}function Hc(e){var t=[];return e.forEach((function(e,r){e.forEach((function(e){e.data&&(t.push(Bc(8*r+e.type)),2==e.type&&t.push(Bc(e.data.length)),t.push(e.data))}))})),Lc(t)}function jc(e,t){return(null==e?void 0:e.map((function(e){return t(e.data)})))||[]}function Vc(e){for(var t,r=[],n=[0];n[0]<e.length;){var a=Uc(e,n),s=Wc(e.slice(n[0],n[0]+a));n[0]+=a;var i={id:zc(s[1][0].data),messages:[]};s[2].forEach((function(t){var r=Wc(t.data),a=zc(r[3][0].data);i.messages.push({meta:r,data:e.slice(n[0],n[0]+a)}),n[0]+=a})),(null==(t=s[3])?void 0:t[0])&&(i.merge=zc(s[3][0].data)>>>0>0),r.push(i)}return r}function $c(e){var t=[];return e.forEach((function(e){var r=[];r[1]=[{data:Bc(e.id),type:0}],r[2]=[],null!=e.merge&&(r[3]=[{data:Bc(+!!e.merge),type:0}]);var n=[];e.messages.forEach((function(e){n.push(e.data),e.meta[3]=[{type:0,data:Bc(e.data.length)}],r[2].push({data:Hc(e.meta),type:2})}));var a=Hc(r);t.push(Bc(a.length)),t.push(a),n.forEach((function(e){return t.push(e)}))})),Lc(t)}function Gc(e,t){if(0!=e)throw new Error("Unexpected Snappy chunk type ".concat(e));for(var r=[0],n=Uc(t,r),a=[];r[0]<t.length;){var s=3&t[r[0]];if(0!=s){var i=0,o=0;if(1==s?(o=4+(t[r[0]]>>2&7),i=(224&t[r[0]++])<<3,i|=t[r[0]++]):(o=1+(t[r[0]++]>>2),2==s?(i=t[r[0]]|t[r[0]+1]<<8,r[0]+=2):(i=(t[r[0]]|t[r[0]+1]<<8|t[r[0]+2]<<16|t[r[0]+3]<<24)>>>0,r[0]+=4)),a=[Lc(a)],0==i)throw new Error("Invalid offset 0");if(i>a[0].length)throw new Error("Invalid offset beyond length");if(o>=i)for(a.push(a[0].slice(-i)),o-=i;o>=a[a.length-1].length;)a.push(a[a.length-1]),o-=a[a.length-1].length;a.push(a[0].slice(-i,-i+o))}else{var l=t[r[0]++]>>2;if(l<60)++l;else{var c=l-59;l=t[r[0]],c>1&&(l|=t[r[0]+1]<<8),c>2&&(l|=t[r[0]+2]<<16),c>3&&(l|=t[r[0]+3]<<24),l>>>=0,l++,r[0]+=c}a.push(t.slice(r[0],r[0]+l)),r[0]+=l}}var f=Lc(a);if(f.length!=n)throw new Error("Unexpected length: ".concat(f.length," != ").concat(n));return f}function Xc(e){for(var t=[],r=0;r<e.length;){var n=e[r++],a=e[r]|e[r+1]<<8|e[r+2]<<16;r+=3,t.push(Gc(n,e.slice(r,r+a))),r+=a}if(r!==e.length)throw new Error("data is not a valid framed stream!");return Lc(t)}function Yc(e){for(var t=[],r=0;r<e.length;){var n=Math.min(e.length-r,268435455),a=new Uint8Array(4);t.push(a);var s=Bc(n),i=s.length;t.push(s),n<=60?(i++,t.push(new Uint8Array([n-1<<2]))):n<=256?(i+=2,t.push(new Uint8Array([240,n-1&255]))):n<=65536?(i+=3,t.push(new Uint8Array([244,n-1&255,n-1>>8&255]))):n<=16777216?(i+=4,t.push(new Uint8Array([248,n-1&255,n-1>>8&255,n-1>>16&255]))):n<=4294967296&&(i+=5,t.push(new Uint8Array([252,n-1&255,n-1>>8&255,n-1>>16&255,n-1>>>24&255]))),t.push(e.slice(r,r+n)),i+=n,a[0]=0,a[1]=255&i,a[2]=i>>8&255,a[3]=i>>16&255,r+=n}return Lc(t)}function Kc(e,t){var r=new Uint8Array(32),n=Pc(r),a=12,s=0;switch(r[0]=5,e.t){case"n":r[1]=2,function(e,t,r){var n=Math.floor(0==r?0:Math.LOG10E*Math.log(Math.abs(r)))+6176-20,a=r/Math.pow(10,n-6176);e[t+15]|=n>>7,e[t+14]|=(127&n)<<1;for(var s=0;a>=1;++s,a/=256)e[t+s]=255&a;e[t+15]|=r>=0?0:128}(r,a,e.v),s|=1,a+=16;break;case"b":r[1]=6,n.setFloat64(a,e.v?1:0,!0),s|=2,a+=8;break;case"s":if(-1==t.indexOf(e.v))throw new Error("Value ".concat(e.v," missing from SST!"));r[1]=3,n.setUint32(a,t.indexOf(e.v),!0),s|=8,a+=4;break;default:throw"unsupported cell type "+e.t}return n.setUint32(8,s,!0),r.slice(0,a)}function qc(e,t){var r=new Uint8Array(32),n=Pc(r),a=12,s=0;switch(r[0]=3,e.t){case"n":r[2]=2,n.setFloat64(a,e.v,!0),s|=32,a+=8;break;case"b":r[2]=6,n.setFloat64(a,e.v?1:0,!0),s|=32,a+=8;break;case"s":if(-1==t.indexOf(e.v))throw new Error("Value ".concat(e.v," missing from SST!"));r[2]=3,n.setUint32(a,t.indexOf(e.v),!0),s|=16,a+=4;break;default:throw"unsupported cell type "+e.t}return n.setUint32(4,s,!0),r.slice(0,a)}function Qc(e,t,r){switch(e[0]){case 0:case 1:case 2:case 3:return function(e,t,r,n){var a,s=Pc(e),i=s.getUint32(4,!0),o=(n>1?12:8)+4*Mc(i&(n>1?3470:398)),l=-1,c=-1,f=NaN,u=new Date(2001,0,1);switch(512&i&&(l=s.getUint32(o,!0),o+=4),o+=4*Mc(i&(n>1?12288:4096)),16&i&&(c=s.getUint32(o,!0),o+=4),32&i&&(f=s.getFloat64(o,!0),o+=8),64&i&&(u.setTime(u.getTime()+1e3*s.getFloat64(o,!0)),o+=8),e[2]){case 0:break;case 2:a={t:"n",v:f};break;case 3:a={t:"s",v:t[c]};break;case 5:a={t:"d",v:u};break;case 6:a={t:"b",v:f>0};break;case 7:a={t:"n",v:f/86400};break;case 8:a={t:"e",v:0};break;case 9:if(l>-1)a={t:"s",v:r[l]};else if(c>-1)a={t:"s",v:t[c]};else{if(isNaN(f))throw new Error("Unsupported cell type ".concat(e.slice(0,4)));a={t:"n",v:f}}break;default:throw new Error("Unsupported cell type ".concat(e.slice(0,4)))}return a}(e,t,r,e[0]);case 5:return function(e,t,r){var n,a=Pc(e),s=a.getUint32(8,!0),i=12,o=-1,l=-1,c=NaN,f=NaN,u=new Date(2001,0,1);switch(1&s&&(c=function(e,t){for(var r=(127&e[t+15])<<7|e[t+14]>>1,n=1&e[t+14],a=t+13;a>=t;--a)n=256*n+e[a];return(128&e[t+15]?-n:n)*Math.pow(10,r-6176)}(e,i),i+=16),2&s&&(f=a.getFloat64(i,!0),i+=8),4&s&&(u.setTime(u.getTime()+1e3*a.getFloat64(i,!0)),i+=8),8&s&&(l=a.getUint32(i,!0),i+=4),16&s&&(o=a.getUint32(i,!0),i+=4),e[1]){case 0:break;case 2:case 10:n={t:"n",v:c};break;case 3:n={t:"s",v:t[l]};break;case 5:n={t:"d",v:u};break;case 6:n={t:"b",v:f>0};break;case 7:n={t:"n",v:f/86400};break;case 8:n={t:"e",v:0};break;case 9:if(!(o>-1))throw new Error("Unsupported cell type ".concat(e[1]," : ").concat(31&s," : ").concat(e.slice(0,4)));n={t:"s",v:r[o]};break;default:throw new Error("Unsupported cell type ".concat(e[1]," : ").concat(31&s," : ").concat(e.slice(0,4)))}return n}(e,t,r);default:throw new Error("Unsupported payload version ".concat(e[0]))}}function Jc(e){return Uc(Wc(e)[1][0].data)}function Zc(e,t){var r=Wc(t.data),n=zc(r[1][0].data),a=r[3],s=[];return(a||[]).forEach((function(t){var r=Wc(t.data),a=zc(r[1][0].data)>>>0;switch(n){case 1:s[a]=Dc(r[3][0].data);break;case 8:var i=Wc(e[Jc(r[9][0].data)][0].data),o=e[Jc(i[1][0].data)][0],l=zc(o.meta[1][0].data);if(2001!=l)throw new Error("2000 unexpected reference to ".concat(l));var c=Wc(o.data);s[a]=c[3].map((function(e){return Dc(e.data)})).join("")}})),s}function ef(e,t){var r={"!ref":"A1"},n=e[Jc(Wc(t.data)[2][0].data)],a=zc(n[0].meta[1][0].data);if(6001!=a)throw new Error("6000 unexpected reference to ".concat(a));return function(e,t,r){var n,a=Wc(t.data),s={s:{r:0,c:0},e:{r:0,c:0}};if(s.e.r=(zc(a[6][0].data)>>>0)-1,s.e.r<0)throw new Error("Invalid row varint ".concat(a[6][0].data));if(s.e.c=(zc(a[7][0].data)>>>0)-1,s.e.c<0)throw new Error("Invalid col varint ".concat(a[7][0].data));r["!ref"]=en(s);var i=Wc(a[4][0].data),o=Zc(e,e[Jc(i[4][0].data)][0]),l=(null==(n=i[17])?void 0:n[0])?Zc(e,e[Jc(i[17][0].data)][0]):[],c=Wc(i[3][0].data),f=0;c[1].forEach((function(t){var n=Wc(t.data),a=e[Jc(n[2][0].data)][0],s=zc(a.meta[1][0].data);if(6002!=s)throw new Error("6001 unexpected reference to ".concat(s));var i=function(e,t){var r,n=Wc(t.data),a=(null==(r=null==n?void 0:n[7])?void 0:r[0])?zc(n[7][0].data)>>>0>0?1:0:-1,s=jc(n[5],(function(e){return function(e,t){var r,n,a,s,i,o,l,c,f,u,h,d,p,m,g,v,b=Wc(e),w=zc(b[1][0].data)>>>0,y=zc(b[2][0].data)>>>0,k=(null==(n=null==(r=b[8])?void 0:r[0])?void 0:n.data)&&zc(b[8][0].data)>0||!1;if((null==(s=null==(a=b[7])?void 0:a[0])?void 0:s.data)&&0!=t)g=null==(o=null==(i=b[7])?void 0:i[0])?void 0:o.data,v=null==(c=null==(l=b[6])?void 0:l[0])?void 0:c.data;else{if(!(null==(u=null==(f=b[4])?void 0:f[0])?void 0:u.data)||1==t)throw"NUMBERS Tile missing ".concat(t," cell storage");g=null==(d=null==(h=b[4])?void 0:h[0])?void 0:d.data,v=null==(m=null==(p=b[3])?void 0:p[0])?void 0:m.data}for(var T=k?4:1,S=Pc(g),E=[],x=0;x<g.length/2;++x){var _=S.getUint16(2*x,!0);_<65535&&E.push([x,_])}if(E.length!=y)throw"Expected ".concat(y," cells, found ").concat(E.length);var C=[];for(x=0;x<E.length-1;++x)C[E[x][0]]=v.subarray(E[x][1]*T,E[x+1][1]*T);return E.length>=1&&(C[E[E.length-1][0]]=v.subarray(E[E.length-1][1]*T)),{R:w,cells:C}}(e,a)}));return{nrows:zc(n[4][0].data)>>>0,data:s.reduce((function(e,t){return e[t.R]||(e[t.R]=[]),t.cells.forEach((function(r,n){if(e[t.R][n])throw new Error("Duplicate cell r=".concat(t.R," c=").concat(n));e[t.R][n]=r})),e}),[])}}(0,a);i.data.forEach((function(e,t){e.forEach((function(e,n){var a=Jr({r:f+t,c:n}),s=Qc(e,o,l);s&&(r[a]=s)}))})),f+=i.nrows}))}(e,n[0],r),r}function tf(e){var t,r,n,a,s={},i=[];if(e.FullPaths.forEach((function(e){if(e.match(/\.iwpv2/))throw new Error("Unsupported password protection")})),e.FileIndex.forEach((function(e){if(e.name.match(/\.iwa$/)){var t,r;try{t=Xc(e.content)}catch(t){return console.log("?? "+e.content.length+" "+(t.message||t))}try{r=Vc(t)}catch(e){return console.log("## "+(e.message||e))}r.forEach((function(e){s[e.id]=e.messages,i.push(e.id)}))}})),!i.length)throw new Error("File has no messages");var o=(null==(a=null==(n=null==(r=null==(t=null==s?void 0:s[1])?void 0:t[0])?void 0:r.meta)?void 0:n[1])?void 0:a[0].data)&&1==zc(s[1][0].meta[1][0].data)&&s[1][0];if(o||i.forEach((function(e){s[e].forEach((function(e){if(1==zc(e.meta[1][0].data)>>>0){if(o)throw new Error("Document has multiple roots");o=e}}))})),!o)throw new Error("Cannot find Document root");return function(e,t){var r={SheetNames:[],Sheets:{}};if(jc(Wc(t.data)[1],Jc).forEach((function(t){e[t].forEach((function(t){if(2==zc(t.meta[1][0].data)){var n=function(e,t){var r,n=Wc(t.data),a={name:(null==(r=n[1])?void 0:r[0])?Dc(n[1][0].data):"",sheets:[]};return jc(n[2],Jc).forEach((function(t){e[t].forEach((function(t){6e3==zc(t.meta[1][0].data)&&a.sheets.push(ef(e,t))}))})),a}(e,t);n.sheets.forEach((function(e,t){Lf(r,e,0==t?n.name:n.name+"_"+t,!0)}))}}))})),0==r.SheetNames.length)throw new Error("Empty NUMBERS file");return r}(s,o)}function rf(e,t,r){var n,a,s,i;if(!(null==(n=e[6])?void 0:n[0])||!(null==(a=e[7])?void 0:a[0]))throw"Mutation only works on post-BNC storages!";if((null==(i=null==(s=e[8])?void 0:s[0])?void 0:i.data)&&zc(e[8][0].data)>0)throw"Math only works with normal offsets";for(var o=0,l=Pc(e[7][0].data),c=0,f=[],u=Pc(e[4][0].data),h=0,d=[],p=0;p<t.length;++p)if(null!=t[p]){var m,g;switch(l.setUint16(2*p,c,!0),u.setUint16(2*p,h,!0),typeof t[p]){case"string":m=Kc({t:"s",v:t[p]},r),g=qc({t:"s",v:t[p]},r);break;case"number":m=Kc({t:"n",v:t[p]},r),g=qc({t:"n",v:t[p]},r);break;case"boolean":m=Kc({t:"b",v:t[p]},r),g=qc({t:"b",v:t[p]},r);break;default:throw new Error("Unsupported value "+t[p])}f.push(m),c+=m.length,d.push(g),h+=g.length,++o}else l.setUint16(2*p,65535,!0),u.setUint16(2*p,65535);for(e[2][0].data=Bc(o);p<e[7][0].data.length/2;++p)l.setUint16(2*p,65535,!0),u.setUint16(2*p,65535,!0);return e[6][0].data=Lc(f),e[3][0].data=Lc(d),o}function nf(e){return function(t){for(var r=0;r!=e.length;++r){var n=e[r];void 0===t[n[0]]&&(t[n[0]]=n[1]),"n"===n[2]&&(t[n[0]]=Number(t[n[0]]))}}}function af(e){nf([["cellNF",!1],["cellHTML",!0],["cellFormula",!0],["cellStyles",!1],["cellText",!0],["cellDates",!1],["sheetStubs",!1],["sheetRows",0,"n"],["bookDeps",!1],["bookSheets",!1],["bookProps",!1],["bookFiles",!1],["bookVBA",!1],["password",""],["WTF",!1]])(e)}function sf(e){nf([["cellDates",!1],["bookSST",!1],["bookType","xlsx"],["compression",!1],["WTF",!1]])(e)}function of(e,t,r,n,a,s,i,o,l,c,f,u){try{s[n]=Yn(st(e,r,!0),t);var h,d=at(e,t);switch(o){case"sheet":h=Ll(d,t,a,l,s[n],c,f,u);break;case"chart":if(!(h=function(e,t,r,n,a,s,i,o){return".bin"===t.slice(-4)?function(e,t,r,n,a){if(!e)return e;n||(n={"!id":{}});var s={"!type":"chart","!drawel":null,"!rel":""},i=[],o=!1;return zr(e,(function(e,n,l){switch(l){case 550:s["!rel"]=e;break;case 651:a.Sheets[r]||(a.Sheets[r]={}),e.name&&(a.Sheets[r].CodeName=e.name);break;case 562:case 652:case 669:case 679:case 551:case 552:case 476:case 3072:break;case 35:o=!0;break;case 36:o=!1;break;case 37:i.push(l);break;case 38:i.pop();break;default:if(n.T>0)i.push(l);else if(n.T<0)i.pop();else if(!o||t.WTF)throw new Error("Unexpected record 0x"+l.toString(16))}}),t),n["!id"][s["!rel"]]&&(s["!drawel"]=n["!id"][s["!rel"]]),s}(e,n,r,a,s):function(e,t,r,n,a){if(!e)return e;n||(n={"!id":{}});var s,i={"!type":"chart","!drawel":null,"!rel":""},o=e.match(nl);return o&&il(o[0],0,a,r),(s=e.match(/drawing r:id="(.*?)"/))&&(i["!rel"]=s[1]),n["!id"][i["!rel"]]&&(i["!drawel"]=n["!id"][i["!rel"]]),i}(e,0,r,a,s)}(d,t,a,l,s[n],c))||!h["!drawel"])break;var p=ut(h["!drawel"].Target,t),m=Xn(p),g=function(e,t){if(!e)return"??";var r=(e.match(/<c:chart [^>]*r:id="([^"]*)"/)||["",""])[1];return t["!id"][r].Target}(st(e,p,!0),Yn(st(e,m,!0),p)),v=ut(g,p),b=Xn(v);h=function(e,t,r,n,a,s){var i=s||{"!type":"chart"};if(!e)return s;var o=0,l=0,c="A",f={s:{r:2e6,c:2e6},e:{r:0,c:0}};return(e.match(/<c:numCache>[\s\S]*?<\/c:numCache>/gm)||[]).forEach((function(e){var t=function(e){var t,r=[],n=e.match(/^<c:numCache>/);(e.match(/<c:pt idx="(\d*)">(.*?)<\/c:pt>/gm)||[]).forEach((function(e){var t=e.match(/<c:pt idx="(\d*?)"><c:v>(.*)<\/c:v><\/c:pt>/);t&&(r[+t[1]]=n?+t[2]:t[2])}));var a=Tt((e.match(/<c:formatCode>([\s\S]*?)<\/c:formatCode>/)||["","General"])[1]);return(e.match(/<c:f>(.*?)<\/c:f>/gm)||[]).forEach((function(e){t=e.replace(/<.*?>/g,"")})),[r,a,t]}(e);f.s.r=f.s.c=0,f.e.c=o,c=qr(o),t[0].forEach((function(e,r){i[c+Yr(r)]={t:"n",v:e,z:t[1]},l=r})),f.e.r<l&&(f.e.r=l),++o})),o>0&&(i["!ref"]=en(f)),i}(st(e,v,!0),0,0,Yn(st(e,b,!0),v),0,h);break;case"macro":y=t,s[n],y.slice(-4),h={"!type":"macro"};break;case"dialog":h=function(e,t,r,n,a,s,i,o){return t.slice(-4),{"!type":"dialog"}}(0,t,0,0,s[n]);break;default:throw new Error("Unrecognized sheet type "+o)}i[n]=h;var w=[];s&&s[n]&&Ie(s[n]).forEach((function(r){var a="";if(s[n][r].Type==Gn.CMNT){a=ut(s[n][r].Target,t);var i=function(e,t,r){return".bin"===t.slice(-4)?function(e,t){var r=[],n=[],a={},s=!1;return zr(e,(function(e,i,o){switch(o){case 632:n.push(e);break;case 635:a=e;break;case 637:a.t=e.t,a.h=e.h,a.r=e.r;break;case 636:if(a.author=n[a.iauthor],delete a.iauthor,t.sheetRows&&a.rfx&&t.sheetRows<=a.rfx.r)break;a.t||(a.t=""),delete a.rfx,r.push(a);break;case 3072:case 37:case 38:break;case 35:s=!0;break;case 36:s=!1;break;default:if(i.T);else if(!s||t.WTF)throw new Error("Unexpected record 0x"+o.toString(16))}})),r}(e,r):function(e,t){if(e.match(/<(?:\w+:)?comments *\/>/))return[];var r=[],n=[],a=e.match(/<(?:\w+:)?authors>([\s\S]*)<\/(?:\w+:)?authors>/);a&&a[1]&&a[1].split(/<\/\w*:?author>/).forEach((function(e){if(""!==e&&""!==e.trim()){var t=e.match(/<(?:\w+:)?author[^>]*>(.*)/);t&&r.push(t[1])}}));var s=e.match(/<(?:\w+:)?commentList>([\s\S]*)<\/(?:\w+:)?commentList>/);return s&&s[1]&&s[1].split(/<\/\w*:?comment>/).forEach((function(e){if(""!==e&&""!==e.trim()){var a=e.match(/<(?:\w+:)?comment[^>]*>/);if(a){var s=bt(a[0]),i={author:s.authorId&&r[s.authorId]||"sheetjsghost",ref:s.ref,guid:s.guid},o=Qr(s.ref);if(!(t.sheetRows&&t.sheetRows<=o.r)){var l=e.match(/<(?:\w+:)?text>([\s\S]*)<\/(?:\w+:)?text>/),c=!!l&&!!l[1]&&Bs(l[1])||{r:"",t:"",h:""};i.r=c.r,"<t></t>"==c.r&&(c.t=c.h=""),i.t=(c.t||"").replace(/\r\n/g,"\n").replace(/\r/g,"\n"),t.cellHTML&&(i.h=c.h),n.push(i)}}}})),n}(e,r)}(at(e,a,!0),a,l);if(!i||!i.length)return;ji(h,i,!1)}s[n][r].Type==Gn.TCMNT&&(a=ut(s[n][r].Target,t),w=w.concat(function(e,t){var r=[],n=!1,a={},s=0;return e.replace(mt,(function(i,o){var l=bt(i);switch(wt(l[0])){case"<?xml":case"<ThreadedComments":case"</ThreadedComments>":case"<extLst":case"<extLst>":case"</extLst>":case"<extLst/>":break;case"<threadedComment":a={author:l.personId,guid:l.id,ref:l.ref,T:1};break;case"</threadedComment>":null!=a.t&&r.push(a);break;case"<text>":case"<text":s=o+i.length;break;case"</text>":a.t=e.slice(s,o).replace(/\r\n/g,"\n").replace(/\r/g,"\n");break;case"<mentions":case"<mentions>":case"<ext":n=!0;break;case"</mentions>":case"</ext>":n=!1;break;default:if(!n&&t.WTF)throw new Error("unrecognized "+l[0]+" in threaded comments")}return i})),r}(at(e,a,!0),l)))})),w&&w.length&&ji(h,w,!0,l.people||[])}catch(e){if(l.WTF)throw e}var y}function lf(e){return"/"==e.charAt(0)?e.slice(1):e}function cf(e,t){if(Te(),af(t=t||{}),rt(e,"META-INF/manifest.xml"))return Ac(e,t);if(rt(e,"objectdata.xml"))return Ac(e,t);if(rt(e,"Index/Document.iwa")){if("undefined"==typeof Uint8Array)throw new Error("NUMBERS file parsing requires Uint8Array support");if(e.FileIndex)return tf(e);var r=Ce.utils.cfb_new();return ot(e).forEach((function(t){lt(r,t,it(e,t))})),tf(r)}if(!rt(e,"[Content_Types].xml")){if(rt(e,"index.xml.gz"))throw new Error("Unsupported NUMBERS 08 file");if(rt(e,"index.xml"))throw new Error("Unsupported NUMBERS 09 file");throw new Error("Unsupported ZIP file")}var n,a,s=ot(e),i=function(e){var t={workbooks:[],sheets:[],charts:[],dialogs:[],macros:[],rels:[],strs:[],comments:[],threadedcomments:[],links:[],coreprops:[],extprops:[],custprops:[],themes:[],styles:[],calcchains:[],vba:[],drawings:[],metadata:[],people:[],TODO:[],xmlns:""};if(!e||!e.match)return t;var r={};if((e.match(mt)||[]).forEach((function(e){var n=bt(e);switch(n[0].replace(gt,"<")){case"<?xml":break;case"<Types":t.xmlns=n["xmlns"+(n[0].match(/<(\w+):/)||["",""])[1]];break;case"<Default":r[n.Extension]=n.ContentType;break;case"<Override":void 0!==t[jn[n.ContentType]]&&t[jn[n.ContentType]].push(n.PartName)}})),t.xmlns!==qt)throw new Error("Unknown Namespace: "+t.xmlns);return t.calcchain=t.calcchains.length>0?t.calcchains[0]:"",t.sst=t.strs.length>0?t.strs[0]:"",t.style=t.styles.length>0?t.styles[0]:"",t.defaults=r,delete t.calcchains,t}(st(e,"[Content_Types].xml")),o=!1;if(0===i.workbooks.length&&at(e,a="xl/workbook.xml",!0)&&i.workbooks.push(a),0===i.workbooks.length){if(!at(e,a="xl/workbook.bin",!0))throw new Error("Could not find workbook");i.workbooks.push(a),o=!0}"bin"==i.workbooks[0].slice(-3)&&(o=!0);var l={},c={};if(!t.bookSheets&&!t.bookProps){if(Wo=[],i.sst)try{Wo=function(e,t,r){return".bin"===t.slice(-4)?function(e,t){var r=[],n=!1;return zr(e,(function(e,a,s){switch(s){case 159:r.Count=e[0],r.Unique=e[1];break;case 19:r.push(e);break;case 160:return!0;case 35:n=!0;break;case 36:n=!1;break;default:if(a.T,!n||t.WTF)throw new Error("Unexpected record 0x"+s.toString(16))}})),r}(e,r):function(e,t){var r=[],n="";if(!e)return r;var a=e.match(zs);if(a){n=a[2].replace(Ws,"").split(Hs);for(var s=0;s!=n.length;++s){var i=Bs(n[s].trim(),t);null!=i&&(r[r.length]=i)}a=bt(a[1]),r.Count=a.count,r.Unique=a.uniqueCount}return r}(e,r)}(at(e,lf(i.sst)),i.sst,t)}catch(e){if(t.WTF)throw e}t.cellStyles&&i.themes.length&&(l=function(e,t,r){return Li(e,r)}(st(e,i.themes[0].replace(/^\//,""),!0)||"",i.themes[0],t)),i.style&&(c=function(e,t,r,n){return".bin"===t.slice(-4)?function(e,t,r){var n={NumberFmt:[]};for(var a in W)n.NumberFmt[a]=W[a];n.CellXf=[],n.Fonts=[];var s=[],i=!1;return zr(e,(function(e,a,o){switch(o){case 44:n.NumberFmt[e[0]]=e[1],ye(e[1],e[0]);break;case 43:n.Fonts.push(e),null!=e.color.theme&&t&&t.themeElements&&t.themeElements.clrScheme&&(e.color.rgb=ai(t.themeElements.clrScheme[e.color.theme].rgb,e.color.tint||0));break;case 1025:case 45:case 46:case 48:case 507:case 572:case 475:case 1171:case 2102:case 1130:case 512:case 2095:case 3072:break;case 47:617==s[s.length-1]&&n.CellXf.push(e);break;case 35:i=!0;break;case 36:i=!1;break;case 37:s.push(o),i=!0;break;case 38:s.pop(),i=!1;break;default:if(a.T>0)s.push(o);else if(a.T<0)s.pop();else if(!i||r.WTF&&37!=s[s.length-1])throw new Error("Unexpected record 0x"+o.toString(16))}})),n}(e,r,n):vi(e,r,n)}(at(e,lf(i.style)),i.style,l,t))}i.links.map((function(r){try{return Yn(st(e,Xn(lf(r))),r),function(e,t,r,n){if(".bin"===r.slice(-4))return function(e,t,r,n){if(!e)return e;var a=n||{},s=!1;zr(e,(function(e,t,r){switch(r){case 359:case 363:case 364:case 366:case 367:case 368:case 369:case 370:case 371:case 472:case 577:case 578:case 579:case 580:case 581:case 582:case 583:case 584:case 585:case 586:case 587:break;case 35:s=!0;break;case 36:s=!1;break;default:if(t.T);else if(!s||a.WTF)throw new Error("Unexpected record 0x"+r.toString(16))}}),a)}(e,0,0,n)}(at(e,lf(r)),0,r,t)}catch(e){}}));var f=function(e,t,r){return".bin"===t.slice(-4)?function(e,t){var r={AppVersion:{},WBProps:{},WBView:[],Sheets:[],CalcPr:{},xmlns:""},n=[],a=!1;t||(t={}),t.biff=12;var s=[],i=[[]];return i.SheetNames=[],i.XTI=[],lc[16]={n:"BrtFRTArchID$",f:Dl},zr(e,(function(e,o,l){switch(l){case 156:i.SheetNames.push(e.name),r.Sheets.push(e);break;case 153:r.WBProps=e;break;case 39:null!=e.Sheet&&(t.SID=e.Sheet),e.Ref=Co(e.Ptg,0,null,i,t),delete t.SID,delete e.Ptg,s.push(e);break;case 1036:case 361:case 2071:case 158:case 143:case 664:case 353:case 3072:case 3073:case 534:case 677:case 157:case 610:case 2050:case 155:case 548:case 676:case 128:case 665:case 2128:case 2125:case 549:case 2053:case 596:case 2076:case 2075:case 2082:case 397:case 154:case 1117:case 553:case 2091:case 16:break;case 357:case 358:case 355:case 667:i[0].length?i.push([l,e]):i[0]=[l,e],i[i.length-1].XTI=[];break;case 362:0===i.length&&(i[0]=[],i[0].XTI=[]),i[i.length-1].XTI=i[i.length-1].XTI.concat(e),i.XTI=i.XTI.concat(e);break;case 35:case 37:n.push(l),a=!0;break;case 36:case 38:n.pop(),a=!1;break;default:if(o.T);else if(!a||t.WTF&&37!=n[n.length-1]&&35!=n[n.length-1])throw new Error("Unexpected record 0x"+l.toString(16))}}),t),Al(r),r.Names=s,r.supbooks=i,r}(e,r):function(e,t){if(!e)throw new Error("Could not find file");var r={AppVersion:{},WBProps:{},WBView:[],Sheets:[],CalcPr:{},Names:[],xmlns:""},n=!1,a="xmlns",s={},i=0;if(e.replace(mt,(function(o,l){var c=bt(o);switch(wt(c[0])){case"<?xml":case"</workbook>":case"<fileVersion/>":case"</fileVersion>":case"<fileSharing":case"<fileSharing/>":case"</workbookPr>":case"<workbookProtection":case"<workbookProtection/>":case"<bookViews":case"<bookViews>":case"</bookViews>":case"</workbookView>":case"<sheets":case"<sheets>":case"</sheets>":case"</sheet>":case"<functionGroups":case"<functionGroups/>":case"<functionGroup":case"<externalReferences":case"</externalReferences>":case"<externalReferences>":case"<externalReference":case"<definedNames/>":case"<definedName/>":case"</calcPr>":case"<oleSize":case"<customWorkbookViews>":case"</customWorkbookViews>":case"<customWorkbookViews":case"<customWorkbookView":case"</customWorkbookView>":case"<pivotCaches>":case"</pivotCaches>":case"<pivotCaches":case"<pivotCache":case"<smartTagPr":case"<smartTagPr/>":case"<smartTagTypes":case"<smartTagTypes>":case"</smartTagTypes>":case"<smartTagType":case"<webPublishing":case"<webPublishing/>":case"<fileRecoveryPr":case"<fileRecoveryPr/>":case"<webPublishObjects>":case"<webPublishObjects":case"</webPublishObjects>":case"<webPublishObject":case"<extLst":case"<extLst>":case"</extLst>":case"<extLst/>":case"<ArchID":case"<revisionPtr":break;case"<workbook":o.match(Il)&&(a="xmlns"+o.match(/<(\w+):/)[1]),r.xmlns=c[a];break;case"<fileVersion":delete c[0],r.AppVersion=c;break;case"<workbookPr":case"<workbookPr/>":Tl.forEach((function(e){if(null!=c[e[0]])switch(e[2]){case"bool":r.WBProps[e[0]]=Rt(c[e[0]]);break;case"int":r.WBProps[e[0]]=parseInt(c[e[0]],10);break;default:r.WBProps[e[0]]=c[e[0]]}})),c.codeName&&(r.WBProps.CodeName=Ft(c.codeName));break;case"<workbookView":case"<workbookView/>":delete c[0],r.WBView.push(c);break;case"<sheet":switch(c.state){case"hidden":c.Hidden=1;break;case"veryHidden":c.Hidden=2;break;default:c.Hidden=0}delete c.state,c.name=Tt(Ft(c.name)),delete c[0],r.Sheets.push(c);break;case"<definedNames>":case"<definedNames":case"<ext":case"<AlternateContent":case"<AlternateContent>":n=!0;break;case"</definedNames>":case"</ext>":case"</AlternateContent>":n=!1;break;case"<definedName":(s={}).Name=Ft(c.name),c.comment&&(s.Comment=c.comment),c.localSheetId&&(s.Sheet=+c.localSheetId),Rt(c.hidden||"0")&&(s.Hidden=!0),i=l+o.length;break;case"</definedName>":s.Ref=Tt(Ft(e.slice(i,l))),r.Names.push(s);break;case"<calcPr":case"<calcPr/>":delete c[0],r.CalcPr=c;break;default:if(!n&&t.WTF)throw new Error("unrecognized "+c[0]+" in workbook")}return o})),-1===tr.indexOf(r.xmlns))throw new Error("Unknown Namespace: "+r.xmlns);return Al(r),r}(e,r)}(at(e,lf(i.workbooks[0])),i.workbooks[0],t),u={},h="";i.coreprops.length&&((h=at(e,lf(i.coreprops[0]),!0))&&(u=ta(h)),0!==i.extprops.length&&(h=at(e,lf(i.extprops[0]),!0))&&function(e,t,r){var n={};t||(t={}),e=Ft(e),aa.forEach((function(r){var a=(e.match(Mt(r[0]))||[])[1];switch(r[2]){case"string":a&&(t[r[1]]=Tt(a));break;case"bool":t[r[1]]="true"===a;break;case"raw":var s=e.match(new RegExp("<"+r[0]+"[^>]*>([\\s\\S]*?)</"+r[0]+">"));s&&s.length>0&&(n[r[1]]=s[1])}})),n.HeadingPairs&&n.TitlesOfParts&&ia(n.HeadingPairs,n.TitlesOfParts,t,r)}(h,u,t));var d={};t.bookSheets&&!t.bookProps||0!==i.custprops.length&&(h=st(e,lf(i.custprops[0]),!0))&&(d=function(e,t){var r={},n="",a=e.match(la);if(a)for(var s=0;s!=a.length;++s){var i=a[s],o=bt(i);switch(o[0]){case"<?xml":case"<Properties":break;case"<property":n=Tt(o.name);break;case"</property>":n=null;break;default:if(0===i.indexOf("<vt:")){var l=i.split(">"),c=l[0].slice(4),f=l[1];switch(c){case"lpstr":case"bstr":case"lpwstr":case"cy":case"error":r[n]=Tt(f);break;case"bool":r[n]=Rt(f);break;case"i1":case"i2":case"i4":case"i8":case"int":case"uint":r[n]=parseInt(f,10);break;case"r4":case"r8":case"decimal":r[n]=parseFloat(f);break;case"filetime":case"date":r[n]=Ge(f);break;default:if("/"==c.slice(-1))break;t.WTF&&"undefined"!=typeof console&&console.warn("Unexpected",i,c,l)}}else if("</"===i.slice(0,2));else if(t.WTF)throw new Error(i)}}return r}(h,t));var p={};if((t.bookSheets||t.bookProps)&&(f.Sheets?n=f.Sheets.map((function(e){return e.name})):u.Worksheets&&u.SheetNames.length>0&&(n=u.SheetNames),t.bookProps&&(p.Props=u,p.Custprops=d),t.bookSheets&&void 0!==n&&(p.SheetNames=n),t.bookSheets?p.SheetNames:t.bookProps))return p;n={};var m,g={};t.bookDeps&&i.calcchain&&(m=at(e,lf(i.calcchain)),g=".bin"===i.calcchain.slice(-4)?function(e,t,r){var n=[];return zr(e,(function(e,t,r){if(63===r)n.push(e);else if(!t.T)throw new Error("Unexpected record 0x"+r.toString(16))})),n}(m):function(e){var t=[];if(!e)return t;var r=1;return(e.match(mt)||[]).forEach((function(e){var n=bt(e);switch(n[0]){case"<?xml":case"<calcChain":case"<calcChain>":case"</calcChain>":break;case"<c":delete n[0],n.i?r=n.i:n.i=r,t.push(n)}})),t}(m));var v,b,w=0,y={},k=f.Sheets;u.Worksheets=k.length,u.SheetNames=[];for(var T=0;T!=k.length;++T)u.SheetNames[T]=k[T].name;var S=o?"bin":"xml",E=i.workbooks[0].lastIndexOf("/"),x=(i.workbooks[0].slice(0,E+1)+"_rels/"+i.workbooks[0].slice(E+1)+".rels").replace(/^\//,"");rt(e,x)||(x="xl/_rels/workbook."+S+".rels");var _=Yn(st(e,x,!0),x.replace(/_rels.*/,"s5s"));(i.metadata||[]).length>=1&&(t.xlmeta=function(e,t,r){return".bin"===t.slice(-4)?function(e,t,r){var n={Types:[],Cell:[],Value:[]},a=r||{},s=[],i=!1,o=2;return zr(e,(function(e,t,r){switch(r){case 335:n.Types.push({name:e.name});break;case 51:e.forEach((function(e){1==o?n.Cell.push({type:n.Types[e[0]-1].name,index:e[1]}):0==o&&n.Value.push({type:n.Types[e[0]-1].name,index:e[1]})}));break;case 337:o=e?1:0;break;case 338:o=2;break;case 35:s.push(r),i=!0;break;case 36:s.pop(),i=!1;break;default:if(t.T);else if(!i||a.WTF&&35!=s[s.length-1])throw new Error("Unexpected record 0x"+r.toString(16))}})),n}(e,0,r):function(e,t,r){var n={Types:[],Cell:[],Value:[]};if(!e)return n;var a,s=!1,i=2;return e.replace(mt,(function(e){var t=bt(e);switch(wt(t[0])){case"<?xml":case"<metadata":case"</metadata>":case"<metadataTypes":case"</metadataTypes>":case"</metadataType>":case"</futureMetadata>":case"<bk>":case"</bk>":case"</rc>":case"<extLst":case"<extLst>":case"</extLst>":case"<extLst/>":break;case"<metadataType":n.Types.push({name:t.name});break;case"<futureMetadata":for(var o=0;o<n.Types.length;++o)n.Types[o].name==t.name&&(a=n.Types[o]);break;case"<rc":1==i?n.Cell.push({type:n.Types[t.t-1].name,index:+t.v}):0==i&&n.Value.push({type:n.Types[t.t-1].name,index:+t.v});break;case"<cellMetadata":i=1;break;case"</cellMetadata>":case"</valueMetadata>":i=2;break;case"<valueMetadata":i=0;break;case"<ext":s=!0;break;case"</ext>":s=!1;break;case"<rvb":if(!a)break;a.offsets||(a.offsets=[]),a.offsets.push(+t.i);break;default:if(!s&&r.WTF)throw new Error("unrecognized "+t[0]+" in metadata")}return e})),n}(e,0,r)}(at(e,lf(i.metadata[0])),i.metadata[0],t)),(i.people||[]).length>=1&&(t.people=function(e,t){var r=[],n=!1;return e.replace(mt,(function(e){var a=bt(e);switch(wt(a[0])){case"<?xml":case"<personList":case"</personList>":case"</person>":case"<extLst":case"<extLst>":case"</extLst>":case"<extLst/>":break;case"<person":r.push({name:a.displayname,id:a.id});break;case"<ext":n=!0;break;case"</ext>":n=!1;break;default:if(!n&&t.WTF)throw new Error("unrecognized "+a[0]+" in threaded comments")}return e})),r}(at(e,lf(i.people[0])),t)),_&&(_=function(e,t){if(!e)return 0;try{e=t.map((function(t){return t.id||(t.id=t.strRelID),[t.name,e["!id"][t.id].Target,(r=e["!id"][t.id].Type,Gn.WS.indexOf(r)>-1?"sheet":Gn.CS&&r==Gn.CS?"chart":Gn.DS&&r==Gn.DS?"dialog":Gn.MS&&r==Gn.MS?"macro":r&&r.length?r:"sheet")];var r}))}catch(e){return null}return e&&0!==e.length?e:null}(_,f.Sheets));var C=at(e,"xl/worksheets/sheet.xml",!0)?1:0;e:for(w=0;w!=u.Worksheets;++w){var A="sheet";if(_&&_[w]?(v="xl/"+_[w][1].replace(/[\/]?xl\//,""),rt(e,v)||(v=_[w][1]),rt(e,v)||(v=x.replace(/_rels\/.*$/,"")+_[w][1]),A=_[w][2]):v=(v="xl/worksheets/sheet"+(w+1-C)+"."+S).replace(/sheet0\./,"sheet."),b=v.replace(/^(.*)(\/)([^\/]*)$/,"$1/_rels/$3.rels"),t&&null!=t.sheets)switch(typeof t.sheets){case"number":if(w!=t.sheets)continue e;break;case"string":if(u.SheetNames[w].toLowerCase()!=t.sheets.toLowerCase())continue e;break;default:if(Array.isArray&&Array.isArray(t.sheets)){for(var O=!1,R=0;R!=t.sheets.length;++R)"number"==typeof t.sheets[R]&&t.sheets[R]==w&&(O=1),"string"==typeof t.sheets[R]&&t.sheets[R].toLowerCase()==u.SheetNames[w].toLowerCase()&&(O=1);if(!O)continue e}}of(e,v,b,u.SheetNames[w],w,y,n,A,t,f,l,c)}return p={Directory:i,Workbook:f,Props:u,Custprops:d,Deps:g,Sheets:n,SheetNames:u.SheetNames,Strings:Wo,Styles:c,Themes:l,SSF:Ye(W)},t&&t.bookFiles&&(e.files?(p.keys=s,p.files=e.files):(p.keys=[],p.files={},e.FullPaths.forEach((function(t,r){t=t.replace(/^Root Entry[\/]/,""),p.keys.push(t),p.files[t]=e.FileIndex[r]})))),t&&t.bookVBA&&(i.vba.length>0?p.vbaraw=at(e,lf(i.vba[0]),!0):i.defaults&&"application/vnd.ms-office.vbaProject"===i.defaults.bin&&(p.vbaraw=at(e,"xl/vbaProject.bin",!0))),p}function ff(e,t){var r,n,a=t||{},s="Workbook",i=Ce.find(e,s);try{if(s="/!DataSpaces/Version",!(i=Ce.find(e,s))||!i.content)throw new Error("ECMA-376 Encrypted file missing "+s);if(r=i.content,(n={}).id=r.read_shift(0,"lpp4"),n.R=Xs(r,4),n.U=Xs(r,4),n.W=Xs(r,4),s="/!DataSpaces/DataSpaceMap",!(i=Ce.find(e,s))||!i.content)throw new Error("ECMA-376 Encrypted file missing "+s);var o=function(e){var t=[];e.l+=4;for(var r=e.read_shift(4);r-- >0;)t.push(Ys(e));return t}(i.content);if(1!==o.length||1!==o[0].comps.length||0!==o[0].comps[0].t||"StrongEncryptionDataSpace"!==o[0].name||"EncryptedPackage"!==o[0].comps[0].v)throw new Error("ECMA-376 Encrypted file bad "+s);if(s="/!DataSpaces/DataSpaceInfo/StrongEncryptionDataSpace",!(i=Ce.find(e,s))||!i.content)throw new Error("ECMA-376 Encrypted file missing "+s);var l=function(e){var t=[];e.l+=4;for(var r=e.read_shift(4);r-- >0;)t.push(e.read_shift(0,"lpp4"));return t}(i.content);if(1!=l.length||"StrongEncryptionTransform"!=l[0])throw new Error("ECMA-376 Encrypted file bad "+s);if(s="/!DataSpaces/TransformInfo/StrongEncryptionTransform/!Primary",!(i=Ce.find(e,s))||!i.content)throw new Error("ECMA-376 Encrypted file missing "+s);!function(e){var t=function(e){var t={};return e.read_shift(4),e.l+=4,t.id=e.read_shift(0,"lpp4"),t.name=e.read_shift(0,"lpp4"),t.R=Xs(e,4),t.U=Xs(e,4),t.W=Xs(e,4),t}(e);if(t.ename=e.read_shift(0,"8lpp4"),t.blksz=e.read_shift(4),t.cmode=e.read_shift(4),4!=e.read_shift(4))throw new Error("Bad !Primary record")}(i.content)}catch(e){}if(s="/EncryptionInfo",!(i=Ce.find(e,s))||!i.content)throw new Error("ECMA-376 Encrypted file missing "+s);var c=function(e){var t=Xs(e);switch(t.Minor){case 2:return[t.Minor,Qs(e)];case 3:return[t.Minor,Js()];case 4:return[t.Minor,Zs(e)]}throw new Error("ECMA-376 Encrypted file unrecognized Version: "+t.Minor)}(i.content);if(s="/EncryptedPackage",!(i=Ce.find(e,s))||!i.content)throw new Error("ECMA-376 Encrypted file missing "+s);if(4==c[0]&&"undefined"!=typeof decrypt_agile)return decrypt_agile(c[1],i.content,a.password||"",a);if(2==c[0]&&"undefined"!=typeof decrypt_std76)return decrypt_std76(c[1],i.content,a.password||"",a);throw new Error("File is password-protected")}function uf(e,t){return"ods"==t.bookType?Ic(e,t):"numbers"==t.bookType?function(e,t){if(!t||!t.numbers)throw new Error("Must pass a `numbers` option -- check the README");var r=e.Sheets[e.SheetNames[0]];e.SheetNames.length>1&&console.error("The Numbers writer currently writes only the first table");var n=Zr(r["!ref"]);n.s.r=n.s.c=0;var a=!1;n.e.c>9&&(a=!0,n.e.c=9),n.e.r>49&&(a=!0,n.e.r=49),a&&console.error("The Numbers writer is currently limited to ".concat(en(n)));var s=Of(r,{range:n,header:1}),i=["~Sh33tJ5~"];s.forEach((function(e){return e.forEach((function(e){"string"==typeof e&&i.push(e)}))}));var o={},l=[],c=Ce.read(t.numbers,{type:"base64"});c.FileIndex.map((function(e,t){return[e,c.FullPaths[t]]})).forEach((function(e){var t=e[0],r=e[1];2==t.type&&t.name.match(/\.iwa/)&&Vc(Xc(t.content)).forEach((function(e){l.push(e.id),o[e.id]={deps:[],location:r,type:zc(e.messages[0].meta[1][0].data)}}))})),l.sort((function(e,t){return e-t}));var f=l.filter((function(e){return e>1})).map((function(e){return[e,Bc(e)]}));c.FileIndex.map((function(e,t){return[e,c.FullPaths[t]]})).forEach((function(e){var t=e[0];e[1],t.name.match(/\.iwa/)&&Vc(Xc(t.content)).forEach((function(e){e.messages.forEach((function(t){f.forEach((function(t){e.messages.some((function(e){return 11006!=zc(e.meta[1][0].data)&&function(e,t){e:for(var r=0;r<=e.length-t.length;++r){for(var n=0;n<t.length;++n)if(e[r+n]!=t[n])continue e;return!0}return!1}(e.data,t[1])}))&&o[t[0]].deps.push(e.id)}))}))}))}));for(var u,h=Ce.find(c,o[1].location),d=Vc(Xc(h.content)),p=0;p<d.length;++p){var m=d[p];1==m.id&&(u=m)}var g=Jc(Wc(u.messages[0].data)[1][0].data);for(d=Vc(Xc((h=Ce.find(c,o[g].location)).content)),p=0;p<d.length;++p)(m=d[p]).id==g&&(u=m);for(g=Jc(Wc(u.messages[0].data)[2][0].data),d=Vc(Xc((h=Ce.find(c,o[g].location)).content)),p=0;p<d.length;++p)(m=d[p]).id==g&&(u=m);for(g=Jc(Wc(u.messages[0].data)[2][0].data),d=Vc(Xc((h=Ce.find(c,o[g].location)).content)),p=0;p<d.length;++p)(m=d[p]).id==g&&(u=m);var v=Wc(u.messages[0].data);v[6][0].data=Bc(n.e.r+1),v[7][0].data=Bc(n.e.c+1);for(var b=Jc(v[46][0].data),w=Ce.find(c,o[b].location),y=Vc(Xc(w.content)),k=0;k<y.length&&y[k].id!=b;++k);if(y[k].id!=b)throw"Bad ColumnRowUIDMapArchive";var T=Wc(y[k].messages[0].data);T[1]=[],T[2]=[],T[3]=[];for(var S=0;S<=n.e.c;++S){var E=[];E[1]=E[2]=[{type:0,data:Bc(S+420690)}],T[1].push({type:2,data:Hc(E)}),T[2].push({type:0,data:Bc(S)}),T[3].push({type:0,data:Bc(S)})}T[4]=[],T[5]=[],T[6]=[];for(var x=0;x<=n.e.r;++x)(E=[])[1]=E[2]=[{type:0,data:Bc(x+726270)}],T[4].push({type:2,data:Hc(E)}),T[5].push({type:0,data:Bc(x)}),T[6].push({type:0,data:Bc(x)});y[k].messages[0].data=Hc(T),w.content=Yc($c(y)),w.size=w.content.length,delete v[46];var _=Wc(v[4][0].data);_[7][0].data=Bc(n.e.r+1);var C=Jc(Wc(_[1][0].data)[2][0].data);if((y=Vc(Xc((w=Ce.find(c,o[C].location)).content)))[0].id!=C)throw"Bad HeaderStorageBucket";var A=Wc(y[0].messages[0].data);for(x=0;x<s.length;++x){var O=Wc(A[2][0].data);O[1][0].data=Bc(x),O[4][0].data=Bc(s[x].length),A[2][x]={type:A[2][0].type,data:Hc(O)}}y[0].messages[0].data=Hc(A),w.content=Yc($c(y)),w.size=w.content.length;var R=Jc(_[2][0].data);if((y=Vc(Xc((w=Ce.find(c,o[R].location)).content)))[0].id!=R)throw"Bad HeaderStorageBucket";for(A=Wc(y[0].messages[0].data),S=0;S<=n.e.c;++S)(O=Wc(A[2][0].data))[1][0].data=Bc(S),O[4][0].data=Bc(n.e.r+1),A[2][S]={type:A[2][0].type,data:Hc(O)};y[0].messages[0].data=Hc(A),w.content=Yc($c(y)),w.size=w.content.length;var N=Jc(_[4][0].data);!function(){for(var e,t=Ce.find(c,o[N].location),r=Vc(Xc(t.content)),n=0;n<r.length;++n){var a=r[n];a.id==N&&(e=a)}var s=Wc(e.messages[0].data);s[3]=[];var l=[];i.forEach((function(e,t){l[1]=[{type:0,data:Bc(t)}],l[2]=[{type:0,data:Bc(1)}],l[3]=[{type:2,data:Fc(e)}],s[3].push({type:2,data:Hc(l)})})),e.messages[0].data=Hc(s);var f=Yc($c(r));t.content=f,t.size=t.content.length}();var I=Wc(_[3][0].data),P=I[1][0];delete I[2];var D=Wc(P.data),F=Jc(D[2][0].data);!function(){for(var e,t=Ce.find(c,o[F].location),r=Vc(Xc(t.content)),a=0;a<r.length;++a){var l=r[a];l.id==F&&(e=l)}var f=Wc(e.messages[0].data);delete f[6],delete I[7];var u=new Uint8Array(f[5][0].data);f[5]=[];for(var h=0,d=0;d<=n.e.r;++d){var p=Wc(u);h+=rf(p,s[d],i),p[1][0].data=Bc(d),f[5].push({data:Hc(p),type:2})}f[1]=[{type:0,data:Bc(n.e.c+1)}],f[2]=[{type:0,data:Bc(n.e.r+1)}],f[3]=[{type:0,data:Bc(h)}],f[4]=[{type:0,data:Bc(n.e.r+1)}],e.messages[0].data=Hc(f);var m=Yc($c(r));t.content=m,t.size=t.content.length}(),P.data=Hc(D),_[3][0].data=Hc(I),v[4][0].data=Hc(_),u.messages[0].data=Hc(v);var L=Yc($c(d));return h.content=L,h.size=h.content.length,c}(e,t):"xlsb"==t.bookType?function(e,t){Wi=1024,e&&!e.SSF&&(e.SSF=Ye(W)),e&&e.SSF&&(Te(),ke(e.SSF),t.revssf=Fe(e.SSF),t.revssf[e.SSF[65535]]=0,t.ssf=e.SSF),t.rels={},t.wbrels={},t.Strings=[],t.Strings.Count=0,t.Strings.Unique=0,jo?t.revStrings=new Map:(t.revStrings={},t.revStrings.foo=[],delete t.revStrings.foo);var r="xlsb"==t.bookType?"bin":"xml",n=Yi.indexOf(t.bookType)>-1,a={workbooks:[],sheets:[],charts:[],dialogs:[],macros:[],rels:[],strs:[],comments:[],threadedcomments:[],links:[],coreprops:[],extprops:[],custprops:[],themes:[],styles:[],calcchains:[],vba:[],drawings:[],metadata:[],people:[],TODO:[],xmlns:""};sf(t=t||{});var s=ct(),i="",o=0;if(t.cellXfs=[],Xo(t.cellXfs,{},{revssf:{General:0}}),e.Props||(e.Props={}),lt(s,i="docProps/core.xml",na(e.Props,t)),a.coreprops.push(i),qn(t.rels,2,i,Gn.CORE_PROPS),i="docProps/app.xml",e.Props&&e.Props.SheetNames);else if(e.Workbook&&e.Workbook.Sheets){for(var l=[],c=0;c<e.SheetNames.length;++c)2!=(e.Workbook.Sheets[c]||{}).Hidden&&l.push(e.SheetNames[c]);e.Props.SheetNames=l}else e.Props.SheetNames=e.SheetNames;for(e.Props.Worksheets=e.Props.SheetNames.length,lt(s,i,oa(e.Props)),a.extprops.push(i),qn(t.rels,3,i,Gn.EXT_PROPS),e.Custprops!==e.Props&&Ie(e.Custprops||{}).length>0&&(lt(s,i="docProps/custom.xml",ca(e.Custprops)),a.custprops.push(i),qn(t.rels,4,i,Gn.CUST_PROPS)),o=1;o<=e.SheetNames.length;++o){var f={"!id":{}},u=e.Sheets[e.SheetNames[o-1]];if((u||{})["!type"],lt(s,i="xl/worksheets/sheet"+o+"."+r,Ml(o-1,i,t,e,f)),a.sheets.push(i),qn(t.wbrels,-1,"worksheets/sheet"+o+"."+r,Gn.WS[0]),u){var h=u["!comments"],d=!1,p="";h&&h.length>0&&(lt(s,p="xl/comments"+o+"."+r,Ul(h,p,t)),a.comments.push(p),qn(f,-1,"../comments"+o+"."+r,Gn.CMNT),d=!0),u["!legacy"]&&d&&lt(s,"xl/drawings/vmlDrawing"+o+".vml",Hi(o,u["!comments"])),delete u["!comments"],delete u["!legacy"]}f["!id"].rId1&&lt(s,Xn(i),Kn(f))}return null!=t.Strings&&t.Strings.length>0&&(lt(s,i="xl/sharedStrings."+r,function(e,t,r){return(".bin"===t.slice(-4)?$s:Vs)(e,r)}(t.Strings,i,t)),a.strs.push(i),qn(t.wbrels,-1,"sharedStrings."+r,Gn.SST)),lt(s,i="xl/workbook."+r,function(e,t,r){return(".bin"===t.slice(-4)?Fl:Pl)(e,r)}(e,i,t)),a.workbooks.push(i),qn(t.rels,1,i,Gn.WB),lt(s,i="xl/theme/theme1.xml",Mi(e.Themes,t)),a.themes.push(i),qn(t.wbrels,-1,"theme/theme1.xml",Gn.THEME),lt(s,i="xl/styles."+r,function(e,t,r){return(".bin"===t.slice(-4)?Ci:bi)(e,r)}(e,i,t)),a.styles.push(i),qn(t.wbrels,-1,"styles."+r,Gn.STY),e.vbaraw&&n&&(lt(s,i="xl/vbaProject.bin",e.vbaraw),a.vba.push(i),qn(t.wbrels,-1,"vbaProject.bin",Gn.VBA)),lt(s,i="xl/metadata."+r,(".bin"===i.slice(-4)?Bi:zi)()),a.metadata.push(i),qn(t.wbrels,-1,"metadata."+r,Gn.XLMETA),lt(s,"[Content_Types].xml",$n(a,t)),lt(s,"_rels/.rels",Kn(t.rels)),lt(s,"xl/_rels/workbook."+r+".rels",Kn(t.wbrels)),delete t.revssf,delete t.ssf,s}(e,t):hf(e,t)}function hf(e,t){Wi=1024,e&&!e.SSF&&(e.SSF=Ye(W)),e&&e.SSF&&(Te(),ke(e.SSF),t.revssf=Fe(e.SSF),t.revssf[e.SSF[65535]]=0,t.ssf=e.SSF),t.rels={},t.wbrels={},t.Strings=[],t.Strings.Count=0,t.Strings.Unique=0,jo?t.revStrings=new Map:(t.revStrings={},t.revStrings.foo=[],delete t.revStrings.foo);var r="xml",n=Yi.indexOf(t.bookType)>-1,a={workbooks:[],sheets:[],charts:[],dialogs:[],macros:[],rels:[],strs:[],comments:[],threadedcomments:[],links:[],coreprops:[],extprops:[],custprops:[],themes:[],styles:[],calcchains:[],vba:[],drawings:[],metadata:[],people:[],TODO:[],xmlns:""};sf(t=t||{});var s=ct(),i="",o=0;if(t.cellXfs=[],Xo(t.cellXfs,{},{revssf:{General:0}}),e.Props||(e.Props={}),lt(s,i="docProps/core.xml",na(e.Props,t)),a.coreprops.push(i),qn(t.rels,2,i,Gn.CORE_PROPS),i="docProps/app.xml",e.Props&&e.Props.SheetNames);else if(e.Workbook&&e.Workbook.Sheets){for(var l=[],c=0;c<e.SheetNames.length;++c)2!=(e.Workbook.Sheets[c]||{}).Hidden&&l.push(e.SheetNames[c]);e.Props.SheetNames=l}else e.Props.SheetNames=e.SheetNames;e.Props.Worksheets=e.Props.SheetNames.length,lt(s,i,oa(e.Props)),a.extprops.push(i),qn(t.rels,3,i,Gn.EXT_PROPS),e.Custprops!==e.Props&&Ie(e.Custprops||{}).length>0&&(lt(s,i="docProps/custom.xml",ca(e.Custprops)),a.custprops.push(i),qn(t.rels,4,i,Gn.CUST_PROPS));var f=["SheetJ5"];for(t.tcid=0,o=1;o<=e.SheetNames.length;++o){var u={"!id":{}},h=e.Sheets[e.SheetNames[o-1]];if((h||{})["!type"],lt(s,i="xl/worksheets/sheet"+o+"."+r,hl(o-1,t,e,u)),a.sheets.push(i),qn(t.wbrels,-1,"worksheets/sheet"+o+"."+r,Gn.WS[0]),h){var d=h["!comments"],p=!1,m="";if(d&&d.length>0){var g=!1;d.forEach((function(e){e[1].forEach((function(e){1==e.T&&(g=!0)}))})),g&&(lt(s,m="xl/threadedComments/threadedComment"+o+"."+r,$i(d,f,t)),a.threadedcomments.push(m),qn(u,-1,"../threadedComments/threadedComment"+o+"."+r,Gn.TCMNT)),lt(s,m="xl/comments"+o+"."+r,Vi(d)),a.comments.push(m),qn(u,-1,"../comments"+o+"."+r,Gn.CMNT),p=!0}h["!legacy"]&&p&&lt(s,"xl/drawings/vmlDrawing"+o+".vml",Hi(o,h["!comments"])),delete h["!comments"],delete h["!legacy"]}u["!id"].rId1&&lt(s,Xn(i),Kn(u))}return null!=t.Strings&&t.Strings.length>0&&(lt(s,i="xl/sharedStrings.xml",Vs(t.Strings,t)),a.strs.push(i),qn(t.wbrels,-1,"sharedStrings.xml",Gn.SST)),lt(s,i="xl/workbook.xml",Pl(e)),a.workbooks.push(i),qn(t.rels,1,i,Gn.WB),lt(s,i="xl/theme/theme1.xml",Mi(e.Themes,t)),a.themes.push(i),qn(t.wbrels,-1,"theme/theme1.xml",Gn.THEME),lt(s,i="xl/styles.xml",bi(e,t)),a.styles.push(i),qn(t.wbrels,-1,"styles.xml",Gn.STY),e.vbaraw&&n&&(lt(s,i="xl/vbaProject.bin",e.vbaraw),a.vba.push(i),qn(t.wbrels,-1,"vbaProject.bin",Gn.VBA)),lt(s,i="xl/metadata.xml",zi()),a.metadata.push(i),qn(t.wbrels,-1,"metadata.xml",Gn.XLMETA),f.length>1&&(lt(s,i="xl/persons/person.xml",function(e){var t=[ht,Gt("personList",null,{xmlns:Qt,"xmlns:x":tr[0]}).replace(/[\/]>/,">")];return e.forEach((function(e,r){t.push(Gt("person",null,{displayName:e,id:"{54EE7950-7262-4200-6969-"+("000000000000"+r).slice(-12)+"}",userId:e,providerId:"None"}))})),t.push("</personList>"),t.join("")}(f)),a.people.push(i),qn(t.wbrels,-1,"persons/person.xml",Gn.PEOPLE)),lt(s,"[Content_Types].xml",$n(a,t)),lt(s,"_rels/.rels",Kn(t.rels)),lt(s,"xl/_rels/workbook.xml.rels",Kn(t.wbrels)),delete t.revssf,delete t.ssf,s}function df(e,t){var r="";switch((t||{}).type||"base64"){case"buffer":case"array":return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7]];case"base64":r=y(e.slice(0,12));break;case"binary":r=e;break;default:throw new Error("Unrecognized type "+(t&&t.type||"undefined"))}return[r.charCodeAt(0),r.charCodeAt(1),r.charCodeAt(2),r.charCodeAt(3),r.charCodeAt(4),r.charCodeAt(5),r.charCodeAt(6),r.charCodeAt(7)]}function pf(e,t){var r=0;e:for(;r<e.length;)switch(e.charCodeAt(r)){case 10:case 13:case 32:++r;break;case 60:return Kl(e.slice(r),t);default:break e}return Is.to_workbook(e,t)}function mf(e,t,r,n){return n?(r.type="string",Is.to_workbook(e,r)):Is.to_workbook(t,r)}function gf(e,t){f();var r=t||{};if("undefined"!=typeof ArrayBuffer&&e instanceof ArrayBuffer)return gf(new Uint8Array(e),((r=Ye(r)).type="array",r));"undefined"!=typeof Uint8Array&&e instanceof Uint8Array&&!r.type&&(r.type="undefined"!=typeof Deno?"buffer":"array");var n,a=e,s=!1;if(r.cellStyles&&(r.cellNF=!0,r.sheetStubs=!0),Ho={},r.dateNF&&(Ho.dateNF=r.dateNF),r.type||(r.type=k&&Buffer.isBuffer(e)?"buffer":"base64"),"file"==r.type&&(r.type=k?"buffer":"binary",a=function(e){if(void 0!==Ae)return Ae.readFileSync(e);if("undefined"!=typeof Deno)return Deno.readFileSync(e);if("undefined"!=typeof $&&"undefined"!=typeof File&&"undefined"!=typeof Folder)try{var t=File(e);t.open("r"),t.encoding="binary";var r=t.read();return t.close(),r}catch(e){if(!e.message||!e.message.match(/onstruct/))throw e}throw new Error("Cannot access file "+e)}(e),"undefined"==typeof Uint8Array||k||(r.type="array")),"string"==r.type&&(s=!0,r.type="binary",r.codepage=65001,a=function(e){return e.match(/[^\x00-\x7F]/)?Lt(e):e}(e)),"array"==r.type&&"undefined"!=typeof Uint8Array&&e instanceof Uint8Array&&"undefined"!=typeof ArrayBuffer){var i=new ArrayBuffer(3),o=new Uint8Array(i);if(o.foo="bar",!o.foo)return(r=Ye(r)).type="array",gf(A(a),r)}switch((n=df(a,r))[0]){case 208:if(207===n[1]&&17===n[2]&&224===n[3]&&161===n[4]&&177===n[5]&&26===n[6]&&225===n[7])return function(e,t){return Ce.find(e,"EncryptedPackage")?ff(e,t):oc(e,t)}(Ce.read(a,r),r);break;case 9:if(n[1]<=8)return oc(a,r);break;case 60:return Kl(a,r);case 73:if(73===n[1]&&42===n[2]&&0===n[3])throw new Error("TIFF Image File is not a spreadsheet");if(68===n[1])return function(e,t){var r=t||{},n=!!r.WTF;r.WTF=!0;try{var a=Os.to_workbook(e,r);return r.WTF=n,a}catch(a){if(r.WTF=n,!a.message.match(/SYLK bad record ID/)&&n)throw a;return Is.to_workbook(e,t)}}(a,r);break;case 84:if(65===n[1]&&66===n[2]&&76===n[3])return Rs.to_workbook(a,r);break;case 80:return 75===n[1]&&n[2]<9&&n[3]<9?function(e,t){var r=e,n=t||{};return n.type||(n.type=k&&Buffer.isBuffer(e)?"buffer":"base64"),cf(ft(r,n),n)}(a,r):mf(e,a,r,s);case 239:return 60===n[3]?Kl(a,r):mf(e,a,r,s);case 255:if(254===n[1])return function(e,t){var r=e;return"base64"==t.type&&(r=y(r)),r=d.utils.decode(1200,r.slice(2),"str"),t.type="binary",pf(r,t)}(a,r);if(0===n[1]&&2===n[2]&&0===n[3])return Ps.to_workbook(a,r);break;case 0:if(0===n[1]){if(n[2]>=2&&0===n[3])return Ps.to_workbook(a,r);if(0===n[2]&&(8===n[3]||9===n[3]))return Ps.to_workbook(a,r)}break;case 3:case 131:case 139:case 140:return As.to_workbook(a,r);case 123:if(92===n[1]&&114===n[2]&&116===n[3])return ri.to_workbook(a,r);break;case 10:case 13:case 32:return function(e,t){var r="",n=df(e,t);switch(t.type){case"base64":r=y(e);break;case"binary":r=e;break;case"buffer":r=e.toString("binary");break;case"array":r=Xe(e);break;default:throw new Error("Unrecognized type "+t.type)}return 239==n[0]&&187==n[1]&&191==n[2]&&(r=Ft(r)),t.type="binary",pf(r,t)}(a,r);case 137:if(80===n[1]&&78===n[2]&&71===n[3])throw new Error("PNG Image File is not a spreadsheet")}return Cs.indexOf(n[0])>-1&&n[2]<=12&&n[3]<=31?As.to_workbook(a,r):mf(e,a,r,s)}function vf(e,t){var r=t||{};return r.type="file",gf(e,r)}function bf(e,t){switch(t.type){case"base64":case"binary":break;case"buffer":case"array":t.type="";break;case"file":return Ne(t.file,Ce.write(e,{type:k?"buffer":""}));case"string":throw new Error("'string' output type invalid for '"+t.bookType+"' files");default:throw new Error("Unrecognized type "+t.type)}return Ce.write(e,t)}function wf(e,t){var r={},n=k?"nodebuffer":"undefined"!=typeof Uint8Array?"array":"string";if(t.compression&&(r.compression="DEFLATE"),t.password)r.type=n;else switch(t.type){case"base64":r.type="base64";break;case"binary":r.type="string";break;case"string":throw new Error("'string' output type invalid for '"+t.bookType+"' files");case"buffer":case"file":r.type=n;break;default:throw new Error("Unrecognized type "+t.type)}var a=e.FullPaths?Ce.write(e,{fileType:"zip",type:{nodebuffer:"buffer",string:"binary"}[r.type]||r.type,compression:!!t.compression}):e.generate(r);if("undefined"!=typeof Deno&&"string"==typeof a){if("binary"==t.type||"base64"==t.type)return a;a=new Uint8Array(_(a))}return t.password&&"undefined"!=typeof encrypt_agile?bf(encrypt_agile(a,t.password),t):"file"===t.type?Ne(t.file,a):"string"==t.type?Ft(a):a}function yf(e,t,r){r||(r="");var n=r+e;switch(t.type){case"base64":return w(Lt(n));case"binary":return Lt(n);case"string":return e;case"file":return Ne(t.file,n,"utf8");case"buffer":return k?T(n,"utf8"):"undefined"!=typeof TextEncoder?(new TextEncoder).encode(n):yf(n,{type:"binary"}).split("").map((function(e){return e.charCodeAt(0)}))}throw new Error("Unrecognized type "+t.type)}function kf(e,t){switch(t.type){case"string":case"base64":case"binary":for(var r="",n=0;n<e.length;++n)r+=String.fromCharCode(e[n]);return"base64"==t.type?w(r):"string"==t.type?Ft(r):r;case"file":return Ne(t.file,e);case"buffer":return e;default:throw new Error("Unrecognized type "+t.type)}}function Tf(e,t){f(),Nl(e);var r=Ye(t||{});if(r.cellStyles&&(r.cellNF=!0,r.sheetStubs=!0),"array"==r.type){r.type="binary";var n=Tf(e,r);return r.type="array",_(n)}return function(e,t){var r=Ye(t||{});return wf(hf(e,r),r)}(e,r)}function Sf(e,t){f(),Nl(e);var r=Ye(t||{});if(r.cellStyles&&(r.cellNF=!0,r.sheetStubs=!0),"array"==r.type){r.type="binary";var n=Sf(e,r);return r.type="array",_(n)}var a=0;if(r.sheet&&(a="number"==typeof r.sheet?r.sheet:e.SheetNames.indexOf(r.sheet),!e.SheetNames[a]))throw new Error("Sheet not found: "+r.sheet+" : "+typeof r.sheet);switch(r.bookType||"xlsb"){case"xml":case"xlml":return yf(ec(e,r),r);case"slk":case"sylk":return yf(Os.from_sheet(e.Sheets[e.SheetNames[a]],r),r);case"htm":case"html":return yf(Tc(e.Sheets[e.SheetNames[a]],r),r);case"txt":return function(e,t){switch(t.type){case"base64":return w(e);case"binary":case"string":return e;case"file":return Ne(t.file,e,"binary");case"buffer":return k?T(e,"binary"):e.split("").map((function(e){return e.charCodeAt(0)}))}throw new Error("Unrecognized type "+t.type)}(Pf(e.Sheets[e.SheetNames[a]],r),r);case"csv":return yf(If(e.Sheets[e.SheetNames[a]],r),r,"\ufeff");case"dif":return yf(Rs.from_sheet(e.Sheets[e.SheetNames[a]],r),r);case"dbf":return kf(As.from_sheet(e.Sheets[e.SheetNames[a]],r),r);case"prn":return yf(Is.from_sheet(e.Sheets[e.SheetNames[a]],r),r);case"rtf":return yf(ri.from_sheet(e.Sheets[e.SheetNames[a]],r),r);case"eth":return yf(Ns.from_sheet(e.Sheets[e.SheetNames[a]],r),r);case"fods":return yf(Ic(e,r),r);case"wk1":return kf(Ps.sheet_to_wk1(e.Sheets[e.SheetNames[a]],r),r);case"wk3":return kf(Ps.book_to_wk3(e,r),r);case"biff2":r.biff||(r.biff=2);case"biff3":r.biff||(r.biff=3);case"biff4":return r.biff||(r.biff=4),kf(gc(e,r),r);case"biff5":r.biff||(r.biff=5);case"biff8":case"xla":case"xls":return r.biff||(r.biff=8),function(e,t){var r=t||{};return bf(function(e,t){var r=t||{},n=Ce.utils.cfb_new({root:"R"}),a="/Workbook";switch(r.bookType||"xls"){case"xls":r.bookType="biff8";case"xla":r.bookType||(r.bookType="xla");case"biff8":a="/Workbook",r.biff=8;break;case"biff5":a="/Book",r.biff=5;break;default:throw new Error("invalid type "+r.bookType+" for XLS CFB")}return Ce.utils.cfb_add(n,a,gc(e,r)),8==r.biff&&(e.Props||e.Custprops)&&function(e,t){var r,n=[],a=[],s=[],i=0,o=Pe(Fn,"n"),l=Pe(Ln,"n");if(e.Props)for(r=Ie(e.Props),i=0;i<r.length;++i)(Object.prototype.hasOwnProperty.call(o,r[i])?n:Object.prototype.hasOwnProperty.call(l,r[i])?a:s).push([r[i],e.Props[r[i]]]);if(e.Custprops)for(r=Ie(e.Custprops),i=0;i<r.length;++i)Object.prototype.hasOwnProperty.call(e.Props||{},r[i])||(Object.prototype.hasOwnProperty.call(o,r[i])?n:Object.prototype.hasOwnProperty.call(l,r[i])?a:s).push([r[i],e.Custprops[r[i]]]);var c=[];for(i=0;i<s.length;++i)Ea.indexOf(s[i][0])>-1||sa.indexOf(s[i][0])>-1||null!=s[i][1]&&c.push(s[i]);a.length&&Ce.utils.cfb_add(t,"/SummaryInformation",Aa(a,sc,l,Ln)),(n.length||c.length)&&Ce.utils.cfb_add(t,"/DocumentSummaryInformation",Aa(n,ic,o,Fn,c.length?c:null,"05d5cdd59c2e1b10939708002b2cf9ae"))}(e,n),8==r.biff&&e.vbaraw&&function(e,t){t.FullPaths.forEach((function(r,n){if(0!=n){var a=r.replace(/[^\/]*[\/]/,"/_VBA_PROJECT_CUR/");"/"!==a.slice(-1)&&Ce.utils.cfb_add(e,a,t.FileIndex[n].content)}}))}(n,Ce.read(e.vbaraw,{type:"string"==typeof e.vbaraw?"binary":"buffer"})),n}(e,r),r)}(e,r);case"xlsx":case"xlsm":case"xlam":case"xlsb":case"numbers":case"ods":return function(e,t){var r=Ye(t||{});return wf(uf(e,r),r)}(e,r);default:throw new Error("Unrecognized bookType |"+r.bookType+"|")}}function Ef(e){if(!e.bookType){var t=e.file.slice(e.file.lastIndexOf(".")).toLowerCase();t.match(/^\.[a-z]+$/)&&(e.bookType=t.slice(1)),e.bookType={xls:"biff8",htm:"html",slk:"sylk",socialcalc:"eth",Sh33tJS:"WTF"}[e.bookType]||e.bookType}}function xf(e,t,r){var n=r||{};return n.type="file",n.file=t,Ef(n),Sf(e,n)}function _f(e,t,r){var n=r||{};return n.type="file",n.file=t,Ef(n),Tf(e,n)}function Cf(e,t,r,n){var a=r||{};a.type="file",a.file=e,Ef(a),a.type="buffer";var s=n;return s instanceof Function||(s=r),Ae.writeFile(e,Sf(t,a),s)}function Af(e,t,r,n,a,s,i,o){var l=Yr(r),c=o.defval,f=o.raw||!Object.prototype.hasOwnProperty.call(o,"raw"),u=!0,h=1===a?[]:{};if(1!==a)if(Object.defineProperty)try{Object.defineProperty(h,"__rowNum__",{value:r,enumerable:!1})}catch(e){h.__rowNum__=r}else h.__rowNum__=r;if(!i||e[r])for(var d=t.s.c;d<=t.e.c;++d){var p=i?e[r][d]:e[n[d]+l];if(void 0!==p&&void 0!==p.t){var m=p.v;switch(p.t){case"z":if(null==m)break;continue;case"e":m=0==m?null:void 0;break;case"s":case"d":case"b":case"n":break;default:throw new Error("unrecognized type "+p.t)}if(null!=s[d]){if(null==m)if("e"==p.t&&null===m)h[s[d]]=null;else if(void 0!==c)h[s[d]]=c;else{if(!f||null!==m)continue;h[s[d]]=null}else h[s[d]]=f&&("n"!==p.t||"n"===p.t&&!1!==o.rawNumbers)?m:rn(p,m,o);null!=m&&(u=!1)}}else{if(void 0===c)continue;null!=s[d]&&(h[s[d]]=c)}}return{row:h,isempty:u}}function Of(e,t){if(null==e||null==e["!ref"])return[];var r={t:"n",v:0},n=0,a=1,s=[],i=0,o="",l={s:{r:0,c:0},e:{r:0,c:0}},c=t||{},f=null!=c.range?c.range:e["!ref"];switch(1===c.header?n=1:"A"===c.header?n=2:Array.isArray(c.header)?n=3:null==c.header&&(n=0),typeof f){case"string":l=tn(f);break;case"number":(l=tn(e["!ref"])).s.r=f;break;default:l=f}n>0&&(a=0);var u=Yr(l.s.r),h=[],d=[],p=0,m=0,g=Array.isArray(e),v=l.s.r,b=0,w={};g&&!e[v]&&(e[v]=[]);var y=c.skipHidden&&e["!cols"]||[],k=c.skipHidden&&e["!rows"]||[];for(b=l.s.c;b<=l.e.c;++b)if(!(y[b]||{}).hidden)switch(h[b]=qr(b),r=g?e[v][b]:e[h[b]+u],n){case 1:s[b]=b-l.s.c;break;case 2:s[b]=h[b];break;case 3:s[b]=c.header[b-l.s.c];break;default:if(null==r&&(r={w:"__EMPTY",t:"s"}),o=i=rn(r,null,c),m=w[i]||0){do{o=i+"_"+m++}while(w[o]);w[i]=m,w[o]=1}else w[i]=1;s[b]=o}for(v=l.s.r+a;v<=l.e.r;++v)if(!(k[v]||{}).hidden){var T=Af(e,l,v,h,n,s,g,c);(!1===T.isempty||(1===n?!1!==c.blankrows:c.blankrows))&&(d[p++]=T.row)}return d.length=p,d}var Rf=/"/g;function Nf(e,t,r,n,a,s,i,o){for(var l=!0,c=[],f="",u=Yr(r),h=t.s.c;h<=t.e.c;++h)if(n[h]){var d=o.dense?(e[r]||[])[h]:e[n[h]+u];if(null==d)f="";else if(null!=d.v){l=!1,f=""+(o.rawNumbers&&"n"==d.t?d.v:rn(d,null,o));for(var p=0,m=0;p!==f.length;++p)if((m=f.charCodeAt(p))===a||m===s||34===m||o.forceQuotes){f='"'+f.replace(Rf,'""')+'"';break}"ID"==f&&(f='"ID"')}else null==d.f||d.F?f="":(l=!1,(f="="+d.f).indexOf(",")>=0&&(f='"'+f.replace(Rf,'""')+'"'));c.push(f)}return!1===o.blankrows&&l?null:c.join(i)}function If(e,t){var r=[],n=null==t?{}:t;if(null==e||null==e["!ref"])return"";var a=tn(e["!ref"]),s=void 0!==n.FS?n.FS:",",i=s.charCodeAt(0),o=void 0!==n.RS?n.RS:"\n",l=o.charCodeAt(0),c=new RegExp(("|"==s?"\\|":s)+"+$"),f="",u=[];n.dense=Array.isArray(e);for(var h=n.skipHidden&&e["!cols"]||[],d=n.skipHidden&&e["!rows"]||[],p=a.s.c;p<=a.e.c;++p)(h[p]||{}).hidden||(u[p]=qr(p));for(var m=0,g=a.s.r;g<=a.e.r;++g)(d[g]||{}).hidden||null!=(f=Nf(e,a,g,u,i,l,s,n))&&(n.strip&&(f=f.replace(c,"")),(f||!1!==n.blankrows)&&r.push((m++?o:"")+f));return delete n.dense,r.join("")}function Pf(e,t){t||(t={}),t.FS="\t",t.RS="\n";var r=If(e,t);if(void 0===d||"string"==t.type)return r;var n=d.utils.encode(1200,r,"str");return String.fromCharCode(255)+String.fromCharCode(254)+n}function Df(e,t,r){var n,a=r||{},s=+!a.skipHeader,i=e||{},o=0,l=0;if(i&&null!=a.origin)if("number"==typeof a.origin)o=a.origin;else{var c="string"==typeof a.origin?Qr(a.origin):a.origin;o=c.r,l=c.c}var f={s:{c:0,r:0},e:{c:l,r:o+t.length-1+s}};if(i["!ref"]){var u=tn(i["!ref"]);f.e.c=Math.max(f.e.c,u.e.c),f.e.r=Math.max(f.e.r,u.e.r),-1==o&&(o=u.e.r+1,f.e.r=o+t.length-1+s)}else-1==o&&(o=0,f.e.r=t.length-1+s);var h=a.header||[],d=0;t.forEach((function(e,t){Ie(e).forEach((function(r){-1==(d=h.indexOf(r))&&(h[d=h.length]=r);var c=e[r],f="z",u="",p=Jr({c:l+d,r:o+t+s});n=Ff(i,p),!c||"object"!=typeof c||c instanceof Date?("number"==typeof c?f="n":"boolean"==typeof c?f="b":"string"==typeof c?f="s":c instanceof Date?(f="d",a.cellDates||(f="n",c=Me(c)),u=a.dateNF||W[14]):null===c&&a.nullError&&(f="e",c=0),n?(n.t=f,n.v=c,delete n.w,delete n.R,u&&(n.z=u)):i[p]=n={t:f,v:c},u&&(n.z=u)):i[p]=c}))})),f.e.c=Math.max(f.e.c,l+h.length-1);var p=Yr(o);if(s)for(d=0;d<h.length;++d)i[qr(d+l)+p]={t:"s",v:h[d]};return i["!ref"]=en(f),i}function Ff(e,t,r){if("string"==typeof t){if(Array.isArray(e)){var n=Qr(t);return e[n.r]||(e[n.r]=[]),e[n.r][n.c]||(e[n.r][n.c]={t:"z"})}return e[t]||(e[t]={t:"z"})}return Ff(e,Jr("number"!=typeof t?t:{r:t,c:r||0}))}function Lf(e,t,r,n){var a=1;if(!r)for(;a<=65535&&-1!=e.SheetNames.indexOf(r="Sheet"+a);++a,r=void 0);if(!r||e.SheetNames.length>=65535)throw new Error("Too many worksheets");if(n&&e.SheetNames.indexOf(r)>=0){var s=r.match(/(^.*?)(\d+)$/);a=s&&+s[2]||0;var i=s&&s[1]||r;for(++a;a<=65535&&-1!=e.SheetNames.indexOf(r=i+a);++a);}if(Rl(r),e.SheetNames.indexOf(r)>=0)throw new Error("Worksheet with name |"+r+"| already exists!");return e.SheetNames.push(r),e.Sheets[r]=t,r}function Mf(e,t,r){return t?(e.l={Target:t},r&&(e.l.Tooltip=r)):delete e.l,e}var Uf,Bf={encode_col:qr,encode_row:Yr,encode_cell:Jr,encode_range:en,decode_col:Kr,decode_row:Xr,split_cell:function(e){return e.replace(/(\$?[A-Z]*)(\$?\d*)/,"$1,$2").split(",")},decode_cell:Qr,decode_range:Zr,format_cell:rn,sheet_add_aoa:an,sheet_add_json:Df,sheet_add_dom:Sc,aoa_to_sheet:sn,json_to_sheet:function(e,t){return Df(null,e,t)},table_to_sheet:Ec,table_to_book:function(e,t){return nn(Ec(e,t),t)},sheet_to_csv:If,sheet_to_txt:Pf,sheet_to_json:Of,sheet_to_html:Tc,sheet_to_formulae:function(e){var t,r="",n="";if(null==e||null==e["!ref"])return[];var a,s=tn(e["!ref"]),i="",o=[],l=[],c=Array.isArray(e);for(a=s.s.c;a<=s.e.c;++a)o[a]=qr(a);for(var f=s.s.r;f<=s.e.r;++f)for(i=Yr(f),a=s.s.c;a<=s.e.c;++a)if(r=o[a]+i,n="",void 0!==(t=c?(e[f]||[])[a]:e[r])){if(null!=t.F){if(r=t.F,!t.f)continue;n=t.f,-1==r.indexOf(":")&&(r=r+":"+r)}if(null!=t.f)n=t.f;else{if("z"==t.t)continue;if("n"==t.t&&null!=t.v)n=""+t.v;else if("b"==t.t)n=t.v?"TRUE":"FALSE";else if(void 0!==t.w)n="'"+t.w;else{if(void 0===t.v)continue;n="s"==t.t?"'"+t.v:""+t.v}}l[l.length]=r+"="+n}return l},sheet_to_row_object_array:Of,sheet_get_cell:Ff,book_new:function(){return{SheetNames:[],Sheets:{}}},book_append_sheet:Lf,book_set_sheet_visibility:function(e,t,r){e.Workbook||(e.Workbook={}),e.Workbook.Sheets||(e.Workbook.Sheets=[]);var n=function(e,t){if("number"==typeof t){if(t>=0&&e.SheetNames.length>t)return t;throw new Error("Cannot find sheet # "+t)}if("string"==typeof t){var r=e.SheetNames.indexOf(t);if(r>-1)return r;throw new Error("Cannot find sheet name |"+t+"|")}throw new Error("Cannot find sheet |"+t+"|")}(e,t);switch(e.Workbook.Sheets[n]||(e.Workbook.Sheets[n]={}),r){case 0:case 1:case 2:break;default:throw new Error("Bad sheet visibility setting "+r)}e.Workbook.Sheets[n].Hidden=r},cell_set_number_format:function(e,t){return e.z=t,e},cell_set_hyperlink:Mf,cell_set_internal_link:function(e,t,r){return Mf(e,"#"+t,r)},cell_add_comment:function(e,t,r){e.c||(e.c=[]),e.c.push({t,a:r||"SheetJS"})},sheet_set_array_formula:function(e,t,r,n){for(var a="string"!=typeof t?t:tn(t),s="string"==typeof t?t:en(t),i=a.s.r;i<=a.e.r;++i)for(var o=a.s.c;o<=a.e.c;++o){var l=Ff(e,i,o);l.t="n",l.F=s,delete l.v,i==a.s.r&&o==a.s.c&&(l.f=r,n&&(l.D=!0))}return e},consts:{SHEET_VISIBLE:0,SHEET_HIDDEN:1,SHEET_VERY_HIDDEN:2}},zf={to_json:function(e,t){var r=Uf({objectMode:!0});if(null==e||null==e["!ref"])return r.push(null),r;var n={t:"n",v:0},a=0,s=1,i=[],o=0,l="",c={s:{r:0,c:0},e:{r:0,c:0}},f=t||{},u=null!=f.range?f.range:e["!ref"];switch(1===f.header?a=1:"A"===f.header?a=2:Array.isArray(f.header)&&(a=3),typeof u){case"string":c=tn(u);break;case"number":(c=tn(e["!ref"])).s.r=u;break;default:c=u}a>0&&(s=0);var h=Yr(c.s.r),d=[],p=0,m=Array.isArray(e),g=c.s.r,v=0,b={};m&&!e[g]&&(e[g]=[]);var w=f.skipHidden&&e["!cols"]||[],y=f.skipHidden&&e["!rows"]||[];for(v=c.s.c;v<=c.e.c;++v)if(!(w[v]||{}).hidden)switch(d[v]=qr(v),n=m?e[g][v]:e[d[v]+h],a){case 1:i[v]=v-c.s.c;break;case 2:i[v]=d[v];break;case 3:i[v]=f.header[v-c.s.c];break;default:if(null==n&&(n={w:"__EMPTY",t:"s"}),l=o=rn(n,null,f),p=b[o]||0){do{l=o+"_"+p++}while(b[l]);b[o]=p,b[l]=1}else b[o]=1;i[v]=l}return g=c.s.r+s,r._read=function(){for(;g<=c.e.r;)if(!(y[g-1]||{}).hidden){var t=Af(e,c,g,d,a,i,m,f);if(++g,!1===t.isempty||(1===a?!1!==f.blankrows:f.blankrows))return void r.push(t.row)}return r.push(null)},r},to_html:function(e,t){var r=Uf(),n=t||{},a=null!=n.header?n.header:wc,s=null!=n.footer?n.footer:yc;r.push(a);var i=Zr(e["!ref"]);n.dense=Array.isArray(e),r.push(kc(0,0,n));var o=i.s.r,l=!1;return r._read=function(){if(o>i.e.r)return l||(l=!0,r.push("</table>"+s)),r.push(null);for(;o<=i.e.r;){r.push(bc(e,i,o,n)),++o;break}},r},to_csv:function(e,t){var r=Uf(),n=null==t?{}:t;if(null==e||null==e["!ref"])return r.push(null),r;var a=tn(e["!ref"]),s=void 0!==n.FS?n.FS:",",i=s.charCodeAt(0),o=void 0!==n.RS?n.RS:"\n",l=o.charCodeAt(0),c=new RegExp(("|"==s?"\\|":s)+"+$"),f="",u=[];n.dense=Array.isArray(e);for(var h=n.skipHidden&&e["!cols"]||[],d=n.skipHidden&&e["!rows"]||[],p=a.s.c;p<=a.e.c;++p)(h[p]||{}).hidden||(u[p]=qr(p));var m=a.s.r,g=!1,v=0;return r._read=function(){if(!g)return g=!0,r.push("\ufeff");for(;m<=a.e.r;)if(++m,!(d[m-1]||{}).hidden&&null!=(f=Nf(e,a,m-1,u,i,l,s,n))&&(n.strip&&(f=f.replace(c,"")),f||!1!==n.blankrows))return r.push((v++?o:"")+f);return r.push(null)},r},set_readable:function(e){Uf=e}};const Wf=n}},t={};function r(n){var a=t[n];if(void 0!==a)return a.exports;var s=t[n]={exports:{}};return e[n].call(s.exports,s,s.exports,r),s.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.nc=void 0,r(629)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,